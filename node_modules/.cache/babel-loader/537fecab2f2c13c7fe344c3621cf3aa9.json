{"ast":null,"code":"var _jsxFileName = \"/Users/lttttoai/Documents/GitHub/carovn/src/containers/Users/InforUser.js\";\n\n/* eslint-disable react/jsx-props-no-spreading */\n\n/* eslint-disable react/state-in-constructor */\nimport React from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { Form, Input, Icon } from 'antd';\nimport { registerAsync } from '../../modules/Register/actions/index';\n\nclass RegistrationForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.emitEmpty = () => {\n      this.userNameInput.focus();\n      this.setState({\n        userName: ''\n      });\n    };\n\n    this.onChangeUserName = e => {\n      this.setState({\n        userName: e.target.value\n      });\n    };\n\n    this.state = {\n      userName: ''\n    };\n  }\n\n  render() {\n    const userName = this.state.userName;\n    const suffix = userName ? React.createElement(Icon, {\n      type: \"close-circle\",\n      onClick: this.emitEmpty,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }) : null;\n    return React.createElement(Input, {\n      placeholder: \"Enter your userName\",\n      prefix: React.createElement(Icon, {\n        type: \"user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }),\n      suffix: suffix,\n      value: userName,\n      onChange: this.onChangeUserName,\n      ref: node => this.userNameInput = node,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst form = Form.create()(RegistrationForm);\n\nconst mapStateToProps = state => ({\n  registering: state.registering,\n  user: state.login.user\n});\n\nconst matchDispatchToProps = dispatch => ({\n  registerAsync: (name, email, password) => dispatch(registerAsync(name, email, password))\n});\n\nexport default connect(mapStateToProps, matchDispatchToProps)(form);","map":{"version":3,"sources":["/Users/lttttoai/Documents/GitHub/carovn/src/containers/Users/InforUser.js"],"names":["React","axios","connect","Form","Input","Icon","registerAsync","RegistrationForm","Component","constructor","props","emitEmpty","userNameInput","focus","setState","userName","onChangeUserName","e","target","value","state","render","suffix","node","form","create","mapStateToProps","registering","user","login","matchDispatchToProps","dispatch","name","email","password"],"mappings":";;AAAA;;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,IAAtB,QAAkC,MAAlC;AACA,SAASC,aAAT,QAA8B,sCAA9B;;AAEA,MAAMC,gBAAN,SAA+BP,KAAK,CAACQ,SAArC,CAA+C;AAC7CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAOnBC,SAPmB,GAOP,MAAM;AAChB,WAAKC,aAAL,CAAmBC,KAAnB;AACA,WAAKC,QAAL,CAAc;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACD,KAVkB;;AAAA,SAYnBC,gBAZmB,GAYAC,CAAC,IAAI;AACtB,WAAKH,QAAL,CAAc;AAAEC,QAAAA,QAAQ,EAAEE,CAAC,CAACC,MAAF,CAASC;AAArB,OAAd;AACD,KAdkB;;AAEjB,SAAKC,KAAL,GAAa;AACXL,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGD;;AAWDM,EAAAA,MAAM,GAAG;AAAA,UACCN,QADD,GACc,KAAKK,KADnB,CACCL,QADD;AAEP,UAAMO,MAAM,GAAGP,QAAQ,GACrB,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,cAAX;AAA0B,MAAA,OAAO,EAAE,KAAKJ,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADqB,GAEnB,IAFJ;AAGA,WACE,oBAAC,KAAD;AACE,MAAA,WAAW,EAAC,qBADd;AAEE,MAAA,MAAM,EAAE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFV;AAGE,MAAA,MAAM,EAAEW,MAHV;AAIE,MAAA,KAAK,EAAEP,QAJT;AAKE,MAAA,QAAQ,EAAE,KAAKC,gBALjB;AAME,MAAA,GAAG,EAAEO,IAAI,IAAK,KAAKX,aAAL,GAAqBW,IANrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAUD;;AAhC4C;;AAmC/C,MAAMC,IAAI,GAAGrB,IAAI,CAACsB,MAAL,GAAclB,gBAAd,CAAb;;AAEA,MAAMmB,eAAe,GAAGN,KAAK,KAAK;AAChCO,EAAAA,WAAW,EAAEP,KAAK,CAACO,WADa;AAEhCC,EAAAA,IAAI,EAAER,KAAK,CAACS,KAAN,CAAYD;AAFc,CAAL,CAA7B;;AAKA,MAAME,oBAAoB,GAAGC,QAAQ,KAAK;AACxCzB,EAAAA,aAAa,EAAE,CAAC0B,IAAD,EAAOC,KAAP,EAAcC,QAAd,KACbH,QAAQ,CAACzB,aAAa,CAAC0B,IAAD,EAAOC,KAAP,EAAcC,QAAd,CAAd;AAF8B,CAAL,CAArC;;AAKA,eAAehC,OAAO,CACpBwB,eADoB,EAEpBI,oBAFoB,CAAP,CAGbN,IAHa,CAAf","sourcesContent":["/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable react/state-in-constructor */\nimport React from 'react';\nimport axios from 'axios';\n\nimport { connect } from 'react-redux';\nimport { Form, Input, Icon } from 'antd';\nimport { registerAsync } from '../../modules/Register/actions/index';\n\nclass RegistrationForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userName: ''\n    };\n  }\n\n  emitEmpty = () => {\n    this.userNameInput.focus();\n    this.setState({ userName: '' });\n  };\n\n  onChangeUserName = e => {\n    this.setState({ userName: e.target.value });\n  };\n\n  render() {\n    const { userName } = this.state;\n    const suffix = userName ? (\n      <Icon type=\"close-circle\" onClick={this.emitEmpty} />\n    ) : null;\n    return (\n      <Input\n        placeholder=\"Enter your userName\"\n        prefix={<Icon type=\"user\" />}\n        suffix={suffix}\n        value={userName}\n        onChange={this.onChangeUserName}\n        ref={node => (this.userNameInput = node)}\n      />\n    );\n  }\n}\n\nconst form = Form.create()(RegistrationForm);\n\nconst mapStateToProps = state => ({\n  registering: state.registering,\n  user: state.login.user\n});\n\nconst matchDispatchToProps = dispatch => ({\n  registerAsync: (name, email, password) =>\n    dispatch(registerAsync(name, email, password))\n});\n\nexport default connect(\n  mapStateToProps,\n  matchDispatchToProps\n)(form);\n"]},"metadata":{},"sourceType":"module"}