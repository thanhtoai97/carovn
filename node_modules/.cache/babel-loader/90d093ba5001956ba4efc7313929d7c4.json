{"ast":null,"code":"import _slicedToArray from \"/Users/lttttoai/Documents/GitHub/carovn/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/lttttoai/Documents/GitHub/carovn/src/containers/Game.js\";\n\n/* eslint-disable class-methods-use-this */\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport React from 'react';\nimport Board from '../components/Board';\nimport { playerMove, timeTravel, toggleHistory, newGame, endGame } from '../acctions/gameAction';\nimport TimeTravel from '../components/TimeTravel';\nimport '../style/App.css';\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.playerMove = this.playerMove.bind(this);\n    this.calculateWinwer = this.calculateWinwer.bind(this);\n    this.movesList = this.movesList.bind(this);\n    this.gameStatus = this.gameStatus.bind(this);\n  }\n\n  playerMove(move) {\n    const _this$props = this.props,\n          history = _this$props.history,\n          stepNumber = _this$props.stepNumber,\n          currentBoard = _this$props.currentBoard,\n          xIsNext = _this$props.xIsNext;\n    const historys = history.slice(0, stepNumber + 1);\n    const board = currentBoard.slice();\n\n    if (this.indicateVictory(board).winner || board[move] || stepNumber === 20) {\n      return;\n    }\n\n    board[move] = xIsNext ? 'X' : 'O';\n    playerMove(historys, board); // Redux action\n  }\n\n  calculateWinwer(squares) {\n    const streaks = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n    for (let i = 0; i < streaks.length; i += 1) {\n      const _streaks$i = _slicedToArray(streaks[i], 3),\n            a = _streaks$i[0],\n            b = _streaks$i[1],\n            c = _streaks$i[2];\n\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return {\n          winner: squares[a],\n          winningLine: [a, b, c]\n        };\n      }\n    }\n\n    return {\n      winner: null,\n      winningLine: [null, null, null]\n    };\n  }\n\n  movesList(history) {\n    const _this$props2 = this.props,\n          currentBoard = _this$props2.currentBoard,\n          stepNumber = _this$props2.stepNumber;\n\n    const _this$calculateWinwer = this.calculateWinwer(currentBoard.slice()),\n          winner = _this$calculateWinwer.winner;\n\n    const gameStatus = this.gameStatus(winner);\n    const endOfGame = gameStatus.endOfGame;\n    return history.map((step, move) => {\n      const player = move % 2 ? ' - X' : ' - O';\n      const description = move ? \"Move #\".concat(move).concat(player) : 'Game Start';\n      return React.createElement(\"li\", {\n        key: move.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        onClick: () => timeTravel(move, endOfGame),\n        className: stepNumber === move ? 'current_step' : '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, description));\n    });\n  }\n\n  gameStatus(winner) {\n    let status;\n    let endgame;\n    const _this$props3 = this.props,\n          stepNumber = _this$props3.stepNumber,\n          xIsNext = _this$props3.xIsNext;\n\n    if (winner) {\n      status = \"\".concat(winner, \" is the winner!\");\n      endgame = true;\n    } else if (!winner && stepNumber === 20) {\n      status = \"It's a Draw!\";\n      endgame = true;\n    } else {\n      status = \"\".concat(xIsNext ? 'X' : 'O', \"'s turn.\");\n      endgame = false;\n    }\n\n    return {\n      status,\n      endgame\n    };\n  }\n\n  sortHistory() {\n    const isDescending = this.state.isDescending;\n    this.setState({\n      isDescending: !isDescending\n    });\n  }\n\n  render() {\n    const _this$props4 = this.props,\n          history = _this$props4.history,\n          currentBoard = _this$props4.currentBoard,\n          xIsNext = _this$props4.xIsNext,\n          showHistory = _this$props4.showHistory;\n    const winner = this.calculateWinwer(currentBoard);\n    const winningRow = this.calculateWinwer(currentBoard);\n    const moves = this.movesList(history);\n    const endOfGame = this.gameStatus(winner).endGame;\n    return React.createElement(\"div\", {\n      className: \"game_page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"left_col_game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => newGame(),\n      className: \"exit_game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"New Game\")), React.createElement(\"div\", {\n      className: \"mid_col_game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(Board, {\n      squares: currentBoard,\n      gameEnd: endOfGame,\n      xIsNext: xIsNext,\n      playerMove: i => this.playerMove(i),\n      winningRow: winningRow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"right_col_game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(TimeTravel, {\n      moves: moves,\n      showHistory: showHistory,\n      toggleHistory: toggleHistory,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  history: state.game.history,\n  currentBoard: state.game.currentBoard,\n  xIsNext: state.game.xIsNext,\n  stepNumber: state.game.stepNumber,\n  timeTraveled: state.game.timeTraveled,\n  showHistory: state.game.showHistory,\n  endOfGame: state.game.endOfGame\n});\n\nconst matchDispatchToProps = dispatch => {\n  return bindActionCreators({\n    playerMove,\n    toggleHistory,\n    timeTravel,\n    newGame,\n    endGame\n  }, dispatch);\n};\n\nexport default withRouter(connect(mapStateToProps, matchDispatchToProps)(Game)); // export default Game;","map":{"version":3,"sources":["/Users/lttttoai/Documents/GitHub/carovn/src/containers/Game.js"],"names":["connect","bindActionCreators","withRouter","React","Board","playerMove","timeTravel","toggleHistory","newGame","endGame","TimeTravel","Game","Component","constructor","props","bind","calculateWinwer","movesList","gameStatus","move","history","stepNumber","currentBoard","xIsNext","historys","slice","board","indicateVictory","winner","squares","streaks","i","length","a","b","c","winningLine","endOfGame","map","step","player","description","id","status","endgame","sortHistory","isDescending","state","setState","render","showHistory","winningRow","moves","mapStateToProps","game","timeTraveled","matchDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["/* eslint-disable class-methods-use-this */\n\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom';\n\nimport React from 'react';\nimport Board from '../components/Board';\n\nimport {\n  playerMove,\n  timeTravel,\n  toggleHistory,\n  newGame,\n  endGame\n} from '../acctions/gameAction';\nimport TimeTravel from '../components/TimeTravel';\nimport '../style/App.css';\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.playerMove = this.playerMove.bind(this);\n    this.calculateWinwer = this.calculateWinwer.bind(this);\n    this.movesList = this.movesList.bind(this);\n    this.gameStatus = this.gameStatus.bind(this);\n  }\n\n  playerMove(move) {\n    const { history, stepNumber, currentBoard, xIsNext } = this.props;\n    const historys = history.slice(0, stepNumber + 1);\n    const board = currentBoard.slice();\n    if (\n      this.indicateVictory(board).winner ||\n      board[move] ||\n      stepNumber === 20\n    ) {\n      return;\n    }\n    board[move] = xIsNext ? 'X' : 'O';\n    playerMove(historys, board); // Redux action\n  }\n\n  calculateWinwer(squares) {\n    const streaks = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6]\n    ];\n    for (let i = 0; i < streaks.length; i += 1) {\n      const [a, b, c] = streaks[i];\n      if (\n        squares[a] &&\n        squares[a] === squares[b] &&\n        squares[a] === squares[c]\n      ) {\n        return {\n          winner: squares[a],\n          winningLine: [a, b, c]\n        };\n      }\n    }\n    return {\n      winner: null,\n      winningLine: [null, null, null]\n    };\n  }\n\n  movesList(history) {\n    const { currentBoard, stepNumber } = this.props;\n    const { winner } = this.calculateWinwer(currentBoard.slice());\n    const gameStatus = this.gameStatus(winner);\n    const { endOfGame } = gameStatus;\n    return history.map((step, move) => {\n      const player = move % 2 ? ' - X' : ' - O';\n      const description = move ? `Move #${move}${player}` : 'Game Start';\n      return (\n        <li key={move.id}>\n          <button\n            type=\"button\"\n            onClick={() => timeTravel(move, endOfGame)}\n            className={stepNumber === move ? 'current_step' : ''}\n          >\n            {description}\n          </button>\n        </li>\n      );\n    });\n  }\n\n  gameStatus(winner) {\n    let status;\n    let endgame;\n    const { stepNumber, xIsNext } = this.props;\n    if (winner) {\n      status = `${winner} is the winner!`;\n      endgame = true;\n    } else if (!winner && stepNumber === 20) {\n      status = \"It's a Draw!\";\n      endgame = true;\n    } else {\n      status = `${xIsNext ? 'X' : 'O'}'s turn.`;\n      endgame = false;\n    }\n    return { status, endgame };\n  }\n\n  sortHistory() {\n    const { isDescending } = this.state;\n    this.setState({\n      isDescending: !isDescending\n    });\n  }\n\n  render() {\n    const { history, currentBoard, xIsNext, showHistory } = this.props;\n    const winner = this.calculateWinwer(currentBoard);\n    const winningRow = this.calculateWinwer(currentBoard);\n    const moves = this.movesList(history);\n    const endOfGame = this.gameStatus(winner).endGame;\n\n    return (\n      <div className=\"game_page\">\n        <div className=\"left_col_game\">\n          <button type=\"button\" onClick={() => newGame()} className=\"exit_game\">\n            New Game\n          </button>\n        </div>\n        <div className=\"mid_col_game\">\n          <Board\n            squares={currentBoard}\n            gameEnd={endOfGame}\n            xIsNext={xIsNext}\n            playerMove={i => this.playerMove(i)}\n            winningRow={winningRow}\n          />\n        </div>\n        <div className=\"right_col_game\">\n          <TimeTravel\n            moves={moves}\n            showHistory={showHistory}\n            toggleHistory={toggleHistory}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  history: state.game.history,\n  currentBoard: state.game.currentBoard,\n  xIsNext: state.game.xIsNext,\n  stepNumber: state.game.stepNumber,\n  timeTraveled: state.game.timeTraveled,\n  showHistory: state.game.showHistory,\n  endOfGame: state.game.endOfGame\n});\nconst matchDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      playerMove,\n      toggleHistory,\n      timeTravel,\n      newGame,\n      endGame\n    },\n    dispatch\n  );\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    matchDispatchToProps\n  )(Game)\n);\n// export default Game;\n"]},"metadata":{},"sourceType":"module"}