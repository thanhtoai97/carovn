{"ast":null,"code":"var _jsxFileName = \"/Users/lttttoai/Documents/GitHub/carovn/src/components/Board.js\";\n\n/* eslint-disable react/no-unused-state */\nimport React from 'react';\nimport Square from './Square';\n/*\nconst Board = props => {\n  const { squares, xIsNext, onClick } = props;\n  return (\n    <div className=\"board-row\">\n      {squares.map((value, square) => {\n        return (\n          <Square\n            key={square.id}\n            id={square}\n            className=\"square\"\n            xIsNext={xIsNext}\n            value={squares[square]}\n            onClick={() => onClick(square)}\n          />\n        );\n      })}\n    </div>\n  );\n};\n*/\n\n/*\nclass Board extends React.Component {\n  // Create the 3 x 3 board\n  createBoard(row, col) {\n    const board = [];\n    let cellCounter = 0;\n\n    for (let i = 0; i < row; i += 1) {\n      const columns = [];\n      for (let j = 0; j < col; j += 1) {\n        columns.push(this.renderSquare((cellCounter += 1)));\n      }\n      board.push(\n        <div key={i} className=\"board-row\">\n          {columns}\n        </div>\n      );\n    }\n\n    return board;\n  }\n\n  renderSquare(i) {\n    const { squares, onClick } = this.props;\n    return (\n      <Square\n        className=\"square\"\n        key={i}\n        value={squares[i]}\n        onClick={() => onClick(i)}\n      />\n    );\n  }\n\n  render() {\n    return <div>{this.createBoard(20, 20)}</div>;\n  }\n}\n*/\n\nconst Board = props => {\n  const renderSquare = move => {\n    const winner = props.winner,\n          squares = props.squares,\n          onClick = props.onClick;\n    const winningSquare = !!(winner && winner.includes(move));\n    return React.createElement(Square, {\n      key: \"square \".concat(move),\n      value: squares[move],\n      onClick: () => onClick(move),\n      winningSquare: winningSquare,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    });\n  };\n\n  const renderSquares = n => {\n    const squares = [];\n\n    for (let i = n; i < n + 20; i += 1) {\n      squares.push(renderSquare(i));\n    }\n\n    return squares;\n  };\n\n  const renderRows = i => {\n    return React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, renderSquares(i));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, renderRows(0), renderRows(20), renderRows(40), renderRows(60), renderRows(80), renderRows(100), renderRows(120), renderRows(140), renderRows(160), renderRows(180), renderRows(200), renderRows(220), renderRows(240), renderRows(260), renderRows(280), renderRows(300), renderRows(320), renderRows(340), renderRows(360), renderRows(380));\n};\n\nexport default Board;","map":{"version":3,"sources":["/Users/lttttoai/Documents/GitHub/carovn/src/components/Board.js"],"names":["React","Square","Board","props","renderSquare","move","winner","squares","onClick","winningSquare","includes","renderSquares","n","i","push","renderRows"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA;;;;;;;;;;;;;;;;;;;;;;AAsBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AACrB,QAAMC,YAAY,GAAGC,IAAI,IAAI;AAAA,UACnBC,MADmB,GACUH,KADV,CACnBG,MADmB;AAAA,UACXC,OADW,GACUJ,KADV,CACXI,OADW;AAAA,UACFC,OADE,GACUL,KADV,CACFK,OADE;AAE3B,UAAMC,aAAa,GAAG,CAAC,EAAEH,MAAM,IAAIA,MAAM,CAACI,QAAP,CAAgBL,IAAhB,CAAZ,CAAvB;AACA,WACE,oBAAC,MAAD;AACE,MAAA,GAAG,mBAAYA,IAAZ,CADL;AAEE,MAAA,KAAK,EAAEE,OAAO,CAACF,IAAD,CAFhB;AAGE,MAAA,OAAO,EAAE,MAAMG,OAAO,CAACH,IAAD,CAHxB;AAIE,MAAA,aAAa,EAAEI,aAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAQD,GAXD;;AAaA,QAAME,aAAa,GAAGC,CAAC,IAAI;AACzB,UAAML,OAAO,GAAG,EAAhB;;AACA,SAAK,IAAIM,CAAC,GAAGD,CAAb,EAAgBC,CAAC,GAAGD,CAAC,GAAG,EAAxB,EAA4BC,CAAC,IAAI,CAAjC,EAAoC;AAClCN,MAAAA,OAAO,CAACO,IAAR,CAAaV,YAAY,CAACS,CAAD,CAAzB;AACD;;AACD,WAAON,OAAP;AACD,GAND;;AAQA,QAAMQ,UAAU,GAAGF,CAAC,IAAI;AACtB,WAAO;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BF,aAAa,CAACE,CAAD,CAAzC,CAAP;AACD,GAFD;;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,UAAU,CAAC,CAAD,CADb,EAEGA,UAAU,CAAC,EAAD,CAFb,EAGGA,UAAU,CAAC,EAAD,CAHb,EAIGA,UAAU,CAAC,EAAD,CAJb,EAKGA,UAAU,CAAC,EAAD,CALb,EAMGA,UAAU,CAAC,GAAD,CANb,EAOGA,UAAU,CAAC,GAAD,CAPb,EAQGA,UAAU,CAAC,GAAD,CARb,EASGA,UAAU,CAAC,GAAD,CATb,EAUGA,UAAU,CAAC,GAAD,CAVb,EAWGA,UAAU,CAAC,GAAD,CAXb,EAYGA,UAAU,CAAC,GAAD,CAZb,EAaGA,UAAU,CAAC,GAAD,CAbb,EAcGA,UAAU,CAAC,GAAD,CAdb,EAeGA,UAAU,CAAC,GAAD,CAfb,EAgBGA,UAAU,CAAC,GAAD,CAhBb,EAiBGA,UAAU,CAAC,GAAD,CAjBb,EAkBGA,UAAU,CAAC,GAAD,CAlBb,EAmBGA,UAAU,CAAC,GAAD,CAnBb,EAoBGA,UAAU,CAAC,GAAD,CApBb,CADF;AAwBD,CAlDD;;AAoDA,eAAeb,KAAf","sourcesContent":["/* eslint-disable react/no-unused-state */\nimport React from 'react';\nimport Square from './Square';\n\n/*\nconst Board = props => {\n  const { squares, xIsNext, onClick } = props;\n  return (\n    <div className=\"board-row\">\n      {squares.map((value, square) => {\n        return (\n          <Square\n            key={square.id}\n            id={square}\n            className=\"square\"\n            xIsNext={xIsNext}\n            value={squares[square]}\n            onClick={() => onClick(square)}\n          />\n        );\n      })}\n    </div>\n  );\n};\n*/\n\n/*\nclass Board extends React.Component {\n  // Create the 3 x 3 board\n  createBoard(row, col) {\n    const board = [];\n    let cellCounter = 0;\n\n    for (let i = 0; i < row; i += 1) {\n      const columns = [];\n      for (let j = 0; j < col; j += 1) {\n        columns.push(this.renderSquare((cellCounter += 1)));\n      }\n      board.push(\n        <div key={i} className=\"board-row\">\n          {columns}\n        </div>\n      );\n    }\n\n    return board;\n  }\n\n  renderSquare(i) {\n    const { squares, onClick } = this.props;\n    return (\n      <Square\n        className=\"square\"\n        key={i}\n        value={squares[i]}\n        onClick={() => onClick(i)}\n      />\n    );\n  }\n\n  render() {\n    return <div>{this.createBoard(20, 20)}</div>;\n  }\n}\n*/\n\nconst Board = props => {\n  const renderSquare = move => {\n    const { winner, squares, onClick } = props;\n    const winningSquare = !!(winner && winner.includes(move));\n    return (\n      <Square\n        key={`square ${move}`}\n        value={squares[move]}\n        onClick={() => onClick(move)}\n        winningSquare={winningSquare}\n      />\n    );\n  };\n\n  const renderSquares = n => {\n    const squares = [];\n    for (let i = n; i < n + 20; i += 1) {\n      squares.push(renderSquare(i));\n    }\n    return squares;\n  };\n\n  const renderRows = i => {\n    return <div className=\"board-row\">{renderSquares(i)}</div>;\n  };\n\n  return (\n    <div>\n      {renderRows(0)}\n      {renderRows(20)}\n      {renderRows(40)}\n      {renderRows(60)}\n      {renderRows(80)}\n      {renderRows(100)}\n      {renderRows(120)}\n      {renderRows(140)}\n      {renderRows(160)}\n      {renderRows(180)}\n      {renderRows(200)}\n      {renderRows(220)}\n      {renderRows(240)}\n      {renderRows(260)}\n      {renderRows(280)}\n      {renderRows(300)}\n      {renderRows(320)}\n      {renderRows(340)}\n      {renderRows(360)}\n      {renderRows(380)}\n    </div>\n  );\n};\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}