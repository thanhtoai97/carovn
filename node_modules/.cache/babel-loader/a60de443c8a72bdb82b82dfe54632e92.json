{"ast":null,"code":"import _slicedToArray from \"/Users/lttttoai/Documents/GitHub/carovn/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/lttttoai/Documents/GitHub/carovn/src/containers/Game.js\";\n\n/* eslint-disable class-methods-use-this */\nimport { connect } from 'react-redux'; // import { bindActionCreators } from 'redux';\n\nimport { withRouter } from 'react-router-dom';\nimport React from 'react';\nimport Board from '../components/Board';\nimport { playerMove, timeTravel, toggleHistory, newGame } from '../acctions/gameAction';\nimport TimeTravel from '../components/TimeTravel';\nimport '../style/App.css';\n\nclass Game extends React.Component {\n  /*\n  constructor(props) {\n    super(props);\n    // this.playerMove = this.playerMove.bind(this);\n    this.calculateWinwer = this.calculateWinwer.bind(this);\n    this.movesList = this.movesList.bind(this);\n    this.gameStatus = this.gameStatus.bind(this);\n  }\n  */\n\n  /*\n  playerMove(move) {\n    const { history, stepNumber, xIsNext, currentBoard } = this.props;\n    const historys = history.slice(0, stepNumber + 1);\n    const squares = currentBoard.slice();\n     if (this.calculateWinwer(squares) || squares[move]) {\n      return;\n    }\n     squares[move] = xIsNext ? 'X' : 'O';\n    playerMove(historys, squares);\n  }\n  */\n  playerMove(i) {\n    const _this$props = this.props,\n          history = _this$props.history,\n          stepNumber = _this$props.stepNumber,\n          xIsNext = _this$props.xIsNext;\n    const historys = history.slice(0, stepNumber + 1);\n    const current = historys[historys.length - 1];\n    const squaress = current.squares.slice();\n\n    if (this.calculateWinwer(squaress) || squaress[i]) {\n      return;\n    }\n\n    squaress[i] = xIsNext ? 'X' : 'O';\n    playerMove(historys, squaress);\n  }\n\n  calculateWinwer(squares) {\n    const streaks = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n    for (let i = 0; i < streaks.length; i += 1) {\n      const _streaks$i = _slicedToArray(streaks[i], 3),\n            a = _streaks$i[0],\n            b = _streaks$i[1],\n            c = _streaks$i[2];\n\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return {\n          winner: squares[a],\n          winningLine: [a, b, c]\n        };\n      }\n    }\n\n    return {\n      winner: null,\n      winningLine: [null, null, null]\n    };\n  }\n\n  movesList(history) {\n    const _this$props2 = this.props,\n          currentBoard = _this$props2.currentBoard,\n          stepNumber = _this$props2.stepNumber;\n\n    const _this$calculateWinwer = this.calculateWinwer(currentBoard.slice()),\n          winner = _this$calculateWinwer.winner;\n\n    const gameStatus = this.gameStatus(winner);\n    const endOfGame = gameStatus.endOfGame;\n    return history.map((step, move) => {\n      const player = move % 2 ? ' - X' : ' - O';\n      const description = move ? \"Go to move #\".concat(move).concat(player) : 'Go to game Start';\n      return React.createElement(\"li\", {\n        key: move.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        onClick: () => timeTravel(move, endOfGame),\n        className: stepNumber === move ? 'current_step' : '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, description));\n    });\n  }\n\n  gameStatus(winner) {\n    let status;\n    let endgame;\n    const _this$props3 = this.props,\n          stepNumber = _this$props3.stepNumber,\n          xIsNext = _this$props3.xIsNext;\n\n    if (winner) {\n      status = \"\".concat(winner, \" is the winner!\");\n      endgame = true;\n    } else if (!winner && stepNumber === 20) {\n      status = \"It's a Draw!\";\n      endgame = true;\n    } else {\n      status = \"\".concat(xIsNext ? 'X' : 'O', \"'s turn.\");\n      endgame = false;\n    }\n\n    return {\n      status,\n      endgame\n    };\n  }\n\n  sortHistory() {\n    const isDescending = this.props.isDescending;\n    this.sortHistory(isDescending);\n  }\n\n  render() {\n    const _this$props4 = this.props,\n          history = _this$props4.history,\n          xIsNext = _this$props4.xIsNext,\n          showHistory = _this$props4.showHistory,\n          stepNumber = _this$props4.stepNumber,\n          isDescending = _this$props4.isDescending;\n    const current = history[stepNumber];\n\n    const _this$calculateWinwer2 = this.calculateWinwer(current.squares),\n          winner = _this$calculateWinwer2.winner;\n\n    const movess = this.movesList(history);\n    const moves = history.map((step, move) => {\n      const desc = move ? \"Go to move #\".concat(move) : 'Go to game start';\n      return React.createElement(\"li\", {\n        key: move.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        onClick: () => this.jumpTo(move),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, move === stepNumber ? React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, desc) : desc));\n    });\n    let status;\n\n    if (winner) {\n      status = \"Winner:\".concat(winner.player);\n    } else {\n      status = \"Next player: \".concat(xIsNext ? 'X' : 'O');\n    }\n\n    return React.createElement(\"div\", {\n      className: \"game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"left_col_game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => newGame(),\n      className: \"exit_game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"New Game\")), React.createElement(\"div\", {\n      className: \"game_board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(Board, {\n      winner: winner && winner.line,\n      squares: current.squares,\n      onClick: i => this.playerMove(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"right_col_game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(TimeTravel, {\n      moves: movess,\n      showHistory: showHistory,\n      toggleHistory: toggleHistory,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"game-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, status), React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, isDescending ? moves : moves.reverse()), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => this.sortHistory(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"Sort By: \", isDescending ? 'Descending' : 'Ascending')));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  history: state.game.history,\n  currentBoard: state.game.currentBoard,\n  xIsNext: state.game.xIsNext,\n  stepNumber: state.game.stepNumber,\n  timeTraveled: state.game.timeTraveled,\n  showHistory: state.game.showHistory,\n  endOfGame: state.game.endOfGame\n});\n\nconst matchDispatchToProps = dispatch => ({\n  playerMove: (history, squares) => dispatch(playerMove(history, squares))\n  /*\n  return bindActionCreators(\n    {\n      playerMove,\n      toggleHistory,\n      timeTravel,\n      newGame,\n      endGame\n    },\n    dispatch\n  );\n  */\n\n});\n\nexport default withRouter(connect(mapStateToProps, matchDispatchToProps)(Game)); // export default Game;","map":{"version":3,"sources":["/Users/lttttoai/Documents/GitHub/carovn/src/containers/Game.js"],"names":["connect","withRouter","React","Board","playerMove","timeTravel","toggleHistory","newGame","TimeTravel","Game","Component","i","props","history","stepNumber","xIsNext","historys","slice","current","length","squaress","squares","calculateWinwer","streaks","a","b","c","winner","winningLine","movesList","currentBoard","gameStatus","endOfGame","map","step","move","player","description","id","status","endgame","sortHistory","isDescending","render","showHistory","movess","moves","desc","jumpTo","line","reverse","mapStateToProps","state","game","timeTraveled","matchDispatchToProps","dispatch"],"mappings":";;;AAAA;AAEA,SAASA,OAAT,QAAwB,aAAxB,C,CACA;;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AAEA,SACEC,UADF,EAEEC,UAFF,EAGEC,aAHF,EAIEC,OAJF,QAKO,wBALP;AAMA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAO,kBAAP;;AAEA,MAAMC,IAAN,SAAmBP,KAAK,CAACQ,SAAzB,CAAmC;AACjC;;;;;;;;;;AAUA;;;;;;;;;;;;AAeAN,EAAAA,UAAU,CAACO,CAAD,EAAI;AAAA,wBAC6B,KAAKC,KADlC;AAAA,UACJC,OADI,eACJA,OADI;AAAA,UACKC,UADL,eACKA,UADL;AAAA,UACiBC,OADjB,eACiBA,OADjB;AAEZ,UAAMC,QAAQ,GAAGH,OAAO,CAACI,KAAR,CAAc,CAAd,EAAiBH,UAAU,GAAG,CAA9B,CAAjB;AACA,UAAMI,OAAO,GAAGF,QAAQ,CAACA,QAAQ,CAACG,MAAT,GAAkB,CAAnB,CAAxB;AACA,UAAMC,QAAQ,GAAGF,OAAO,CAACG,OAAR,CAAgBJ,KAAhB,EAAjB;;AAEA,QAAI,KAAKK,eAAL,CAAqBF,QAArB,KAAkCA,QAAQ,CAACT,CAAD,CAA9C,EAAmD;AACjD;AACD;;AACDS,IAAAA,QAAQ,CAACT,CAAD,CAAR,GAAcI,OAAO,GAAG,GAAH,GAAS,GAA9B;AACAX,IAAAA,UAAU,CAACY,QAAD,EAAWI,QAAX,CAAV;AACD;;AAEDE,EAAAA,eAAe,CAACD,OAAD,EAAU;AACvB,UAAME,OAAO,GAAG,CACd,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADc,EAEd,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFc,EAGd,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHc,EAId,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAJc,EAKd,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CALc,EAMd,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CANc,EAOd,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAPc,EAQd,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CARc,CAAhB;;AAUA,SAAK,IAAIZ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGY,OAAO,CAACJ,MAA5B,EAAoCR,CAAC,IAAI,CAAzC,EAA4C;AAAA,wCACxBY,OAAO,CAACZ,CAAD,CADiB;AAAA,YACnCa,CADmC;AAAA,YAChCC,CADgC;AAAA,YAC7BC,CAD6B;;AAE1C,UACEL,OAAO,CAACG,CAAD,CAAP,IACAH,OAAO,CAACG,CAAD,CAAP,KAAeH,OAAO,CAACI,CAAD,CADtB,IAEAJ,OAAO,CAACG,CAAD,CAAP,KAAeH,OAAO,CAACK,CAAD,CAHxB,EAIE;AACA,eAAO;AACLC,UAAAA,MAAM,EAAEN,OAAO,CAACG,CAAD,CADV;AAELI,UAAAA,WAAW,EAAE,CAACJ,CAAD,EAAIC,CAAJ,EAAOC,CAAP;AAFR,SAAP;AAID;AACF;;AACD,WAAO;AACLC,MAAAA,MAAM,EAAE,IADH;AAELC,MAAAA,WAAW,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb;AAFR,KAAP;AAID;;AAEDC,EAAAA,SAAS,CAAChB,OAAD,EAAU;AAAA,yBACoB,KAAKD,KADzB;AAAA,UACTkB,YADS,gBACTA,YADS;AAAA,UACKhB,UADL,gBACKA,UADL;;AAAA,kCAEE,KAAKQ,eAAL,CAAqBQ,YAAY,CAACb,KAAb,EAArB,CAFF;AAAA,UAETU,MAFS,yBAETA,MAFS;;AAGjB,UAAMI,UAAU,GAAG,KAAKA,UAAL,CAAgBJ,MAAhB,CAAnB;AAHiB,UAITK,SAJS,GAIKD,UAJL,CAITC,SAJS;AAKjB,WAAOnB,OAAO,CAACoB,GAAR,CAAY,CAACC,IAAD,EAAOC,IAAP,KAAgB;AACjC,YAAMC,MAAM,GAAGD,IAAI,GAAG,CAAP,GAAW,MAAX,GAAoB,MAAnC;AACA,YAAME,WAAW,GAAGF,IAAI,yBACLA,IADK,SACEC,MADF,IAEpB,kBAFJ;AAGA,aACE;AAAI,QAAA,GAAG,EAAED,IAAI,CAACG,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,OAAO,EAAE,MAAMjC,UAAU,CAAC8B,IAAD,EAAOH,SAAP,CAF3B;AAGE,QAAA,SAAS,EAAElB,UAAU,KAAKqB,IAAf,GAAsB,cAAtB,GAAuC,EAHpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKGE,WALH,CADF,CADF;AAWD,KAhBM,CAAP;AAiBD;;AAEDN,EAAAA,UAAU,CAACJ,MAAD,EAAS;AACjB,QAAIY,MAAJ;AACA,QAAIC,OAAJ;AAFiB,yBAGe,KAAK5B,KAHpB;AAAA,UAGTE,UAHS,gBAGTA,UAHS;AAAA,UAGGC,OAHH,gBAGGA,OAHH;;AAIjB,QAAIY,MAAJ,EAAY;AACVY,MAAAA,MAAM,aAAMZ,MAAN,oBAAN;AACAa,MAAAA,OAAO,GAAG,IAAV;AACD,KAHD,MAGO,IAAI,CAACb,MAAD,IAAWb,UAAU,KAAK,EAA9B,EAAkC;AACvCyB,MAAAA,MAAM,GAAG,cAAT;AACAC,MAAAA,OAAO,GAAG,IAAV;AACD,KAHM,MAGA;AACLD,MAAAA,MAAM,aAAMxB,OAAO,GAAG,GAAH,GAAS,GAAtB,aAAN;AACAyB,MAAAA,OAAO,GAAG,KAAV;AACD;;AACD,WAAO;AAAED,MAAAA,MAAF;AAAUC,MAAAA;AAAV,KAAP;AACD;;AAEDC,EAAAA,WAAW,GAAG;AAAA,UACJC,YADI,GACa,KAAK9B,KADlB,CACJ8B,YADI;AAEZ,SAAKD,WAAL,CAAiBC,YAAjB;AACD;;AAEDC,EAAAA,MAAM,GAAG;AAAA,yBAOH,KAAK/B,KAPF;AAAA,UAELC,OAFK,gBAELA,OAFK;AAAA,UAGLE,OAHK,gBAGLA,OAHK;AAAA,UAIL6B,WAJK,gBAILA,WAJK;AAAA,UAKL9B,UALK,gBAKLA,UALK;AAAA,UAML4B,YANK,gBAMLA,YANK;AASP,UAAMxB,OAAO,GAAGL,OAAO,CAACC,UAAD,CAAvB;;AATO,mCAUY,KAAKQ,eAAL,CAAqBJ,OAAO,CAACG,OAA7B,CAVZ;AAAA,UAUCM,MAVD,0BAUCA,MAVD;;AAWP,UAAMkB,MAAM,GAAG,KAAKhB,SAAL,CAAehB,OAAf,CAAf;AAEA,UAAMiC,KAAK,GAAGjC,OAAO,CAACoB,GAAR,CAAY,CAACC,IAAD,EAAOC,IAAP,KAAgB;AACxC,YAAMY,IAAI,GAAGZ,IAAI,yBAAkBA,IAAlB,IAA2B,kBAA5C;AACA,aACE;AAAI,QAAA,GAAG,EAAEA,IAAI,CAACG,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE,MAAM,KAAKU,MAAL,CAAYb,IAAZ,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,IAAI,KAAKrB,UAAT,GAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIiC,IAAJ,CAAtB,GAAsCA,IADzC,CADF,CADF;AAOD,KATa,CAAd;AAWA,QAAIR,MAAJ;;AACA,QAAIZ,MAAJ,EAAY;AACVY,MAAAA,MAAM,oBAAaZ,MAAM,CAACS,MAApB,CAAN;AACD,KAFD,MAEO;AACLG,MAAAA,MAAM,0BAAmBxB,OAAO,GAAG,GAAH,GAAS,GAAnC,CAAN;AACD;;AACD,WACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,MAAMR,OAAO,EAA5C;AAAgD,MAAA,SAAS,EAAC,WAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADF,EAME;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,MAAM,EAAEoB,MAAM,IAAIA,MAAM,CAACsB,IAD3B;AAEE,MAAA,OAAO,EAAE/B,OAAO,CAACG,OAFnB;AAGE,MAAA,OAAO,EAAEV,CAAC,IAAI,KAAKP,UAAL,CAAgBO,CAAhB,CAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CANF,EAaE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AACE,MAAA,KAAK,EAAEkC,MADT;AAEE,MAAA,WAAW,EAAED,WAFf;AAGE,MAAA,aAAa,EAAEtC,aAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAbF,EAoBE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMiC,MAAN,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKG,YAAY,GAAGI,KAAH,GAAWA,KAAK,CAACI,OAAN,EAA5B,CAFF,EAGE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,MAAM,KAAKT,WAAL,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACYC,YAAY,GAAG,YAAH,GAAkB,WAD1C,CAHF,CApBF,CADF;AA8BD;;AA/KgC;;AAkLnC,MAAMS,eAAe,GAAGC,KAAK,KAAK;AAChCvC,EAAAA,OAAO,EAAEuC,KAAK,CAACC,IAAN,CAAWxC,OADY;AAEhCiB,EAAAA,YAAY,EAAEsB,KAAK,CAACC,IAAN,CAAWvB,YAFO;AAGhCf,EAAAA,OAAO,EAAEqC,KAAK,CAACC,IAAN,CAAWtC,OAHY;AAIhCD,EAAAA,UAAU,EAAEsC,KAAK,CAACC,IAAN,CAAWvC,UAJS;AAKhCwC,EAAAA,YAAY,EAAEF,KAAK,CAACC,IAAN,CAAWC,YALO;AAMhCV,EAAAA,WAAW,EAAEQ,KAAK,CAACC,IAAN,CAAWT,WANQ;AAOhCZ,EAAAA,SAAS,EAAEoB,KAAK,CAACC,IAAN,CAAWrB;AAPU,CAAL,CAA7B;;AAUA,MAAMuB,oBAAoB,GAAGC,QAAQ,KAAK;AACxCpD,EAAAA,UAAU,EAAE,CAACS,OAAD,EAAUQ,OAAV,KAAsBmC,QAAQ,CAACpD,UAAU,CAACS,OAAD,EAAUQ,OAAV,CAAX;AAC1C;;;;;;;;;;;;;AAFwC,CAAL,CAArC;;AAgBA,eAAepB,UAAU,CACvBD,OAAO,CACLmD,eADK,EAELI,oBAFK,CAAP,CAGE9C,IAHF,CADuB,CAAzB,C,CAMA","sourcesContent":["/* eslint-disable class-methods-use-this */\n\nimport { connect } from 'react-redux';\n// import { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom';\n\nimport React from 'react';\nimport Board from '../components/Board';\n\nimport {\n  playerMove,\n  timeTravel,\n  toggleHistory,\n  newGame\n} from '../acctions/gameAction';\nimport TimeTravel from '../components/TimeTravel';\nimport '../style/App.css';\n\nclass Game extends React.Component {\n  /*\n  constructor(props) {\n    super(props);\n    // this.playerMove = this.playerMove.bind(this);\n    this.calculateWinwer = this.calculateWinwer.bind(this);\n    this.movesList = this.movesList.bind(this);\n    this.gameStatus = this.gameStatus.bind(this);\n  }\n  */\n\n  /*\n  playerMove(move) {\n    const { history, stepNumber, xIsNext, currentBoard } = this.props;\n    const historys = history.slice(0, stepNumber + 1);\n    const squares = currentBoard.slice();\n\n    if (this.calculateWinwer(squares) || squares[move]) {\n      return;\n    }\n\n    squares[move] = xIsNext ? 'X' : 'O';\n    playerMove(historys, squares);\n  }\n  */\n\n  playerMove(i) {\n    const { history, stepNumber, xIsNext } = this.props;\n    const historys = history.slice(0, stepNumber + 1);\n    const current = historys[historys.length - 1];\n    const squaress = current.squares.slice();\n\n    if (this.calculateWinwer(squaress) || squaress[i]) {\n      return;\n    }\n    squaress[i] = xIsNext ? 'X' : 'O';\n    playerMove(historys, squaress);\n  }\n\n  calculateWinwer(squares) {\n    const streaks = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6]\n    ];\n    for (let i = 0; i < streaks.length; i += 1) {\n      const [a, b, c] = streaks[i];\n      if (\n        squares[a] &&\n        squares[a] === squares[b] &&\n        squares[a] === squares[c]\n      ) {\n        return {\n          winner: squares[a],\n          winningLine: [a, b, c]\n        };\n      }\n    }\n    return {\n      winner: null,\n      winningLine: [null, null, null]\n    };\n  }\n\n  movesList(history) {\n    const { currentBoard, stepNumber } = this.props;\n    const { winner } = this.calculateWinwer(currentBoard.slice());\n    const gameStatus = this.gameStatus(winner);\n    const { endOfGame } = gameStatus;\n    return history.map((step, move) => {\n      const player = move % 2 ? ' - X' : ' - O';\n      const description = move\n        ? `Go to move #${move}${player}`\n        : 'Go to game Start';\n      return (\n        <li key={move.id}>\n          <button\n            type=\"button\"\n            onClick={() => timeTravel(move, endOfGame)}\n            className={stepNumber === move ? 'current_step' : ''}\n          >\n            {description}\n          </button>\n        </li>\n      );\n    });\n  }\n\n  gameStatus(winner) {\n    let status;\n    let endgame;\n    const { stepNumber, xIsNext } = this.props;\n    if (winner) {\n      status = `${winner} is the winner!`;\n      endgame = true;\n    } else if (!winner && stepNumber === 20) {\n      status = \"It's a Draw!\";\n      endgame = true;\n    } else {\n      status = `${xIsNext ? 'X' : 'O'}'s turn.`;\n      endgame = false;\n    }\n    return { status, endgame };\n  }\n\n  sortHistory() {\n    const { isDescending } = this.props;\n    this.sortHistory(isDescending);\n  }\n\n  render() {\n    const {\n      history,\n      xIsNext,\n      showHistory,\n      stepNumber,\n      isDescending\n    } = this.props;\n\n    const current = history[stepNumber];\n    const { winner } = this.calculateWinwer(current.squares);\n    const movess = this.movesList(history);\n\n    const moves = history.map((step, move) => {\n      const desc = move ? `Go to move #${move}` : 'Go to game start';\n      return (\n        <li key={move.id}>\n          <button type=\"button\" onClick={() => this.jumpTo(move)}>\n            {move === stepNumber ? <b>{desc}</b> : desc}\n          </button>\n        </li>\n      );\n    });\n\n    let status;\n    if (winner) {\n      status = `Winner:${winner.player}`;\n    } else {\n      status = `Next player: ${xIsNext ? 'X' : 'O'}`;\n    }\n    return (\n      <div className=\"game\">\n        <div className=\"left_col_game\">\n          <button type=\"button\" onClick={() => newGame()} className=\"exit_game\">\n            New Game\n          </button>\n        </div>\n        <div className=\"game_board\">\n          <Board\n            winner={winner && winner.line}\n            squares={current.squares}\n            onClick={i => this.playerMove(i)}\n          />\n        </div>\n        <div className=\"right_col_game\">\n          <TimeTravel\n            moves={movess}\n            showHistory={showHistory}\n            toggleHistory={toggleHistory}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{isDescending ? moves : moves.reverse()}</ol>\n          <button type=\"button\" onClick={() => this.sortHistory()}>\n            Sort By: {isDescending ? 'Descending' : 'Ascending'}\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  history: state.game.history,\n  currentBoard: state.game.currentBoard,\n  xIsNext: state.game.xIsNext,\n  stepNumber: state.game.stepNumber,\n  timeTraveled: state.game.timeTraveled,\n  showHistory: state.game.showHistory,\n  endOfGame: state.game.endOfGame\n});\n\nconst matchDispatchToProps = dispatch => ({\n  playerMove: (history, squares) => dispatch(playerMove(history, squares))\n  /*\n  return bindActionCreators(\n    {\n      playerMove,\n      toggleHistory,\n      timeTravel,\n      newGame,\n      endGame\n    },\n    dispatch\n  );\n  */\n});\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    matchDispatchToProps\n  )(Game)\n);\n// export default Game;\n"]},"metadata":{},"sourceType":"module"}