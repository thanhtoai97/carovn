{"ast":null,"code":"import _slicedToArray from \"/Users/lttttoai/Documents/GitHub/carovn/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/lttttoai/Documents/GitHub/carovn/src/containers/Game.js\";\n\n/* eslint-disable class-methods-use-this */\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport React from 'react';\nimport Board from '../components/Board';\nimport { playerMove, timeTravel, toggleHistory, newGame, endGame } from '../acctions/gameAction';\nimport TimeTravel from '../components/TimeTravel';\nimport '../style/App.css';\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.playerMove = this.playerMove.bind(this);\n    this.calculateWinwer = this.calculateWinwer.bind(this);\n    this.movesList = this.movesList.bind(this);\n    this.gameStatus = this.gameStatus.bind(this);\n  }\n  /*\n  playerMove(move) {\n    const { history, stepNumber, xIsNext, currentBoard } = this.props;\n    const historys = history.slice(0, stepNumber + 1);\n    const squares = currentBoard.slice();\n     if (this.calculateWinwer(squares) || squares[move]) {\n      return;\n    }\n     squares[move] = xIsNext ? 'X' : 'O';\n    playerMove(historys, squares);\n  }\n  */\n\n\n  playerMove(i) {\n    const _this$props = this.props,\n          history = _this$props.history,\n          stepNumber = _this$props.stepNumber,\n          xIsNext = _this$props.xIsNext;\n    const historys = history.slice(0, stepNumber + 1);\n    const current = historys[historys.length - 1];\n    const squares = current.squares.slice();\n\n    if (this.calculateWinwer(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = xIsNext ? 'X' : 'O';\n    playerMove(historys, squares);\n  }\n\n  calculateWinwer(squares) {\n    const streaks = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n    for (let i = 0; i < streaks.length; i += 1) {\n      const _streaks$i = _slicedToArray(streaks[i], 3),\n            a = _streaks$i[0],\n            b = _streaks$i[1],\n            c = _streaks$i[2];\n\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return {\n          winner: squares[a],\n          winningLine: [a, b, c]\n        };\n      }\n    }\n\n    return {\n      winner: null,\n      winningLine: [null, null, null]\n    };\n  }\n\n  movesList(history) {\n    const _this$props2 = this.props,\n          currentBoard = _this$props2.currentBoard,\n          stepNumber = _this$props2.stepNumber;\n\n    const _this$calculateWinwer = this.calculateWinwer(currentBoard.slice()),\n          winner = _this$calculateWinwer.winner;\n\n    const gameStatus = this.gameStatus(winner);\n    const endOfGame = gameStatus.endOfGame;\n    return history.map((step, move) => {\n      const player = move % 2 ? ' - X' : ' - O';\n      const description = move ? \"Move #\".concat(move).concat(player) : 'Game Start';\n      return React.createElement(\"li\", {\n        key: move.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        onClick: () => timeTravel(move, endOfGame),\n        className: stepNumber === move ? 'current_step' : '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, description));\n    });\n  }\n\n  gameStatus(winner) {\n    let status;\n    let endgame;\n    const _this$props3 = this.props,\n          stepNumber = _this$props3.stepNumber,\n          xIsNext = _this$props3.xIsNext;\n\n    if (winner) {\n      status = \"\".concat(winner, \" is the winner!\");\n      endgame = true;\n    } else if (!winner && stepNumber === 20) {\n      status = \"It's a Draw!\";\n      endgame = true;\n    } else {\n      status = \"\".concat(xIsNext ? 'X' : 'O', \"'s turn.\");\n      endgame = false;\n    }\n\n    return {\n      status,\n      endgame\n    };\n  }\n\n  render() {\n    const _this$props4 = this.props,\n          history = _this$props4.history,\n          xIsNext = _this$props4.xIsNext,\n          showHistory = _this$props4.showHistory,\n          stepNumber = _this$props4.stepNumber,\n          isDescending = _this$props4.isDescending;\n    const current = history[stepNumber];\n\n    const _this$calculateWinwer2 = this.calculateWinwer(current),\n          winner = _this$calculateWinwer2.winner; // const winningRow = this.calculateWinwer(currentBoard).winningLine;\n\n\n    const moves = this.movesList(history);\n    const endOfGame = this.gameStatus(winner).endGame;\n    let status;\n\n    if (winner) {\n      status = \"Winner:\".concat(winner.player);\n    } else {\n      status = \"Next player: \".concat(xIsNext ? 'X' : 'O');\n    }\n\n    return React.createElement(\"div\", {\n      className: \"game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"left_col_game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => newGame(),\n      className: \"exit_game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"New Game\")), React.createElement(\"div\", {\n      className: \"game_board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(Board, {\n      winner: winner && winner.line,\n      squares: current.squares,\n      gameEnd: endOfGame,\n      xIsNext: xIsNext,\n      playerMove: i => this.playerMove(i) // winningRow={winningRow}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"right_col_game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(TimeTravel, {\n      moves: moves,\n      showHistory: showHistory,\n      toggleHistory: toggleHistory,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"game-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, status), React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, isDescending ? moves : moves.reverse()), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => this.sortHistory(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"Sort By: \", isDescending ? 'Descending' : 'Ascending')));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  history: state.game.history,\n  currentBoard: state.game.currentBoard,\n  xIsNext: state.game.xIsNext,\n  stepNumber: state.game.stepNumber,\n  timeTraveled: state.game.timeTraveled,\n  showHistory: state.game.showHistory,\n  endOfGame: state.game.endOfGame\n});\n\nconst matchDispatchToProps = dispatch => {\n  return bindActionCreators({\n    playerMove,\n    toggleHistory,\n    timeTravel,\n    newGame,\n    endGame\n  }, dispatch);\n};\n\nexport default withRouter(connect(mapStateToProps, matchDispatchToProps)(Game)); // export default Game;","map":{"version":3,"sources":["/Users/lttttoai/Documents/GitHub/carovn/src/containers/Game.js"],"names":["connect","bindActionCreators","withRouter","React","Board","playerMove","timeTravel","toggleHistory","newGame","endGame","TimeTravel","Game","Component","constructor","props","bind","calculateWinwer","movesList","gameStatus","i","history","stepNumber","xIsNext","historys","slice","current","length","squares","streaks","a","b","c","winner","winningLine","currentBoard","endOfGame","map","step","move","player","description","id","status","endgame","render","showHistory","isDescending","moves","line","reverse","sortHistory","mapStateToProps","state","game","timeTraveled","matchDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["/* eslint-disable class-methods-use-this */\n\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom';\n\nimport React from 'react';\nimport Board from '../components/Board';\n\nimport {\n  playerMove,\n  timeTravel,\n  toggleHistory,\n  newGame,\n  endGame\n} from '../acctions/gameAction';\nimport TimeTravel from '../components/TimeTravel';\nimport '../style/App.css';\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.playerMove = this.playerMove.bind(this);\n    this.calculateWinwer = this.calculateWinwer.bind(this);\n    this.movesList = this.movesList.bind(this);\n    this.gameStatus = this.gameStatus.bind(this);\n  }\n  /*\n  playerMove(move) {\n    const { history, stepNumber, xIsNext, currentBoard } = this.props;\n    const historys = history.slice(0, stepNumber + 1);\n    const squares = currentBoard.slice();\n\n    if (this.calculateWinwer(squares) || squares[move]) {\n      return;\n    }\n\n    squares[move] = xIsNext ? 'X' : 'O';\n    playerMove(historys, squares);\n  }\n  */\n\n  playerMove(i) {\n    const { history, stepNumber, xIsNext } = this.props;\n    const historys = history.slice(0, stepNumber + 1);\n    const current = historys[historys.length - 1];\n    const squares = current.squares.slice();\n\n    if (this.calculateWinwer(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = xIsNext ? 'X' : 'O';\n    playerMove(historys, squares);\n  }\n\n  calculateWinwer(squares) {\n    const streaks = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6]\n    ];\n    for (let i = 0; i < streaks.length; i += 1) {\n      const [a, b, c] = streaks[i];\n      if (\n        squares[a] &&\n        squares[a] === squares[b] &&\n        squares[a] === squares[c]\n      ) {\n        return {\n          winner: squares[a],\n          winningLine: [a, b, c]\n        };\n      }\n    }\n    return {\n      winner: null,\n      winningLine: [null, null, null]\n    };\n  }\n\n  movesList(history) {\n    const { currentBoard, stepNumber } = this.props;\n    const { winner } = this.calculateWinwer(currentBoard.slice());\n    const gameStatus = this.gameStatus(winner);\n    const { endOfGame } = gameStatus;\n    return history.map((step, move) => {\n      const player = move % 2 ? ' - X' : ' - O';\n      const description = move ? `Move #${move}${player}` : 'Game Start';\n      return (\n        <li key={move.id}>\n          <button\n            type=\"button\"\n            onClick={() => timeTravel(move, endOfGame)}\n            className={stepNumber === move ? 'current_step' : ''}\n          >\n            {description}\n          </button>\n        </li>\n      );\n    });\n  }\n\n  gameStatus(winner) {\n    let status;\n    let endgame;\n    const { stepNumber, xIsNext } = this.props;\n    if (winner) {\n      status = `${winner} is the winner!`;\n      endgame = true;\n    } else if (!winner && stepNumber === 20) {\n      status = \"It's a Draw!\";\n      endgame = true;\n    } else {\n      status = `${xIsNext ? 'X' : 'O'}'s turn.`;\n      endgame = false;\n    }\n    return { status, endgame };\n  }\n\n  render() {\n    const {\n      history,\n      xIsNext,\n      showHistory,\n      stepNumber,\n      isDescending\n    } = this.props;\n    const current = history[stepNumber];\n    const { winner } = this.calculateWinwer(current);\n    // const winningRow = this.calculateWinwer(currentBoard).winningLine;\n    const moves = this.movesList(history);\n    const endOfGame = this.gameStatus(winner).endGame;\n\n    let status;\n    if (winner) {\n      status = `Winner:${winner.player}`;\n    } else {\n      status = `Next player: ${xIsNext ? 'X' : 'O'}`;\n    }\n    return (\n      <div className=\"game\">\n        <div className=\"left_col_game\">\n          <button type=\"button\" onClick={() => newGame()} className=\"exit_game\">\n            New Game\n          </button>\n        </div>\n        <div className=\"game_board\">\n          <Board\n            winner={winner && winner.line}\n            squares={current.squares}\n            gameEnd={endOfGame}\n            xIsNext={xIsNext}\n            playerMove={i => this.playerMove(i)}\n            // winningRow={winningRow}\n          />\n        </div>\n        <div className=\"right_col_game\">\n          <TimeTravel\n            moves={moves}\n            showHistory={showHistory}\n            toggleHistory={toggleHistory}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{isDescending ? moves : moves.reverse()}</ol>\n          <button type=\"button\" onClick={() => this.sortHistory()}>\n            Sort By: {isDescending ? 'Descending' : 'Ascending'}\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  history: state.game.history,\n  currentBoard: state.game.currentBoard,\n  xIsNext: state.game.xIsNext,\n  stepNumber: state.game.stepNumber,\n  timeTraveled: state.game.timeTraveled,\n  showHistory: state.game.showHistory,\n  endOfGame: state.game.endOfGame\n});\nconst matchDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      playerMove,\n      toggleHistory,\n      timeTravel,\n      newGame,\n      endGame\n    },\n    dispatch\n  );\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    matchDispatchToProps\n  )(Game)\n);\n// export default Game;\n"]},"metadata":{},"sourceType":"module"}