{"ast":null,"code":"import _slicedToArray from \"/Users/lttttoai/Documents/GitHub/carovn/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/lttttoai/Documents/GitHub/carovn/src/containers/Game.js\";\n\n/* eslint-disable react/sort-comp */\n\n/* eslint-disable no-shadow */\n\n/* eslint-disable class-methods-use-this */\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport React from 'react';\nimport Board from '../components/Board';\nimport { playerMove, timeTravel, sortHistory, turnChangeAnimation } from '../acctions/gameAction';\nimport { getBestMove, aiMove } from '../acctions/aiAction';\n\nfunction calculateWinwer(squares) {\n  for (let i = 0; i < 400; i += 1) {\n    if (squares[i] && squares[i] === squares[i - 20] && squares[i] === squares[i - 40] && squares[i] === squares[i + 20] && squares[i] === squares[i + 40] && squares[i + 60] !== squares[i - 60]) {\n      return {\n        player: squares[i],\n        line: [i - 40, i - 20, i, i + 20, i + 40]\n      };\n    }\n\n    if (squares[i] && squares[i] === squares[i - 20] && squares[i] === squares[i - 40] && squares[i] === squares[i - 60] && squares[i] === squares[i - 80] && squares[i + 20] !== squares[i - 100]) {\n      return {\n        player: squares[i],\n        line: [i - 80, i - 60, i - 40, i - 20, i]\n      };\n    }\n\n    if (squares[i] && squares[i] === squares[i + 20] && squares[i] === squares[i + 40] && squares[i] === squares[i + 60] && squares[i] === squares[i + 80] && squares[i + 100] !== squares[i - 20]) {\n      return {\n        player: squares[i],\n        line: [i, i + 20, i + 40, i + 60, i + 80]\n      };\n    }\n\n    if (squares[i] && squares[i] === squares[i - 1] && squares[i] === squares[i - 2] && squares[i] === squares[i + 1] && squares[i] === squares[i + 2] && squares[i + 3] !== squares[i - 3]) {\n      return {\n        player: squares[i],\n        line: [i - 2, i - 1, i, i + 1, i + 2]\n      };\n    }\n\n    if (squares[i] && squares[i] === squares[i - 1] && squares[i] === squares[i - 2] && squares[i] === squares[i - 3] && squares[i] === squares[i - 4] && squares[i - 5] !== squares[i + 1]) {\n      return {\n        player: squares[i],\n        line: [i - 4, i - 3, i - 2, i - 1, i]\n      };\n    }\n\n    if (squares[i] && squares[i] === squares[i + 1] && squares[i] === squares[i + 2] && squares[i] === squares[i + 3] && squares[i] === squares[i + 4] && squares[i + 5] !== squares[i - 1]) {\n      return {\n        player: squares[i],\n        line: [i, i + 1, i + 2, i + 3, i + 4]\n      };\n    }\n\n    if (squares[i] && squares[i] === squares[i - 19] && squares[i] === squares[i - 38] && squares[i] === squares[i + 19] && squares[i] === squares[i + 38] && squares[i + 57] !== squares[i - 57]) {\n      return {\n        player: squares[i],\n        line: [i - 38, i - 19, i, i + 19, i + 38]\n      };\n    }\n\n    if (squares[i] && squares[i] === squares[i - 19] && squares[i] === squares[i - 38] && squares[i] === squares[i - 57] && squares[i] === squares[i - 76] && squares[i + 19] !== squares[i - 95]) {\n      return {\n        player: squares[i],\n        line: [i - 76, i - 57, i - 38, i - 19, i]\n      };\n    }\n\n    if (squares[i] && squares[i] === squares[i + 19] && squares[i] === squares[i + 38] && squares[i] === squares[i + 57] && squares[i] === squares[i + 76] && squares[i + 95] !== squares[i - 19]) {\n      return {\n        player: squares[i],\n        line: [i, i + 19, i + 38, i + 57, i + 76]\n      };\n    }\n\n    if (squares[i] && squares[i] === squares[i - 21] && squares[i] === squares[i - 42] && squares[i] === squares[i + 21] && squares[i] === squares[i + 42] && squares[i + 63] !== squares[i - 63]) {\n      return {\n        player: squares[i],\n        line: [i - 21, i - 42, i, i + 21, i + 42]\n      };\n    }\n\n    if (squares[i] && squares[i] === squares[i + 21] && squares[i] === squares[i + 42] && squares[i] === squares[i + 63] && squares[i] === squares[i + 84] && squares[i + 105] !== squares[i - 23]) {\n      return {\n        player: squares[i],\n        line: [i, i + 21, i + 42, i + 63, i + 84]\n      };\n    }\n\n    if (squares[i] && squares[i] === squares[i - 21] && squares[i] === squares[i - 42] && squares[i] === squares[i - 63] && squares[i] === squares[i - 84] && squares[i + 23] !== squares[i - 105]) {\n      return {\n        player: squares[i],\n        line: [i - 84, i - 63, i - 42, i - 21, i]\n      };\n    }\n  }\n\n  return null;\n}\n\nclass Game extends React.Component {\n  playerMove(i) {\n    const _this$props = this.props,\n          history = _this$props.history,\n          stepNumber = _this$props.stepNumber,\n          xIsNext = _this$props.xIsNext,\n          playerMove = _this$props.playerMove;\n    const historys = history.slice(0, stepNumber + 1);\n    const current = historys[historys.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinwer(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = xIsNext ? 'X' : 'O';\n    playerMove(historys, squares);\n  }\n\n  timeTravel(step) {\n    const timeTravel = this.props.timeTravel;\n    timeTravel(step);\n  }\n\n  sortHistory() {\n    const _this$props2 = this.props,\n          isDescending = _this$props2.isDescending,\n          sortHistory = _this$props2.sortHistory;\n    sortHistory(isDescending);\n  }\n\n  indicateVictory(cells) {\n    const _this$props3 = this.props,\n          streaks = _this$props3.streaks,\n          grid = _this$props3.grid;\n\n    if (grid === 9) {\n      for (let i = 0; i < streaks.length; i += 1) {\n        const _streaks$i = _slicedToArray(streaks[i], 3),\n              a = _streaks$i[0],\n              b = _streaks$i[1],\n              c = _streaks$i[2];\n\n        if (cells[a] && cells[a] === cells[b] && cells[a] === cells[c]) {\n          return {\n            winner: cells[a],\n            winningLine: [a, b, c]\n          };\n        }\n      }\n    } else if (grid === 16) {\n      for (let i = 0; i < streaks.length; i += 1) {\n        const _streaks$i2 = _slicedToArray(streaks[i], 4),\n              a = _streaks$i2[0],\n              b = _streaks$i2[1],\n              c = _streaks$i2[2],\n              d = _streaks$i2[3];\n\n        if (cells[a] && cells[a] === cells[b] && cells[a] === cells[c] && cells[a] === cells[d]) {\n          return {\n            winner: cells[a],\n            winningLine: [a, b, c, d]\n          };\n        }\n      }\n    }\n\n    return {\n      winner: null,\n      winningLine: [null, null, null]\n    };\n  }\n\n  componentWillMount() {\n    const _this$props4 = this.props,\n          xIsNext = _this$props4.xIsNext,\n          gameSettings = _this$props4.gameSettings,\n          squares = _this$props4.squares,\n          stepNumber = _this$props4.stepNumber,\n          grid = _this$props4.grid;\n    const playerStarts = gameSettings.playerStarts,\n          versus = gameSettings.versus,\n          difficulty = gameSettings.difficulty;\n    const board = squares.slice();\n\n    if (stepNumber === 0) {\n      if (!playerStarts && xIsNext && versus === 'A') {\n        const bestMove = getBestMove(board, grid, xIsNext);\n        const move = aiMove(bestMove, board, difficulty);\n        setTimeout(() => {\n          this.playerMove(move);\n        }, 750);\n      }\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const _this$props5 = this.props,\n          xIsNext = _this$props5.xIsNext,\n          endOfGame = _this$props5.endOfGame,\n          grid = _this$props5.grid;\n    const xIsNexts = nextProps.xIsNext;\n    const _nextProps$gameSettin = nextProps.gameSettings,\n          playerStarts = _nextProps$gameSettin.playerStarts,\n          versus = _nextProps$gameSettin.versus,\n          difficulty = _nextProps$gameSettin.difficulty;\n    const winner = indicateVictory(nextProps.currentBoard.slice()).winner;\n    const board = nextProps.currentBoard.slice();\n    const endOfGames = nextProps.endOfGame;\n\n    if (xIsNexts !== xIsNext || endOfGames !== endOfGame) {\n      turnChangeAnimation();\n    }\n\n    if (nextProps.stepNumber || nextProps.stepNumber === 0) {\n      if (!endOfGame && !playerStarts && xIsNext && versus === 'A') {\n        const grid = this.props.grid; // if AI plays first (X)\n\n        const bestMove = getBestMove(board, grid, xIsNext);\n        const move = aiMove(bestMove, board, difficulty); // AI will make his move based on the difficulty level.\n\n        setTimeout(() => {\n          this.playerMove(move);\n        }, 750);\n      }\n\n      if (!endOfGame && playerStarts && !xIsNext && versus === 'A') {\n        // if AI plays second (O)\n        const bestMove = getBestMove(board, grid, xIsNext);\n        const move = aiMove(bestMove, board, difficulty);\n        setTimeout(() => {\n          this.playerMove(move);\n        }, 750);\n      }\n    }\n\n    if (this.gameStatus(winner).endGame) {\n      const endGame = this.props.endGame; // endGame call from a lifecycle method instead of render\n      // to avoid impure setState warnings.\n\n      endGame();\n    }\n  }\n\n  render() {\n    const _this$props6 = this.props,\n          history = _this$props6.history,\n          stepNumber = _this$props6.stepNumber,\n          xIsNext = _this$props6.xIsNext,\n          isDescending = _this$props6.isDescending;\n    const current = history[stepNumber];\n    const winner = calculateWinwer(current.squares);\n    const moves = history.map((step, move) => {\n      const desc = move ? \"Go to move #\".concat(move) : 'NEW GAME';\n      return React.createElement(\"li\", {\n        key: move.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        onClick: () => this.timeTravel(move),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, move === stepNumber ? React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, desc) : desc));\n    });\n    let status;\n\n    if (winner) {\n      status = \"Winner:\".concat(winner.player);\n    } else {\n      status = \"Next player: \".concat(xIsNext ? 'X' : 'O');\n    }\n\n    return React.createElement(\"div\", {\n      className: \"game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"game-board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, React.createElement(Board, {\n      winner: winner && winner.line,\n      squares: current.squares,\n      onClick: i => this.playerMove(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"right_col_game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, status), React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, isDescending ? moves : moves.reverse()), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => this.sortHistory(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, \"Sort By: \", isDescending ? 'Descending' : 'Ascending')));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  history: state.game.history,\n  currentBoard: state.game.currentBoard,\n  xIsNext: state.game.xIsNext,\n  isDescending: state.game.isDescending,\n  stepNumber: state.game.stepNumber,\n  timeTraveled: state.game.timeTraveled,\n  showHistory: state.game.showHistory,\n  endOfGame: state.game.endOfGame\n});\n\nconst matchDispatchToProps = dispatch => ({\n  playerMove: (history, squares) => dispatch(playerMove(history, squares)),\n  sortHistory: isDescending => dispatch(sortHistory(isDescending)),\n  timeTravel: step => dispatch(timeTravel(step))\n});\n\nexport default withRouter(connect(mapStateToProps, matchDispatchToProps)(Game));","map":{"version":3,"sources":["/Users/lttttoai/Documents/GitHub/carovn/src/containers/Game.js"],"names":["connect","withRouter","React","Board","playerMove","timeTravel","sortHistory","turnChangeAnimation","getBestMove","aiMove","calculateWinwer","squares","i","player","line","Game","Component","props","history","stepNumber","xIsNext","historys","slice","current","length","step","isDescending","indicateVictory","cells","streaks","grid","a","b","c","winner","winningLine","d","componentWillMount","gameSettings","playerStarts","versus","difficulty","board","bestMove","move","setTimeout","componentWillReceiveProps","nextProps","endOfGame","xIsNexts","currentBoard","endOfGames","gameStatus","endGame","render","moves","map","desc","id","status","reverse","mapStateToProps","state","game","timeTraveled","showHistory","matchDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["/* eslint-disable react/sort-comp */\n/* eslint-disable no-shadow */\n/* eslint-disable class-methods-use-this */\n\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport React from 'react';\nimport Board from '../components/Board';\n\nimport {\n  playerMove,\n  timeTravel,\n  sortHistory,\n  turnChangeAnimation\n} from '../acctions/gameAction';\nimport { getBestMove, aiMove } from '../acctions/aiAction';\n\nfunction calculateWinwer(squares) {\n  for (let i = 0; i < 400; i += 1) {\n    if (\n      squares[i] &&\n      squares[i] === squares[i - 20] &&\n      squares[i] === squares[i - 40] &&\n      squares[i] === squares[i + 20] &&\n      squares[i] === squares[i + 40] &&\n      squares[i + 60] !== squares[i - 60]\n    ) {\n      return { player: squares[i], line: [i - 40, i - 20, i, i + 20, i + 40] };\n    }\n    if (\n      squares[i] &&\n      squares[i] === squares[i - 20] &&\n      squares[i] === squares[i - 40] &&\n      squares[i] === squares[i - 60] &&\n      squares[i] === squares[i - 80] &&\n      squares[i + 20] !== squares[i - 100]\n    ) {\n      return { player: squares[i], line: [i - 80, i - 60, i - 40, i - 20, i] };\n    }\n    if (\n      squares[i] &&\n      squares[i] === squares[i + 20] &&\n      squares[i] === squares[i + 40] &&\n      squares[i] === squares[i + 60] &&\n      squares[i] === squares[i + 80] &&\n      squares[i + 100] !== squares[i - 20]\n    ) {\n      return { player: squares[i], line: [i, i + 20, i + 40, i + 60, i + 80] };\n    }\n    if (\n      squares[i] &&\n      squares[i] === squares[i - 1] &&\n      squares[i] === squares[i - 2] &&\n      squares[i] === squares[i + 1] &&\n      squares[i] === squares[i + 2] &&\n      squares[i + 3] !== squares[i - 3]\n    ) {\n      return { player: squares[i], line: [i - 2, i - 1, i, i + 1, i + 2] };\n    }\n    if (\n      squares[i] &&\n      squares[i] === squares[i - 1] &&\n      squares[i] === squares[i - 2] &&\n      squares[i] === squares[i - 3] &&\n      squares[i] === squares[i - 4] &&\n      squares[i - 5] !== squares[i + 1]\n    ) {\n      return { player: squares[i], line: [i - 4, i - 3, i - 2, i - 1, i] };\n    }\n    if (\n      squares[i] &&\n      squares[i] === squares[i + 1] &&\n      squares[i] === squares[i + 2] &&\n      squares[i] === squares[i + 3] &&\n      squares[i] === squares[i + 4] &&\n      squares[i + 5] !== squares[i - 1]\n    ) {\n      return { player: squares[i], line: [i, i + 1, i + 2, i + 3, i + 4] };\n    }\n    if (\n      squares[i] &&\n      squares[i] === squares[i - 19] &&\n      squares[i] === squares[i - 38] &&\n      squares[i] === squares[i + 19] &&\n      squares[i] === squares[i + 38] &&\n      squares[i + 57] !== squares[i - 57]\n    ) {\n      return { player: squares[i], line: [i - 38, i - 19, i, i + 19, i + 38] };\n    }\n    if (\n      squares[i] &&\n      squares[i] === squares[i - 19] &&\n      squares[i] === squares[i - 38] &&\n      squares[i] === squares[i - 57] &&\n      squares[i] === squares[i - 76] &&\n      squares[i + 19] !== squares[i - 95]\n    ) {\n      return { player: squares[i], line: [i - 76, i - 57, i - 38, i - 19, i] };\n    }\n    if (\n      squares[i] &&\n      squares[i] === squares[i + 19] &&\n      squares[i] === squares[i + 38] &&\n      squares[i] === squares[i + 57] &&\n      squares[i] === squares[i + 76] &&\n      squares[i + 95] !== squares[i - 19]\n    ) {\n      return { player: squares[i], line: [i, i + 19, i + 38, i + 57, i + 76] };\n    }\n    if (\n      squares[i] &&\n      squares[i] === squares[i - 21] &&\n      squares[i] === squares[i - 42] &&\n      squares[i] === squares[i + 21] &&\n      squares[i] === squares[i + 42] &&\n      squares[i + 63] !== squares[i - 63]\n    ) {\n      return { player: squares[i], line: [i - 21, i - 42, i, i + 21, i + 42] };\n    }\n    if (\n      squares[i] &&\n      squares[i] === squares[i + 21] &&\n      squares[i] === squares[i + 42] &&\n      squares[i] === squares[i + 63] &&\n      squares[i] === squares[i + 84] &&\n      squares[i + 105] !== squares[i - 23]\n    ) {\n      return { player: squares[i], line: [i, i + 21, i + 42, i + 63, i + 84] };\n    }\n    if (\n      squares[i] &&\n      squares[i] === squares[i - 21] &&\n      squares[i] === squares[i - 42] &&\n      squares[i] === squares[i - 63] &&\n      squares[i] === squares[i - 84] &&\n      squares[i + 23] !== squares[i - 105]\n    ) {\n      return { player: squares[i], line: [i - 84, i - 63, i - 42, i - 21, i] };\n    }\n  }\n  return null;\n}\n\nclass Game extends React.Component {\n  playerMove(i) {\n    const { history, stepNumber, xIsNext, playerMove } = this.props;\n    const historys = history.slice(0, stepNumber + 1);\n    const current = historys[historys.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinwer(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = xIsNext ? 'X' : 'O';\n    playerMove(historys, squares);\n  }\n\n  timeTravel(step) {\n    const { timeTravel } = this.props;\n    timeTravel(step);\n  }\n\n  sortHistory() {\n    const { isDescending, sortHistory } = this.props;\n    sortHistory(isDescending);\n  }\n\n  indicateVictory(cells) {\n    const { streaks, grid } = this.props;\n    if (grid === 9) {\n      for (let i = 0; i < streaks.length; i += 1) {\n        const [a, b, c] = streaks[i];\n        if (cells[a] && cells[a] === cells[b] && cells[a] === cells[c]) {\n          return {\n            winner: cells[a],\n            winningLine: [a, b, c]\n          };\n        }\n      }\n    } else if (grid === 16) {\n      for (let i = 0; i < streaks.length; i += 1) {\n        const [a, b, c, d] = streaks[i];\n        if (\n          cells[a] &&\n          cells[a] === cells[b] &&\n          cells[a] === cells[c] &&\n          cells[a] === cells[d]\n        ) {\n          return {\n            winner: cells[a],\n            winningLine: [a, b, c, d]\n          };\n        }\n      }\n    }\n    return {\n      winner: null,\n      winningLine: [null, null, null]\n    };\n  }\n\n  componentWillMount() {\n    const { xIsNext, gameSettings, squares, stepNumber, grid } = this.props;\n    const { playerStarts, versus, difficulty } = gameSettings;\n    const board = squares.slice();\n    if (stepNumber === 0) {\n      if (!playerStarts && xIsNext && versus === 'A') {\n        const bestMove = getBestMove(board, grid, xIsNext);\n        const move = aiMove(bestMove, board, difficulty);\n        setTimeout(() => {\n          this.playerMove(move);\n        }, 750);\n      }\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { xIsNext, endOfGame, grid } = this.props;\n    const xIsNexts = nextProps.xIsNext;\n    const { playerStarts, versus, difficulty } = nextProps.gameSettings;\n    const winner = indicateVictory(nextProps.currentBoard.slice()).winner;\n    const board = nextProps.currentBoard.slice();\n    const endOfGames = nextProps.endOfGame;\n    if (xIsNexts !== xIsNext || endOfGames !== endOfGame) {\n      turnChangeAnimation();\n    }\n    if (nextProps.stepNumber || nextProps.stepNumber === 0) {\n      if (!endOfGame && !playerStarts && xIsNext && versus === 'A') {\n        const { grid } = this.props;\n        // if AI plays first (X)\n        const bestMove = getBestMove(board, grid, xIsNext);\n        const move = aiMove(bestMove, board, difficulty);\n        // AI will make his move based on the difficulty level.\n        setTimeout(() => {\n          this.playerMove(move);\n        }, 750);\n      }\n      if (!endOfGame && playerStarts && !xIsNext && versus === 'A') {\n        // if AI plays second (O)\n        const bestMove = getBestMove(board, grid, xIsNext);\n        const move = aiMove(bestMove, board, difficulty);\n        setTimeout(() => {\n          this.playerMove(move);\n        }, 750);\n      }\n    }\n    if (this.gameStatus(winner).endGame) {\n      const { endGame } = this.props;\n      // endGame call from a lifecycle method instead of render\n      // to avoid impure setState warnings.\n      endGame();\n    }\n  }\n\n  render() {\n    const { history, stepNumber, xIsNext, isDescending } = this.props;\n    const current = history[stepNumber];\n    const winner = calculateWinwer(current.squares);\n\n    const moves = history.map((step, move) => {\n      const desc = move ? `Go to move #${move}` : 'NEW GAME';\n      return (\n        <li key={move.id}>\n          <button type=\"button\" onClick={() => this.timeTravel(move)}>\n            {move === stepNumber ? <b>{desc}</b> : desc}\n          </button>\n        </li>\n      );\n    });\n\n    let status;\n    if (winner) {\n      status = `Winner:${winner.player}`;\n    } else {\n      status = `Next player: ${xIsNext ? 'X' : 'O'}`;\n    }\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            winner={winner && winner.line}\n            squares={current.squares}\n            onClick={i => this.playerMove(i)}\n          />\n        </div>\n        <div className=\"right_col_game\">\n          <div>{status}</div>\n          <ol>{isDescending ? moves : moves.reverse()}</ol>\n          <button type=\"button\" onClick={() => this.sortHistory()}>\n            Sort By: {isDescending ? 'Descending' : 'Ascending'}\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  history: state.game.history,\n  currentBoard: state.game.currentBoard,\n  xIsNext: state.game.xIsNext,\n  isDescending: state.game.isDescending,\n  stepNumber: state.game.stepNumber,\n  timeTraveled: state.game.timeTraveled,\n  showHistory: state.game.showHistory,\n  endOfGame: state.game.endOfGame\n});\n\nconst matchDispatchToProps = dispatch => ({\n  playerMove: (history, squares) => dispatch(playerMove(history, squares)),\n  sortHistory: isDescending => dispatch(sortHistory(isDescending)),\n  timeTravel: step => dispatch(timeTravel(step))\n});\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    matchDispatchToProps\n  )(Game)\n);\n"]},"metadata":{},"sourceType":"module"}