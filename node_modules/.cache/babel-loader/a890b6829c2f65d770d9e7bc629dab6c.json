{"ast":null,"code":"var _jsxFileName = \"/Users/lttttoai/Documents/GitHub/carovn/src/containers/LoginPage/Login.js\";\n\n/* eslint-disable no-shadow */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Icon, Input, Button, Checkbox, message } from 'antd';\nimport { loginAsync } from '../../modules/Login/actions/index';\nimport './login.css';\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      const _this$props = this.props,\n            form = _this$props.form,\n            loginAsync = _this$props.loginAsync;\n      e.preventDefault();\n      form.validateFields((err, values) => {\n        if (!err) {\n          message.loading('You Are You Logging IN....', 2.5).then(() => {\n            message.success('logged!', 1.0);\n            loginAsync(values.email, values.password);\n          });\n        }\n      });\n    };\n\n    this.state = {};\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          form = _this$props2.form,\n          loading = _this$props2.loading;\n    const getFieldDecorator = form.getFieldDecorator;\n    return React.createElement(\"article\", {\n      className: \"mw5 center bg-white br3 pa3 pa4-ns mv3 ba b--black-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      className: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, getFieldDecorator('email', {\n      rules: [{\n        required: true,\n        message: 'Please input your username!'\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"user\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }),\n      placeholder: \"Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, getFieldDecorator('password', {\n      rules: [{\n        required: true,\n        message: 'Please input your Password!'\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"lock\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }),\n      type: \"password\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, getFieldDecorator('remember', {\n      valuePropName: 'checked',\n      initialValue: true\n    })(React.createElement(Checkbox, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Remember me\")), React.createElement(\"a\", {\n      className: \"login-form-forgot\",\n      href: \"boo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Forgot password\"), React.createElement(Button, {\n      loading: loading,\n      type: \"primary\",\n      htmlType: \"submit\",\n      className: \"login-form-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Log in\"), \"Or \", React.createElement(\"a\", {\n      href: \"/#register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"register now!\"))));\n  }\n\n}\n\nconst form = Form.create()(LoginForm);\n\nconst mapStateToProps = state => ({\n  user: state.authReducerLogin.user,\n  error: state.authReducerLogin.error\n});\n\nconst matchDispatchToProps = dispatch => ({\n  loginAsync: (email, password) => dispatch(loginAsync(email, password))\n});\n\nexport default connect(mapStateToProps, matchDispatchToProps)(form);","map":{"version":3,"sources":["/Users/lttttoai/Documents/GitHub/carovn/src/containers/LoginPage/Login.js"],"names":["React","connect","Form","Icon","Input","Button","Checkbox","message","loginAsync","LoginForm","Component","constructor","props","handleSubmit","e","form","preventDefault","validateFields","err","values","loading","then","success","email","password","state","render","getFieldDecorator","rules","required","color","valuePropName","initialValue","create","mapStateToProps","user","authReducerLogin","error","matchDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["/* eslint-disable no-shadow */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Icon, Input, Button, Checkbox, message } from 'antd';\nimport { loginAsync } from '../../modules/Login/actions/index';\nimport './login.css';\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  handleSubmit = e => {\n    const { form, loginAsync } = this.props;\n    e.preventDefault();\n    form.validateFields((err, values) => {\n      if (!err) {\n        message.loading('You Are You Logging IN....', 2.5).then(() => {\n          message.success('logged!', 1.0);\n          loginAsync(values.email, values.password);\n        });\n      }\n    });\n  };\n\n  render() {\n    const { form, loading } = this.props;\n    const { getFieldDecorator } = form;\n    return (\n      <article className=\"mw5 center bg-white br3 pa3 pa4-ns mv3 ba b--black-10\">\n        <Form onSubmit={this.handleSubmit} className=\"login-form\">\n          <Form.Item>\n            {getFieldDecorator('email', {\n              rules: [\n                { required: true, message: 'Please input your username!' }\n              ]\n            })(\n              <Input\n                prefix={\n                  <Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />\n                }\n                placeholder=\"Email\"\n              />\n            )}\n          </Form.Item>\n          <Form.Item>\n            {getFieldDecorator('password', {\n              rules: [\n                { required: true, message: 'Please input your Password!' }\n              ]\n            })(\n              <Input\n                prefix={\n                  <Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />\n                }\n                type=\"password\"\n                placeholder=\"Password\"\n              />\n            )}\n          </Form.Item>\n          <Form.Item>\n            {getFieldDecorator('remember', {\n              valuePropName: 'checked',\n              initialValue: true\n            })(<Checkbox>Remember me</Checkbox>)}\n            <a className=\"login-form-forgot\" href=\"boo\">\n              Forgot password\n            </a>\n            <Button\n              loading={loading}\n              type=\"primary\"\n              htmlType=\"submit\"\n              className=\"login-form-button\"\n            >\n              Log in\n            </Button>\n            Or <a href=\"/#register\">register now!</a>\n          </Form.Item>\n        </Form>\n      </article>\n    );\n  }\n}\n\nconst form = Form.create()(LoginForm);\n\nconst mapStateToProps = state => ({\n  user: state.authReducerLogin.user,\n  error: state.authReducerLogin.error\n});\n\nconst matchDispatchToProps = dispatch => ({\n  loginAsync: (email, password) => dispatch(loginAsync(email, password))\n});\n\nexport default connect(\n  mapStateToProps,\n  matchDispatchToProps\n)(form);\n"]},"metadata":{},"sourceType":"module"}