{"ast":null,"code":"import _defineProperty from \"/Users/lttttoai/Documents/GitHub/carovn/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/* eslint-disable no-unreachable */\nexport const initialState = {\n  history: [{\n    squares: new Array(400).fill(null)\n  }],\n  currentBoard: new Array(400).fill(null),\n  stepNumber: 0,\n  xIsNext: true,\n  isDescending: true\n};\nexport const gameReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'NEW_GAME':\n      return _objectSpread({}, state, {\n        history: [{\n          squares: new Array(400).fill(null)\n        }],\n        currentBoard: new Array(400).fill(null),\n        stepNumber: 0,\n        xIsNext: true,\n        isDescending: true\n      });\n      break;\n\n    case 'END_GAME':\n      return _objectSpread({}, state);\n      break;\n\n    case 'PLAYER_MOVE':\n      return _objectSpread({}, state, {\n        history: action.history.concat([{\n          squares: action.squares\n        }]),\n        currentBoard: action.squares,\n        stepNumber: action.history.length,\n        xIsNext: !state.xIsNext\n      });\n      break;\n\n    case 'TOGGLE_HISTORY':\n      return _objectSpread({}, state);\n      break;\n\n    case 'TIME_TRAVEL':\n      return _objectSpread({}, state, {\n        stepNumber: action.move,\n        xIsNext: !(action.move % 2)\n      });\n      break;\n\n    case 'SORT_HISTORY':\n      return _objectSpread({}, state, {\n        isDescending: !state.isDescending\n      });\n      break;\n\n    default:\n      return state;\n  }\n};\nexport default gameReducer;","map":{"version":3,"sources":["/Users/lttttoai/Documents/GitHub/carovn/src/reducers/gameReducer.js"],"names":["initialState","history","squares","Array","fill","currentBoard","stepNumber","xIsNext","isDescending","gameReducer","state","action","type","concat","length","move"],"mappings":";;;;;;AAAA;AACA,OAAO,MAAMA,YAAY,GAAG;AAC1BC,EAAAA,OAAO,EAAE,CACP;AACEC,IAAAA,OAAO,EAAE,IAAIC,KAAJ,CAAU,GAAV,EAAeC,IAAf,CAAoB,IAApB;AADX,GADO,CADiB;AAM1BC,EAAAA,YAAY,EAAE,IAAIF,KAAJ,CAAU,GAAV,EAAeC,IAAf,CAAoB,IAApB,CANY;AAO1BE,EAAAA,UAAU,EAAE,CAPc;AAQ1BC,EAAAA,OAAO,EAAE,IARiB;AAS1BC,EAAAA,YAAY,EAAE;AATY,CAArB;AAYP,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGV,YAAT,EAAuBW,MAAvB,KAAkC;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACE,+BACKF,KADL;AAEET,QAAAA,OAAO,EAAE,CACP;AACEC,UAAAA,OAAO,EAAE,IAAIC,KAAJ,CAAU,GAAV,EAAeC,IAAf,CAAoB,IAApB;AADX,SADO,CAFX;AAOEC,QAAAA,YAAY,EAAE,IAAIF,KAAJ,CAAU,GAAV,EAAeC,IAAf,CAAoB,IAApB,CAPhB;AAQEE,QAAAA,UAAU,EAAE,CARd;AASEC,QAAAA,OAAO,EAAE,IATX;AAUEC,QAAAA,YAAY,EAAE;AAVhB;AAYA;;AACF,SAAK,UAAL;AACE,+BAAYE,KAAZ;AACA;;AACF,SAAK,aAAL;AACE,+BACKA,KADL;AAEET,QAAAA,OAAO,EAAEU,MAAM,CAACV,OAAP,CAAeY,MAAf,CAAsB,CAC7B;AACEX,UAAAA,OAAO,EAAES,MAAM,CAACT;AADlB,SAD6B,CAAtB,CAFX;AAOEG,QAAAA,YAAY,EAAEM,MAAM,CAACT,OAPvB;AAQEI,QAAAA,UAAU,EAAEK,MAAM,CAACV,OAAP,CAAea,MAR7B;AASEP,QAAAA,OAAO,EAAE,CAACG,KAAK,CAACH;AATlB;AAWA;;AACF,SAAK,gBAAL;AACE,+BAAYG,KAAZ;AACA;;AACF,SAAK,aAAL;AACE,+BACKA,KADL;AAEEJ,QAAAA,UAAU,EAAEK,MAAM,CAACI,IAFrB;AAGER,QAAAA,OAAO,EAAE,EAAEI,MAAM,CAACI,IAAP,GAAc,CAAhB;AAHX;AAKA;;AACF,SAAK,cAAL;AACE,+BACKL,KADL;AAEEF,QAAAA,YAAY,EAAE,CAACE,KAAK,CAACF;AAFvB;AAIA;;AACF;AACE,aAAOE,KAAP;AAhDJ;AAkDD,CAnDM;AAqDP,eAAeD,WAAf","sourcesContent":["/* eslint-disable no-unreachable */\nexport const initialState = {\n  history: [\n    {\n      squares: new Array(400).fill(null)\n    }\n  ],\n  currentBoard: new Array(400).fill(null),\n  stepNumber: 0,\n  xIsNext: true,\n  isDescending: true\n};\n\nexport const gameReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'NEW_GAME':\n      return {\n        ...state,\n        history: [\n          {\n            squares: new Array(400).fill(null)\n          }\n        ],\n        currentBoard: new Array(400).fill(null),\n        stepNumber: 0,\n        xIsNext: true,\n        isDescending: true\n      };\n      break;\n    case 'END_GAME':\n      return { ...state };\n      break;\n    case 'PLAYER_MOVE':\n      return {\n        ...state,\n        history: action.history.concat([\n          {\n            squares: action.squares\n          }\n        ]),\n        currentBoard: action.squares,\n        stepNumber: action.history.length,\n        xIsNext: !state.xIsNext\n      };\n      break;\n    case 'TOGGLE_HISTORY':\n      return { ...state };\n      break;\n    case 'TIME_TRAVEL':\n      return {\n        ...state,\n        stepNumber: action.move,\n        xIsNext: !(action.move % 2)\n      };\n      break;\n    case 'SORT_HISTORY':\n      return {\n        ...state,\n        isDescending: !state.isDescending\n      };\n      break;\n    default:\n      return state;\n  }\n};\n\nexport default gameReducer;\n"]},"metadata":{},"sourceType":"module"}