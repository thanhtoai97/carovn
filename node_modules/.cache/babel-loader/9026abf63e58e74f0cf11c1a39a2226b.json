{"ast":null,"code":"var _jsxFileName = \"/Users/lttttoai/Documents/GitHub/carovn/src/containers/GameOnline/AppOnline.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PubNubReact from 'pubnub-react';\nimport Swal from 'sweetalert2';\nimport shortid from 'shortid';\nimport GameOnline from './GameOnline';\nimport Board from '../../components/Board'; // import './Game.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onPressCreate = () => {\n      // Create a random name for the channel\n      this.roomId = shortid.generate().substring(0, 5);\n      this.lobbyChannel = \"tictactoelobby--\".concat(this.roomId);\n      this.pubnub.subscribe({\n        channels: [this.lobbyChannel],\n        withPresence: true\n      }); // Open the modal\n\n      Swal.fire({\n        position: 'top',\n        allowOutsideClick: false,\n        title: 'Share this room ID with your friend',\n        text: this.roomId,\n        width: 275,\n        padding: '0.7em',\n        // Custom CSS\n        customClass: {\n          heightAuto: false,\n          title: 'title-class',\n          popup: 'popup-class',\n          confirmButton: 'button-class'\n        }\n      });\n      this.setState({\n        piece: 'X',\n        isRoomCreator: true,\n        isDisabled: true,\n        // Disable the 'Create' button\n        myTurn: true // Room creator makes the 1st move\n\n      });\n    };\n\n    this.onPressJoin = () => {\n      Swal.fire({\n        position: 'top',\n        input: 'text',\n        allowOutsideClick: false,\n        inputPlaceholder: 'Enter the room id',\n        showCancelButton: true,\n        confirmButtonColor: 'rgb(208,33,41)',\n        confirmButtonText: 'OK',\n        width: 275,\n        padding: '0.7em',\n        customClass: {\n          heightAuto: false,\n          popup: 'popup-class',\n          confirmButton: 'join-button-class ',\n          cancelButton: 'join-button-class'\n        }\n      }).then(result => {\n        // Check if the user typed a value in the input field\n        if (result.value) {\n          this.joinRoom(result.value);\n        }\n      });\n    };\n\n    this.onStopGmae = () => {\n      const title = 'You Lost!';\n      const gameChannel = this.props.gameChannel;\n      Swal.fire({\n        position: 'top',\n        allowOutsideClick: false,\n        title,\n        text: 'Continue Playing?',\n        showCancelButton: true,\n        confirmButtonColor: 'rgb(208,33,41)',\n        cancelButtonColor: '#aaa',\n        cancelButtonText: 'Nope',\n        confirmButtonText: 'Yea!',\n        width: 275,\n        customClass: {\n          heightAuto: false,\n          title: 'title-class',\n          popup: 'popup-class',\n          confirmButton: 'button-class',\n          cancelButton: 'button-class'\n        }\n      }).then(result => {\n        // Start a new round\n        if (result.value) {\n          this.pubnub.publish({\n            message: {\n              reset: true\n            },\n            channel: gameChannel\n          });\n        } else {\n          // End the game\n          this.pubnub.publish({\n            message: {\n              endGame: true\n            },\n            channel: gameChannel\n          });\n        }\n      });\n    };\n\n    this.joinRoom = value => {\n      this.roomId = value;\n      this.lobbyChannel = \"tictactoelobby--\".concat(this.roomId); // Check the number of people in the channel\n\n      this.pubnub.hereNow({\n        channels: [this.lobbyChannel]\n      }).then(response => {\n        if (response.totalOccupancy < 2) {\n          this.pubnub.subscribe({\n            channels: [this.lobbyChannel],\n            withPresence: true\n          });\n          this.setState({\n            piece: 'O'\n          });\n          this.pubnub.publish({\n            message: {\n              notRoomCreator: true\n            },\n            channel: this.lobbyChannel\n          });\n        } else {\n          // Game in progress\n          Swal.fire({\n            position: 'top',\n            allowOutsideClick: false,\n            title: 'Error',\n            text: 'Game in progress. Try another room.',\n            width: 275,\n            padding: '0.7em',\n            customClass: {\n              heightAuto: false,\n              title: 'title-class',\n              popup: 'popup-class',\n              confirmButton: 'button-class'\n            }\n          });\n        }\n      }).catch(error => {\n        throw error;\n      });\n    };\n\n    this.endGame = () => {\n      this.setState({\n        piece: '',\n        isPlaying: false,\n        isRoomCreator: false,\n        isDisabled: false,\n        myTurn: false\n      });\n      this.lobbyChannel = null;\n      this.gameChannel = null;\n      this.roomId = null;\n      this.pubnub.unsubscribe({\n        channels: [this.lobbyChannel, this.gameChannel]\n      });\n    };\n\n    this.pubnub = new PubNubReact({\n      publishKey: 'pub-c-34534fcf-4283-47c8-946e-6c47f33fe136',\n      subscribeKey: 'sub-c-8917020c-fc69-11e9-8dd7-ca99873d233c'\n    });\n    this.state = {\n      piece: '',\n      isPlaying: false,\n      isRoomCreator: false,\n      isDisabled: false,\n      myTurn: false\n    };\n    this.lobbyChannel = null;\n    this.gameChannel = null;\n    this.roomId = null;\n    this.pubnub.init(this);\n  }\n\n  componentDidUpdate() {\n    // Check that the player is connected to a channel\n    if (this.lobbyChannel != null) {\n      this.pubnub.getMessage(this.lobbyChannel, msg => {\n        // Start the game once an opponent joins the channel\n        if (msg.message.notRoomCreator) {\n          // Create a different channel for the game\n          this.gameChannel = \"tictactoegame--\".concat(this.roomId);\n          this.pubnub.subscribe({\n            channels: [this.gameChannel]\n          });\n          this.setState({\n            isPlaying: true\n          }); // Close the modals if they are opened\n\n          Swal.close();\n        }\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.pubnub.unsubscribe({\n      channels: [this.lobbyChannel, this.gameChannel]\n    });\n  } // Create a room channel\n\n\n  render() {\n    const _this$state = this.state,\n          isPlaying = _this$state.isPlaying,\n          isDisabled = _this$state.isDisabled,\n          piece = _this$state.piece,\n          isRoomCreator = _this$state.isRoomCreator,\n          myTurn = _this$state.myTurn,\n          xUsername = _this$state.xUsername,\n          oUsername = _this$state.oUsername;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, \"React Tic Tac Toe GameOnline\")), !isPlaying && React.createElement(\"div\", {\n      className: \"game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"game-board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(Board, {\n      squares: 0,\n      onClick: () => null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"game-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"create-button \",\n      disabled: isDisabled,\n      onClick: () => this.onPressCreate(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, ' ', \"Create\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"join-button\",\n      onClick: () => this.onPressJoin(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, ' ', \"Join\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"stop-button \",\n      onClick: () => this.onStopGmae(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, ' ', \"Give In\")))), isPlaying && React.createElement(GameOnline, {\n      pubnub: this.pubnub,\n      gameChannel: this.gameChannel,\n      piece: piece,\n      isRoomCreator: isRoomCreator,\n      myTurn: myTurn,\n      xUsername: xUsername,\n      oUsername: oUsername,\n      endGame: this.endGame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"exit_settings\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, \"Back\"))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/lttttoai/Documents/GitHub/carovn/src/containers/GameOnline/AppOnline.js"],"names":["React","Component","Link","PubNubReact","Swal","shortid","GameOnline","Board","App","constructor","props","onPressCreate","roomId","generate","substring","lobbyChannel","pubnub","subscribe","channels","withPresence","fire","position","allowOutsideClick","title","text","width","padding","customClass","heightAuto","popup","confirmButton","setState","piece","isRoomCreator","isDisabled","myTurn","onPressJoin","input","inputPlaceholder","showCancelButton","confirmButtonColor","confirmButtonText","cancelButton","then","result","value","joinRoom","onStopGmae","gameChannel","cancelButtonColor","cancelButtonText","publish","message","reset","channel","endGame","hereNow","response","totalOccupancy","notRoomCreator","catch","error","isPlaying","unsubscribe","publishKey","subscribeKey","state","init","componentDidUpdate","getMessage","msg","close","componentWillUnmount","render","xUsername","oUsername"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PubNubReact from 'pubnub-react';\nimport Swal from 'sweetalert2';\nimport shortid from 'shortid';\nimport GameOnline from './GameOnline';\nimport Board from '../../components/Board';\n\n// import './Game.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.pubnub = new PubNubReact({\n      publishKey: 'pub-c-34534fcf-4283-47c8-946e-6c47f33fe136',\n      subscribeKey: 'sub-c-8917020c-fc69-11e9-8dd7-ca99873d233c'\n    });\n\n    this.state = {\n      piece: '',\n      isPlaying: false,\n      isRoomCreator: false,\n      isDisabled: false,\n      myTurn: false\n    };\n\n    this.lobbyChannel = null;\n    this.gameChannel = null;\n    this.roomId = null;\n    this.pubnub.init(this);\n  }\n\n  componentDidUpdate() {\n    // Check that the player is connected to a channel\n    if (this.lobbyChannel != null) {\n      this.pubnub.getMessage(this.lobbyChannel, msg => {\n        // Start the game once an opponent joins the channel\n        if (msg.message.notRoomCreator) {\n          // Create a different channel for the game\n          this.gameChannel = `tictactoegame--${this.roomId}`;\n\n          this.pubnub.subscribe({\n            channels: [this.gameChannel]\n          });\n\n          this.setState({\n            isPlaying: true\n          });\n\n          // Close the modals if they are opened\n          Swal.close();\n        }\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.pubnub.unsubscribe({\n      channels: [this.lobbyChannel, this.gameChannel]\n    });\n  }\n\n  // Create a room channel\n  onPressCreate = () => {\n    // Create a random name for the channel\n    this.roomId = shortid.generate().substring(0, 5);\n    this.lobbyChannel = `tictactoelobby--${this.roomId}`;\n\n    this.pubnub.subscribe({\n      channels: [this.lobbyChannel],\n      withPresence: true\n    });\n\n    // Open the modal\n    Swal.fire({\n      position: 'top',\n      allowOutsideClick: false,\n      title: 'Share this room ID with your friend',\n      text: this.roomId,\n      width: 275,\n      padding: '0.7em',\n      // Custom CSS\n      customClass: {\n        heightAuto: false,\n        title: 'title-class',\n        popup: 'popup-class',\n        confirmButton: 'button-class'\n      }\n    });\n\n    this.setState({\n      piece: 'X',\n      isRoomCreator: true,\n      isDisabled: true, // Disable the 'Create' button\n      myTurn: true // Room creator makes the 1st move\n    });\n  };\n\n  // The 'Join' button was pressed\n  onPressJoin = () => {\n    Swal.fire({\n      position: 'top',\n      input: 'text',\n      allowOutsideClick: false,\n      inputPlaceholder: 'Enter the room id',\n      showCancelButton: true,\n      confirmButtonColor: 'rgb(208,33,41)',\n      confirmButtonText: 'OK',\n      width: 275,\n      padding: '0.7em',\n      customClass: {\n        heightAuto: false,\n        popup: 'popup-class',\n        confirmButton: 'join-button-class ',\n        cancelButton: 'join-button-class'\n      }\n    }).then(result => {\n      // Check if the user typed a value in the input field\n      if (result.value) {\n        this.joinRoom(result.value);\n      }\n    });\n  };\n\n  onStopGmae = () => {\n    const title = 'You Lost!';\n    const { gameChannel } = this.props;\n    Swal.fire({\n      position: 'top',\n      allowOutsideClick: false,\n      title,\n      text: 'Continue Playing?',\n      showCancelButton: true,\n      confirmButtonColor: 'rgb(208,33,41)',\n      cancelButtonColor: '#aaa',\n      cancelButtonText: 'Nope',\n      confirmButtonText: 'Yea!',\n      width: 275,\n      customClass: {\n        heightAuto: false,\n        title: 'title-class',\n        popup: 'popup-class',\n        confirmButton: 'button-class',\n        cancelButton: 'button-class'\n      }\n    }).then(result => {\n      // Start a new round\n      if (result.value) {\n        this.pubnub.publish({\n          message: {\n            reset: true\n          },\n          channel: gameChannel\n        });\n      } else {\n        // End the game\n        this.pubnub.publish({\n          message: {\n            endGame: true\n          },\n          channel: gameChannel\n        });\n      }\n    });\n  };\n\n  // Join a room channel\n  joinRoom = value => {\n    this.roomId = value;\n    this.lobbyChannel = `tictactoelobby--${this.roomId}`;\n\n    // Check the number of people in the channel\n    this.pubnub\n      .hereNow({\n        channels: [this.lobbyChannel]\n      })\n      .then(response => {\n        if (response.totalOccupancy < 2) {\n          this.pubnub.subscribe({\n            channels: [this.lobbyChannel],\n            withPresence: true\n          });\n\n          this.setState({\n            piece: 'O'\n          });\n\n          this.pubnub.publish({\n            message: {\n              notRoomCreator: true\n            },\n            channel: this.lobbyChannel\n          });\n        } else {\n          // Game in progress\n          Swal.fire({\n            position: 'top',\n            allowOutsideClick: false,\n            title: 'Error',\n            text: 'Game in progress. Try another room.',\n            width: 275,\n            padding: '0.7em',\n            customClass: {\n              heightAuto: false,\n              title: 'title-class',\n              popup: 'popup-class',\n              confirmButton: 'button-class'\n            }\n          });\n        }\n      })\n      .catch(error => {\n        throw error;\n      });\n  };\n\n  // Reset everything\n  endGame = () => {\n    this.setState({\n      piece: '',\n      isPlaying: false,\n      isRoomCreator: false,\n      isDisabled: false,\n      myTurn: false\n    });\n\n    this.lobbyChannel = null;\n    this.gameChannel = null;\n    this.roomId = null;\n\n    this.pubnub.unsubscribe({\n      channels: [this.lobbyChannel, this.gameChannel]\n    });\n  };\n\n  render() {\n    const {\n      isPlaying,\n      isDisabled,\n      piece,\n      isRoomCreator,\n      myTurn,\n      xUsername,\n      oUsername\n    } = this.state;\n    return (\n      <div>\n        <div className=\"title\">\n          <p>React Tic Tac Toe GameOnline</p>\n        </div>\n        {!isPlaying && (\n          <div className=\"game\">\n            <div className=\"game-board\">\n              <Board squares={0} onClick={() => null} />\n\n              <div className=\"game-info\">\n                <button\n                  type=\"button\"\n                  className=\"create-button \"\n                  disabled={isDisabled}\n                  onClick={() => this.onPressCreate()}\n                >\n                  {' '}\n                  Create\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"join-button\"\n                  onClick={() => this.onPressJoin()}\n                >\n                  {' '}\n                  Join\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"stop-button \"\n                  onClick={() => this.onStopGmae()}\n                >\n                  {' '}\n                  Give In\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {isPlaying && (\n          <GameOnline\n            pubnub={this.pubnub}\n            gameChannel={this.gameChannel}\n            piece={piece}\n            isRoomCreator={isRoomCreator}\n            myTurn={myTurn}\n            xUsername={xUsername}\n            oUsername={oUsername}\n            endGame={this.endGame}\n          />\n        )}\n        <div>\n          <Link to=\"/\">\n            <button type=\"button\" className=\"exit_settings\">\n              Back\n            </button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}