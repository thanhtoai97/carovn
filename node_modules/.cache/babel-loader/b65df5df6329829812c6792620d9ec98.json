{"ast":null,"code":"var _jsxFileName = \"/Users/lttttoai/Documents/GitHub/carovn/src/containers/LoginPage/Login.js\";\n\n/* eslint-disable no-shadow */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Icon, Input, Button, Checkbox, message } from 'antd';\nimport { Redirect } from 'react-router-dom';\nimport { MDBRow } from 'mdbreact';\nimport { loginAsync } from '../../modules/Login/actions/index';\nimport './login.css';\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      const _this$props = this.props,\n            form = _this$props.form,\n            loginAsync = _this$props.loginAsync;\n      e.preventDefault();\n      form.validateFields((err, values) => {\n        if (!err) {\n          message.loading('You Are Logging IN....', 2.5).then(() => {\n            loginAsync(values.email, values.password);\n          });\n        }\n      });\n    };\n\n    this.state = {};\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          form = _this$props2.form,\n          loading = _this$props2.loading,\n          user = _this$props2.user;\n    const getFieldDecorator = form.getFieldDecorator;\n    return React.createElement(\"article\", {\n      className: \"mw5 center  br3 pa3 ba b--black-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, user && React.createElement(Redirect, {\n      to: \"/menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"header pt-3 peach-gradient\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(MDBRow, {\n      className: \"d-flex justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"white-text mb-3 pt-3 font-weight-bold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Log in:\"))), React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      className: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, getFieldDecorator('email', {\n      rules: [{\n        required: true,\n        message: 'Please input your email!'\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"user\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }),\n      placeholder: \"Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, getFieldDecorator('password', {\n      rules: [{\n        required: true,\n        message: 'Please input your Password!'\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"lock\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }),\n      type: \"password\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, getFieldDecorator('remember', {\n      valuePropName: 'checked',\n      initialValue: true\n    })(React.createElement(Checkbox, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Remember me\")), React.createElement(\"a\", {\n      className: \"login-form-forgot\",\n      href: \"boo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Forgot password\"), React.createElement(Button, {\n      loading: loading,\n      type: \"primary\",\n      htmlType: \"submit\",\n      className: \"login-form-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Log in\"), \"Or \", React.createElement(\"a\", {\n      href: \"/#register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"register now!\"))));\n  }\n\n}\n\nconst form = Form.create()(LoginForm);\n\nconst mapStateToProps = state => ({\n  user: state.login.user,\n  error: state.login.error\n});\n\nconst matchDispatchToProps = dispatch => ({\n  loginAsync: (email, password) => dispatch(loginAsync(email, password))\n});\n\nexport default connect(mapStateToProps, matchDispatchToProps)(form);","map":{"version":3,"sources":["/Users/lttttoai/Documents/GitHub/carovn/src/containers/LoginPage/Login.js"],"names":["React","connect","Form","Icon","Input","Button","Checkbox","message","Redirect","MDBRow","loginAsync","LoginForm","Component","constructor","props","handleSubmit","e","form","preventDefault","validateFields","err","values","loading","then","email","password","state","render","user","getFieldDecorator","rules","required","color","valuePropName","initialValue","create","mapStateToProps","login","error","matchDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["/* eslint-disable no-shadow */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Icon, Input, Button, Checkbox, message } from 'antd';\nimport { Redirect } from 'react-router-dom';\nimport { MDBRow } from 'mdbreact';\nimport { loginAsync } from '../../modules/Login/actions/index';\nimport './login.css';\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  handleSubmit = e => {\n    const { form, loginAsync } = this.props;\n    e.preventDefault();\n    form.validateFields((err, values) => {\n      if (!err) {\n        message.loading('You Are Logging IN....', 2.5).then(() => {\n          loginAsync(values.email, values.password);\n        });\n      }\n    });\n  };\n\n  render() {\n    const { form, loading, user } = this.props;\n    const { getFieldDecorator } = form;\n    return (\n      <article className=\"mw5 center  br3 pa3 ba b--black-10\">\n        {user && <Redirect to=\"/menu\" />}\n        <div className=\"header pt-3 peach-gradient\">\n          <MDBRow className=\"d-flex justify-content-center\">\n            <h3 className=\"white-text mb-3 pt-3 font-weight-bold\">Log in:</h3>\n          </MDBRow>\n        </div>\n        <Form onSubmit={this.handleSubmit} className=\"login-form\">\n          <Form.Item>\n            {getFieldDecorator('email', {\n              rules: [{ required: true, message: 'Please input your email!' }]\n            })(\n              <Input\n                prefix={\n                  <Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />\n                }\n                placeholder=\"Email\"\n              />\n            )}\n          </Form.Item>\n          <Form.Item>\n            {getFieldDecorator('password', {\n              rules: [\n                { required: true, message: 'Please input your Password!' }\n              ]\n            })(\n              <Input\n                prefix={\n                  <Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />\n                }\n                type=\"password\"\n                placeholder=\"Password\"\n              />\n            )}\n          </Form.Item>\n          <Form.Item>\n            {getFieldDecorator('remember', {\n              valuePropName: 'checked',\n              initialValue: true\n            })(<Checkbox>Remember me</Checkbox>)}\n            <a className=\"login-form-forgot\" href=\"boo\">\n              Forgot password\n            </a>\n            <Button\n              loading={loading}\n              type=\"primary\"\n              htmlType=\"submit\"\n              className=\"login-form-button\"\n            >\n              Log in\n            </Button>\n            Or <a href=\"/#register\">register now!</a>\n          </Form.Item>\n        </Form>\n      </article>\n    );\n  }\n}\n\nconst form = Form.create()(LoginForm);\n\nconst mapStateToProps = state => ({\n  user: state.login.user,\n  error: state.login.error\n});\n\nconst matchDispatchToProps = dispatch => ({\n  loginAsync: (email, password) => dispatch(loginAsync(email, password))\n});\n\nexport default connect(\n  mapStateToProps,\n  matchDispatchToProps\n)(form);\n"]},"metadata":{},"sourceType":"module"}