{"ast":null,"code":"import _defineProperty from \"/Users/lttttoai/Documents/GitHub/carovn/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/* eslint-disable no-unreachable */\nexport const initialState = {\n  grid: 400,\n  streaks: [// all the possible line streaks that could make a winner.\n  [0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]],\n  history: [{\n    squares: new Array(400).fill(null)\n  }],\n  currentBoard: new Array(400).fill(null),\n  stepNumber: 0,\n  xIsNext: true,\n  isDescending: true\n};\nexport const gameReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'NEW_GAME':\n      return _objectSpread({}, state, {\n        history: [{\n          squares: new Array(state.grid).fill(null)\n        }],\n        currentBoard: new Array(state.grid).fill(null),\n        stepNumber: 0,\n        xIsNext: true,\n        isDescending: true\n      });\n      break;\n\n    case 'END_GAME':\n      return _objectSpread({}, state);\n      break;\n\n    case 'PLAYER_MOVE':\n      return _objectSpread({}, state, {\n        history: action.history.concat([{\n          squares: action.squares\n        }]),\n        currentBoard: action.squares,\n        stepNumber: action.history.length,\n        xIsNext: !state.xIsNext\n      });\n      break;\n\n    case 'TOGGLE_HISTORY':\n      return _objectSpread({}, state);\n      break;\n\n    case 'TIME_TRAVEL':\n      return _objectSpread({}, state, {\n        stepNumber: action.move,\n        xIsNext: !(action.move % 2)\n      });\n      break;\n\n    case 'SORT_HISTORY':\n      return _objectSpread({}, state, {\n        isDescending: !state.isDescending\n      });\n      break;\n\n    case 'SET_GRID_200':\n      return _objectSpread({}, state, {\n        grid: 16,\n        streaks: []\n      });\n      break;\n\n    case 'SET_GRID_9':\n      return _objectSpread({}, state, {\n        grid: 9,\n        streaks: [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]]\n      });\n      break;\n\n    default:\n      return state;\n  }\n};\nexport default gameReducer;","map":{"version":3,"sources":["/Users/lttttoai/Documents/GitHub/carovn/src/reducers/gameReducer.js"],"names":["initialState","grid","streaks","history","squares","Array","fill","currentBoard","stepNumber","xIsNext","isDescending","gameReducer","state","action","type","concat","length","move"],"mappings":"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","sourcesContent":["/* eslint-disable no-unreachable */\nexport const initialState = {\n  grid: 400,\n  streaks: [\n    // all the possible line streaks that could make a winner.\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ],\n  history: [\n    {\n      squares: new Array(400).fill(null)\n    }\n  ],\n  currentBoard: new Array(400).fill(null),\n  stepNumber: 0,\n  xIsNext: true,\n  isDescending: true\n};\n\nexport const gameReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'NEW_GAME':\n      return {\n        ...state,\n        history: [\n          {\n            squares: new Array(state.grid).fill(null)\n          }\n        ],\n        currentBoard: new Array(state.grid).fill(null),\n        stepNumber: 0,\n        xIsNext: true,\n        isDescending: true\n      };\n      break;\n    case 'END_GAME':\n      return { ...state };\n      break;\n    case 'PLAYER_MOVE':\n      return {\n        ...state,\n        history: action.history.concat([\n          {\n            squares: action.squares\n          }\n        ]),\n        currentBoard: action.squares,\n        stepNumber: action.history.length,\n        xIsNext: !state.xIsNext\n      };\n      break;\n    case 'TOGGLE_HISTORY':\n      return { ...state };\n      break;\n    case 'TIME_TRAVEL':\n      return {\n        ...state,\n        stepNumber: action.move,\n        xIsNext: !(action.move % 2)\n      };\n      break;\n    case 'SORT_HISTORY':\n      return {\n        ...state,\n        isDescending: !state.isDescending\n      };\n      break;\n    case 'SET_GRID_200':\n      return {\n        ...state,\n        grid: 16,\n        streaks: []\n      };\n      break;\n    case 'SET_GRID_9':\n      return {\n        ...state,\n        grid: 9,\n        streaks: [\n          [0, 1, 2],\n          [3, 4, 5],\n          [6, 7, 8],\n          [0, 3, 6],\n          [1, 4, 7],\n          [2, 5, 8],\n          [0, 4, 8],\n          [2, 4, 6]\n        ]\n      };\n      break;\n    default:\n      return state;\n  }\n};\n\nexport default gameReducer;\n"]},"metadata":{},"sourceType":"module"}