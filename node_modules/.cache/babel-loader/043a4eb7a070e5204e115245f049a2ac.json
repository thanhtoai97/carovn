{"ast":null,"code":"import _slicedToArray from \"/Users/lttttoai/Documents/GitHub/carovn/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/* eslint-disable no-return-assign */\n\n/* eslint-disable no-plusplus */\n\n/* eslint-disable no-console */\nconst streaks = {\n  nine: [// all the possible line streaks that could make a winner.\n  [0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]],\n  sixteen: [[0, 1, 2, 3, 4], [1, 2, 3, 4, 5], [2, 3, 4, 5, 6], [3, 4, 5, 6, 7], [4, 5, 6, 7, 8], [5, 6, 7, 8, 9], [6, 7, 8, 9, 10], [7, 8, 9, 10, 11], [8, 9, 10, 11, 12], [9, 10, 11, 12, 13], [10, 11, 12, 13, 14], [11, 12, 13, 14, 15], [12, 13, 14, 15, 16], [13, 14, 15, 16, 17], [14, 15, 16, 17, 18], [15, 16, 17, 18, 19], [16, 17, 18, 19, 20], [17, 18, 19, 20, 21], [18, 19, 20, 21, 22], [19, 20, 21, 22, 23], [20, 21, 22, 23, 24], [21, 22, 23, 24, 25], [22, 23, 24, 25, 26], [23, 24, 25, 26, 27], [24, 25, 26, 27, 28], [25, 26, 27, 28, 29], [26, 27, 28, 29, 30], [27, 28, 29, 30, 31], [28, 29, 30, 31, 32], [29, 30, 31, 32, 33], [30, 31, 32, 33, 34], [31, 32, 33, 34, 35], [32, 33, 34, 35, 36], [33, 34, 35, 36, 37], [34, 35, 36, 37, 38], [35, 36, 37, 38, 39], [36, 37, 38, 39, 40], [37, 38, 39, 40, 41], [38, 39, 40, 41, 42], [39, 40, 41, 42, 43], [0, 1, 2, 3, 4], [1, 2, 3, 4, 5], [2, 3, 4, 5, 6], [3, 4, 5, 6, 7], [4, 5, 6, 7, 8], [5, 6, 7, 8, 9], [6, 7, 8, 9, 10], [7, 8, 9, 10, 11], [8, 9, 10, 11, 12], [9, 10, 11, 12, 13], [10, 11, 12, 13, 14], [11, 12, 13, 14, 15], [12, 13, 14, 15, 16], [13, 14, 15, 16, 17], [14, 15, 16, 17, 18], [15, 16, 17, 18, 19], [16, 17, 18, 19, 20], [17, 18, 19, 20, 21], [18, 19, 20, 21, 22], [19, 20, 21, 22, 23], [20, 21, 22, 23, 24], [21, 22, 23, 24, 25], [22, 23, 24, 25, 26], [23, 24, 25, 26, 27], [24, 25, 26, 27, 28], [25, 26, 27, 28, 29], [26, 27, 28, 29, 30], [27, 28, 29, 30, 31], [28, 29, 30, 31, 32], [29, 30, 31, 32, 33], [30, 31, 32, 33, 34], [31, 32, 33, 34, 35], [32, 33, 34, 35, 36], [33, 34, 35, 36, 37], [34, 35, 36, 37, 38], [35, 36, 37, 38, 39], [36, 37, 38, 39, 40], [37, 38, 39, 40, 41], [38, 39, 40, 41, 42], [39, 40, 41, 42, 43], [40, 41, 42, 43, 44], [41, 42, 43, 44, 45], [42, 43, 44, 45, 46], [43, 44, 45, 46, 47], [44, 45, 46, 47, 48], [45, 46, 47, 48, 49], [46, 47, 48, 49, 50], [47, 48, 49, 50, 51], [48, 49, 50, 51, 52], [49, 50, 51, 52, 53], [50, 51, 52, 53, 54], [51, 52, 53, 54, 55], [52, 53, 54, 55, 56], [53, 54, 55, 56, 57], [54, 55, 56, 57, 58], [55, 56, 57, 58, 59], [56, 57, 58, 59, 60], [57, 58, 59, 60, 61], [58, 59, 60, 61, 62], [59, 60, 61, 62, 63], [60, 61, 62, 63, 64], [61, 62, 63, 64, 65], [62, 63, 64, 65, 66], [63, 64, 65, 66, 67], [64, 65, 66, 67, 68], [65, 66, 67, 68, 69], [66, 67, 68, 69, 70], [67, 68, 69, 70, 71], [68, 69, 70, 71, 72], [69, 70, 71, 72, 73], [70, 71, 72, 73, 74], [71, 72, 73, 74, 75], [72, 73, 74, 75, 76], [73, 74, 75, 76, 77], [74, 75, 76, 77, 78], [75, 76, 77, 78, 79], [76, 77, 78, 79, 80], [77, 78, 79, 80, 81], [78, 79, 80, 81, 82], [79, 80, 81, 82, 83], [80, 81, 82, 83, 84], [81, 82, 83, 84, 85], [82, 83, 84, 85, 86], [83, 84, 85, 86, 87], [84, 85, 86, 87, 88], [85, 86, 87, 88, 89], [86, 87, 88, 89, 90], [87, 88, 89, 90, 91], [88, 89, 90, 91, 92], [89, 90, 91, 92, 93], [90, 91, 92, 93, 94], [91, 92, 93, 94, 95], [92, 93, 94, 95, 96], [93, 94, 95, 96, 97], [94, 95, 96, 97, 98], [95, 96, 97, 98, 99], [96, 97, 98, 99, 100], [97, 98, 99, 100, 101], [98, 99, 100, 101, 102], [99, 100, 101, 102, 103], [100, 101, 102, 103, 104], [101, 102, 103, 104, 105], [102, 103, 104, 105, 106], [103, 104, 105, 106, 107], [104, 105, 106, 107, 108], [105, 106, 107, 108, 109], [106, 107, 108, 109, 110], [107, 108, 109, 110, 111], [108, 109, 110, 111, 112], [109, 110, 111, 112, 113], [110, 111, 112, 113, 114], [111, 112, 113, 114, 115], [112, 113, 114, 115, 116], [113, 114, 115, 116, 117], [114, 115, 116, 117, 118], [115, 116, 117, 118, 119], [116, 117, 118, 119, 120], [117, 118, 119, 120, 121], [118, 119, 120, 121, 122], [119, 120, 121, 122, 123], [120, 121, 122, 123, 124], [121, 122, 123, 124, 125], [122, 123, 124, 125, 126], [123, 124, 125, 126, 127], [124, 125, 126, 127, 128], [125, 126, 127, 128, 129], [126, 127, 128, 129, 130], [127, 128, 129, 130, 131], [128, 129, 130, 131, 132], [129, 130, 131, 132, 133], [130, 131, 132, 133, 134], [131, 132, 133, 134, 135], [132, 133, 134, 135, 136], [133, 134, 135, 136, 137], [134, 135, 136, 137, 138], [135, 136, 137, 138, 139], [136, 137, 138, 139, 140], [137, 138, 139, 140, 141], [138, 139, 140, 141, 142], [139, 140, 141, 142, 143], [140, 141, 142, 143, 144], [141, 142, 143, 144, 145], [142, 143, 144, 145, 146], [143, 144, 145, 146, 147], [144, 145, 146, 147, 148], [145, 146, 147, 148, 149], [146, 147, 148, 149, 150], [147, 148, 149, 150, 151], [148, 149, 150, 151, 152], [149, 150, 151, 152, 153], [150, 151, 152, 153, 154], [151, 152, 153, 154, 155], [152, 153, 154, 155, 156], [153, 154, 155, 156, 157], [154, 155, 156, 157, 158], [155, 156, 157, 158, 159], [156, 157, 158, 159, 160], [157, 158, 159, 160, 161], [158, 159, 160, 161, 162], [159, 160, 161, 162, 163], [160, 161, 162, 163, 164], [161, 162, 163, 164, 165], [162, 163, 164, 165, 166], [163, 164, 165, 166, 167], [164, 165, 166, 167, 168], [165, 166, 167, 168, 169], [166, 167, 168, 169, 170], [167, 168, 169, 170, 171], [168, 169, 170, 171, 172], [169, 170, 171, 172, 173], [170, 171, 172, 173, 174], [171, 172, 173, 174, 175], [172, 173, 174, 175, 176], [173, 174, 175, 176, 177], [174, 175, 176, 177, 178], [175, 176, 177, 178, 179], [176, 177, 178, 179, 180], [177, 178, 179, 180, 181], [178, 179, 180, 181, 182], [179, 180, 181, 182, 183], [180, 181, 182, 183, 184], [181, 182, 183, 184, 185], [182, 183, 184, 185, 186], [183, 184, 185, 186, 187], [184, 185, 186, 187, 188], [185, 186, 187, 188, 189], [186, 187, 188, 189, 190], [187, 188, 189, 190, 191], [188, 189, 190, 191, 192], [189, 190, 191, 192, 193], [190, 191, 192, 193, 194], [191, 192, 193, 194, 195], [192, 193, 194, 195, 196], [193, 194, 195, 196, 197], [194, 195, 196, 197, 198], [195, 196, 197, 198, 199], [196, 197, 198, 199, 200], [197, 198, 199, 200, 201], [198, 199, 200, 201, 202], [199, 200, 201, 202, 203], [200, 201, 202, 203, 204], [201, 202, 203, 204, 205], [202, 203, 204, 205, 206], [203, 204, 205, 206, 207], [204, 205, 206, 207, 208], [205, 206, 207, 208, 209], [206, 207, 208, 209, 210], [207, 208, 209, 210, 211], [208, 209, 210, 211, 212], [209, 210, 211, 212, 213], [210, 211, 212, 213, 214], [211, 212, 213, 214, 215], [212, 213, 214, 215, 216], [213, 214, 215, 216, 217], [214, 215, 216, 217, 218], [215, 216, 217, 218, 219], [216, 217, 218, 219, 220], [217, 218, 219, 220, 221], [218, 219, 220, 221, 222], [219, 220, 221, 222, 223], [220, 221, 222, 223, 224], [221, 222, 223, 224, 225], [222, 223, 224, 225, 226], [223, 224, 225, 226, 227], [224, 225, 226, 227, 228], [225, 226, 227, 228, 229], [226, 227, 228, 229, 230], [227, 228, 229, 230, 231], [228, 229, 230, 231, 232], [229, 230, 231, 232, 233], [230, 231, 232, 233, 234], [231, 232, 233, 234, 235], [232, 233, 234, 235, 236], [233, 234, 235, 236, 237], [234, 235, 236, 237, 238], [235, 236, 237, 238, 239], [236, 237, 238, 239, 240], [237, 238, 239, 240, 241], [238, 239, 240, 241, 242], [239, 240, 241, 242, 243], [240, 241, 242, 243, 244], [241, 242, 243, 244, 245], [242, 243, 244, 245, 246], [243, 244, 245, 246, 247], [244, 245, 246, 247, 248], [245, 246, 247, 248, 249], [246, 247, 248, 249, 250], [247, 248, 249, 250, 251], [248, 249, 250, 251, 252], [249, 250, 251, 252, 253], [250, 251, 252, 253, 254], [251, 252, 253, 254, 255], [252, 253, 254, 255, 256], [253, 254, 255, 256, 257], [254, 255, 256, 257, 258], [255, 256, 257, 258, 259], [256, 257, 258, 259, 260], [257, 258, 259, 260, 261], [258, 259, 260, 261, 262], [259, 260, 261, 262, 263], [260, 261, 262, 263, 264], [261, 262, 263, 264, 265], [262, 263, 264, 265, 266], [263, 264, 265, 266, 267], [264, 265, 266, 267, 268], [265, 266, 267, 268, 269], [266, 267, 268, 269, 270], [267, 268, 269, 270, 271], [268, 269, 270, 271, 272], [269, 270, 271, 272, 273], [270, 271, 272, 273, 274], [271, 272, 273, 274, 275], [272, 273, 274, 275, 276], [273, 274, 275, 276, 277], [274, 275, 276, 277, 278], [275, 276, 277, 278, 279], [276, 277, 278, 279, 280], [277, 278, 279, 280, 281], [278, 279, 280, 281, 282], [279, 280, 281, 282, 283], [280, 281, 282, 283, 284], [281, 282, 283, 284, 285], [282, 283, 284, 285, 286], [283, 284, 285, 286, 287], [284, 285, 286, 287, 288], [285, 286, 287, 288, 289], [286, 287, 288, 289, 290], [287, 288, 289, 290, 291], [288, 289, 290, 291, 292], [289, 290, 291, 292, 293], [290, 291, 292, 293, 294], [291, 292, 293, 294, 295], [292, 293, 294, 295, 296], [293, 294, 295, 296, 297], [294, 295, 296, 297, 298], [295, 296, 297, 298, 299], [296, 297, 298, 299, 300], [297, 298, 299, 300, 301], [298, 299, 300, 301, 302], [299, 300, 301, 302, 303], [300, 301, 302, 303, 304], [301, 302, 303, 304, 305], [302, 303, 304, 305, 306], [303, 304, 305, 306, 307], [304, 305, 306, 307, 308], [305, 306, 307, 308, 309], [306, 307, 308, 309, 310], [307, 308, 309, 310, 311], [308, 309, 310, 311, 312], [309, 310, 311, 312, 313], [310, 311, 312, 313, 314], [311, 312, 313, 314, 315], [312, 313, 314, 315, 316], [313, 314, 315, 316, 317], [314, 315, 316, 317, 318], [315, 316, 317, 318, 319], [316, 317, 318, 319, 320], [317, 318, 319, 320, 321], [318, 319, 320, 321, 322], [319, 320, 321, 322, 323], [320, 321, 322, 323, 324], [321, 322, 323, 324, 325], [322, 323, 324, 325, 326], [323, 324, 325, 326, 327], [324, 325, 326, 327, 328], [325, 326, 327, 328, 329], [326, 327, 328, 329, 330], [327, 328, 329, 330, 331], [328, 329, 330, 331, 332], [329, 330, 331, 332, 333], [330, 331, 332, 333, 334], [331, 332, 333, 334, 335], [332, 333, 334, 335, 336], [333, 334, 335, 336, 337], [334, 335, 336, 337, 338], [335, 336, 337, 338, 339], [336, 337, 338, 339, 340], [337, 338, 339, 340, 341], [338, 339, 340, 341, 342], [339, 340, 341, 342, 343], [340, 341, 342, 343, 344], [341, 342, 343, 344, 345], [342, 343, 344, 345, 346], [343, 344, 345, 346, 347], [344, 345, 346, 347, 348], [345, 346, 347, 348, 349], [346, 347, 348, 349, 350], [347, 348, 349, 350, 351], [348, 349, 350, 351, 352], [349, 350, 351, 352, 353], [350, 351, 352, 353, 354], [351, 352, 353, 354, 355], [352, 353, 354, 355, 356], [353, 354, 355, 356, 357], [354, 355, 356, 357, 358], [355, 356, 357, 358, 359], [356, 357, 358, 359, 360], [357, 358, 359, 360, 361], [358, 359, 360, 361, 362], [359, 360, 361, 362, 363], [360, 361, 362, 363, 364], [361, 362, 363, 364, 365], [362, 363, 364, 365, 366], [363, 364, 365, 366, 367], [364, 365, 366, 367, 368], [365, 366, 367, 368, 369], [366, 367, 368, 369, 370], [367, 368, 369, 370, 371], [368, 369, 370, 371, 372], [369, 370, 371, 372, 373], [370, 371, 372, 373, 374], [371, 372, 373, 374, 375], [372, 373, 374, 375, 376], [373, 374, 375, 376, 377], [374, 375, 376, 377, 378], [375, 376, 377, 378, 379], [376, 377, 378, 379, 380], [377, 378, 379, 380, 381], [378, 379, 380, 381, 382], [379, 380, 381, 382, 383], [380, 381, 382, 383, 384], [381, 382, 383, 384, 385], [382, 383, 384, 385, 386], [383, 384, 385, 386, 387], [384, 385, 386, 387, 388], [385, 386, 387, 388, 389], [386, 387, 388, 389, 390], [387, 388, 389, 390, 391], [388, 389, 390, 391, 392], [389, 390, 391, 392, 393], [390, 391, 392, 393, 394], [391, 392, 393, 394, 395], [392, 393, 394, 395, 396], [393, 394, 395, 396, 397], [394, 395, 396, 397, 398], [395, 396, 397, 398, 399], [0, 4, 8, 12, 14], [1, 5, 9, 13, 17], [2, 6, 10, 14, 18], [3, 7, 11, 15, 19], [0, 5, 10, 15, 20], [3, 6, 9, 12, 15]]\n};\n\nconst indicateVictory = (cells, grid) => {\n  if (grid === 9) {\n    const possibleStreaks = streaks.nine;\n\n    for (let i = 0; i < possibleStreaks.length; i += 1) {\n      const _possibleStreaks$i = _slicedToArray(possibleStreaks[i], 3),\n            a = _possibleStreaks$i[0],\n            b = _possibleStreaks$i[1],\n            c = _possibleStreaks$i[2];\n\n      if (cells[a] && cells[a] === cells[b] && cells[a] === cells[c]) {\n        return {\n          winner: cells[a],\n          winningRow: [a, b, c]\n        };\n      }\n    }\n  } else if (grid === 16) {\n    const possibleStreaks = streaks.sixteen;\n\n    for (let i = 0; i < possibleStreaks.length; i += 1) {\n      const _possibleStreaks$i2 = _slicedToArray(possibleStreaks[i], 4),\n            a = _possibleStreaks$i2[0],\n            b = _possibleStreaks$i2[1],\n            c = _possibleStreaks$i2[2],\n            d = _possibleStreaks$i2[3];\n\n      if (cells[a] && cells[a] === cells[b] && cells[a] === cells[c] && cells[a] === cells[d]) {\n        return {\n          winner: cells[a],\n          winningRow: [a, b, c, d]\n        };\n      }\n    }\n  }\n\n  return {\n    winner: null,\n    winningRow: [null, null, null]\n  };\n};\n\nconst getGameScore = (winner, movesCount) => {\n  let score;\n  const urgency = movesCount === 0 ? -80 : movesCount; // if its an immediate win return highest score always.\n\n  if (winner === 'X') {\n    score = -20 + urgency;\n  } else if (winner === 'O') {\n    score = 20 - urgency;\n  } else {\n    score = 0;\n  }\n\n  return score;\n};\n\nconst getAvailableMoves = board => {\n  // returns an array of available cells\n  const available = [];\n  board.forEach((cell, cellIndex) => {\n    if (cell === null) {\n      available.push(cellIndex);\n    }\n  });\n  return available;\n};\n\nconst minMax = (board, xTurn, grid, depth = 0) => {\n  const _indicateVictory = indicateVictory(board, grid),\n        winner = _indicateVictory.winner;\n\n  let score = null;\n  const moves = getAvailableMoves(board);\n\n  if (winner || moves.length === 0) {\n    return getGameScore(winner, depth);\n  }\n\n  moves.forEach(move => {\n    const newBoard = board.slice();\n    newBoard[move] = xTurn ? 'X' : 'O';\n    const moveScore = minMax(newBoard, !xTurn, grid, // eslint-disable-next-line no-param-reassign\n    ++depth);\n\n    if (xTurn) {\n      if (moveScore < score || score === null) {\n        score = moveScore;\n      }\n    } else if (moveScore > score || score === null) {\n      score = moveScore;\n    }\n  });\n  return score;\n};\n\nexport const getBestMove = (board, grid, xTurn) => {\n  let bestScore = null;\n  let bestMove = null;\n  const moves = getAvailableMoves(board);\n  console.log(\"available moves: \".concat(moves.length));\n  console.log(moves); // on 4x4 grid recursive analysis is applied for 8 or less options.\n\n  if (grid === 9 || moves.length <= 8) {\n    if (grid === 9 && moves.length === 8 && !board[4]) {\n      return bestMove = 4;\n    }\n\n    moves.forEach(move => {\n      const newBoard = board.slice();\n      newBoard[move] = xTurn ? 'X' : 'O';\n      const newScore = minMax(newBoard, !xTurn, grid);\n      console.log(\"\".concat(move, \"'s score: \").concat(newScore));\n\n      if (xTurn) {\n        if (newScore < bestScore || bestScore === null) {\n          bestScore = newScore;\n          bestMove = move;\n        }\n      } else if (newScore > bestScore || bestScore === null) {\n        bestScore = newScore;\n        bestMove = move;\n      }\n    });\n  } else {\n    /* for 4x4 grids I implemented simple logic for the first few moves to reduce system overload.\n      Recursive analysis of 9 or more available moves will decrease performance and might even cause the game to crash.\n       This logic calculates threat and advantage of current board's state, compares the two and prioritises the highest.\n      Then the AI makes his move based on his current priority, if it is to block a threat or build up an advantage. */\n    const enemy = xTurn ? 'O' : 'X';\n    const self = xTurn ? 'X' : 'O';\n    let threat;\n    let advantage;\n    let priority = -1;\n\n    if (moves.length === 200) {\n      const openers = [0, 3, 12, 15, 24];\n      openers.forEach(opener => {\n        if (!board[opener]) {\n          bestMove = opener;\n        }\n      });\n    }\n\n    streaks.sixteen.forEach(streak => {\n      threat = streak.filter(cell => {\n        return board[cell] === enemy;\n      }).length;\n      advantage = streak.filter(cell => {\n        return board[cell] === self;\n      }).length;\n      const full = advantage + threat === 4;\n\n      if (!full) {\n        if (threat > advantage && threat > priority) {\n          streak.forEach(cell => {\n            if (!board[cell]) {\n              bestMove = cell;\n            }\n\n            priority = threat;\n          });\n        } else if (advantage > threat && advantage > priority) {\n          streak.forEach(cell => {\n            if (!board[cell]) {\n              bestMove = cell;\n            }\n\n            priority = advantage;\n          });\n        }\n      }\n\n      console.log(\"\".concat(streak, \": threat: \").concat(threat, \" advantage: \").concat(advantage, \" full: \").concat(full));\n    });\n    console.log(\"priority: \".concat(priority));\n  }\n\n  console.log(\"best move: \".concat(bestMove, \" score: \").concat(bestScore));\n  return bestMove;\n};\nexport const aiMove = (bestMove, board, difficulty) => {\n  // AI will make his move based on the difficulty level.\n  const moves = getAvailableMoves(board);\n  const randomChoice = moves[Math.floor(Math.random() * moves.length)];\n  let choice;\n\n  if (difficulty === 'novice') {\n    if (Math.random() * 100 <= 60) {\n      choice = bestMove;\n    } else {\n      choice = randomChoice;\n    }\n\n    console.log(\"Novice Move: \".concat(choice));\n  } else if (difficulty === 'easy') {\n    if (Math.random() * 100 <= 20) {\n      choice = bestMove;\n    } else {\n      choice = randomChoice;\n    }\n\n    console.log(\"Easy Move: \".concat(choice));\n  } else if (difficulty === 'expert') {\n    choice = bestMove;\n    console.log(\"expert Move: \".concat(choice));\n  }\n\n  return choice;\n};","map":{"version":3,"sources":["/Users/lttttoai/Documents/GitHub/carovn/src/acctions/aiAction.js"],"names":["streaks","nine","sixteen","indicateVictory","cells","grid","possibleStreaks","i","length","a","b","c","winner","winningRow","d","getGameScore","movesCount","score","urgency","getAvailableMoves","board","available","forEach","cell","cellIndex","push","minMax","xTurn","depth","moves","move","newBoard","slice","moveScore","getBestMove","bestScore","bestMove","console","log","newScore","enemy","self","threat","advantage","priority","openers","opener","streak","filter","full","aiMove","difficulty","randomChoice","Math","floor","random","choice"],"mappings":"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","sourcesContent":["/* eslint-disable no-return-assign */\n/* eslint-disable no-plusplus */\n/* eslint-disable no-console */\nconst streaks = {\n  nine: [\n    // all the possible line streaks that could make a winner.\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ],\n  sixteen: [\n    [0, 1, 2, 3, 4],\n    [1, 2, 3, 4, 5],\n    [2, 3, 4, 5, 6],\n    [3, 4, 5, 6, 7],\n    [4, 5, 6, 7, 8],\n    [5, 6, 7, 8, 9],\n    [6, 7, 8, 9, 10],\n    [7, 8, 9, 10, 11],\n    [8, 9, 10, 11, 12],\n    [9, 10, 11, 12, 13],\n    [10, 11, 12, 13, 14],\n    [11, 12, 13, 14, 15],\n    [12, 13, 14, 15, 16],\n    [13, 14, 15, 16, 17],\n    [14, 15, 16, 17, 18],\n    [15, 16, 17, 18, 19],\n    [16, 17, 18, 19, 20],\n    [17, 18, 19, 20, 21],\n    [18, 19, 20, 21, 22],\n    [19, 20, 21, 22, 23],\n    [20, 21, 22, 23, 24],\n    [21, 22, 23, 24, 25],\n    [22, 23, 24, 25, 26],\n    [23, 24, 25, 26, 27],\n    [24, 25, 26, 27, 28],\n    [25, 26, 27, 28, 29],\n    [26, 27, 28, 29, 30],\n    [27, 28, 29, 30, 31],\n    [28, 29, 30, 31, 32],\n    [29, 30, 31, 32, 33],\n    [30, 31, 32, 33, 34],\n    [31, 32, 33, 34, 35],\n    [32, 33, 34, 35, 36],\n    [33, 34, 35, 36, 37],\n    [34, 35, 36, 37, 38],\n    [35, 36, 37, 38, 39],\n    [36, 37, 38, 39, 40],\n    [37, 38, 39, 40, 41],\n    [38, 39, 40, 41, 42],\n    [39, 40, 41, 42, 43],\n\n    [0, 1, 2, 3, 4],\n    [1, 2, 3, 4, 5],\n    [2, 3, 4, 5, 6],\n    [3, 4, 5, 6, 7],\n    [4, 5, 6, 7, 8],\n    [5, 6, 7, 8, 9],\n    [6, 7, 8, 9, 10],\n    [7, 8, 9, 10, 11],\n    [8, 9, 10, 11, 12],\n    [9, 10, 11, 12, 13],\n    [10, 11, 12, 13, 14],\n    [11, 12, 13, 14, 15],\n    [12, 13, 14, 15, 16],\n    [13, 14, 15, 16, 17],\n    [14, 15, 16, 17, 18],\n    [15, 16, 17, 18, 19],\n    [16, 17, 18, 19, 20],\n    [17, 18, 19, 20, 21],\n    [18, 19, 20, 21, 22],\n    [19, 20, 21, 22, 23],\n    [20, 21, 22, 23, 24],\n    [21, 22, 23, 24, 25],\n    [22, 23, 24, 25, 26],\n    [23, 24, 25, 26, 27],\n    [24, 25, 26, 27, 28],\n    [25, 26, 27, 28, 29],\n    [26, 27, 28, 29, 30],\n    [27, 28, 29, 30, 31],\n    [28, 29, 30, 31, 32],\n    [29, 30, 31, 32, 33],\n    [30, 31, 32, 33, 34],\n    [31, 32, 33, 34, 35],\n    [32, 33, 34, 35, 36],\n    [33, 34, 35, 36, 37],\n    [34, 35, 36, 37, 38],\n    [35, 36, 37, 38, 39],\n    [36, 37, 38, 39, 40],\n    [37, 38, 39, 40, 41],\n    [38, 39, 40, 41, 42],\n    [39, 40, 41, 42, 43],\n    [40, 41, 42, 43, 44],\n    [41, 42, 43, 44, 45],\n    [42, 43, 44, 45, 46],\n    [43, 44, 45, 46, 47],\n    [44, 45, 46, 47, 48],\n    [45, 46, 47, 48, 49],\n    [46, 47, 48, 49, 50],\n    [47, 48, 49, 50, 51],\n    [48, 49, 50, 51, 52],\n    [49, 50, 51, 52, 53],\n    [50, 51, 52, 53, 54],\n    [51, 52, 53, 54, 55],\n    [52, 53, 54, 55, 56],\n    [53, 54, 55, 56, 57],\n    [54, 55, 56, 57, 58],\n    [55, 56, 57, 58, 59],\n    [56, 57, 58, 59, 60],\n    [57, 58, 59, 60, 61],\n    [58, 59, 60, 61, 62],\n    [59, 60, 61, 62, 63],\n    [60, 61, 62, 63, 64],\n    [61, 62, 63, 64, 65],\n    [62, 63, 64, 65, 66],\n    [63, 64, 65, 66, 67],\n    [64, 65, 66, 67, 68],\n    [65, 66, 67, 68, 69],\n    [66, 67, 68, 69, 70],\n    [67, 68, 69, 70, 71],\n    [68, 69, 70, 71, 72],\n    [69, 70, 71, 72, 73],\n    [70, 71, 72, 73, 74],\n    [71, 72, 73, 74, 75],\n    [72, 73, 74, 75, 76],\n    [73, 74, 75, 76, 77],\n    [74, 75, 76, 77, 78],\n    [75, 76, 77, 78, 79],\n    [76, 77, 78, 79, 80],\n    [77, 78, 79, 80, 81],\n    [78, 79, 80, 81, 82],\n    [79, 80, 81, 82, 83],\n    [80, 81, 82, 83, 84],\n    [81, 82, 83, 84, 85],\n    [82, 83, 84, 85, 86],\n    [83, 84, 85, 86, 87],\n    [84, 85, 86, 87, 88],\n    [85, 86, 87, 88, 89],\n    [86, 87, 88, 89, 90],\n    [87, 88, 89, 90, 91],\n    [88, 89, 90, 91, 92],\n    [89, 90, 91, 92, 93],\n    [90, 91, 92, 93, 94],\n    [91, 92, 93, 94, 95],\n    [92, 93, 94, 95, 96],\n    [93, 94, 95, 96, 97],\n    [94, 95, 96, 97, 98],\n    [95, 96, 97, 98, 99],\n    [96, 97, 98, 99, 100],\n    [97, 98, 99, 100, 101],\n    [98, 99, 100, 101, 102],\n    [99, 100, 101, 102, 103],\n    [100, 101, 102, 103, 104],\n    [101, 102, 103, 104, 105],\n    [102, 103, 104, 105, 106],\n    [103, 104, 105, 106, 107],\n    [104, 105, 106, 107, 108],\n    [105, 106, 107, 108, 109],\n    [106, 107, 108, 109, 110],\n    [107, 108, 109, 110, 111],\n    [108, 109, 110, 111, 112],\n    [109, 110, 111, 112, 113],\n    [110, 111, 112, 113, 114],\n    [111, 112, 113, 114, 115],\n    [112, 113, 114, 115, 116],\n    [113, 114, 115, 116, 117],\n    [114, 115, 116, 117, 118],\n    [115, 116, 117, 118, 119],\n    [116, 117, 118, 119, 120],\n    [117, 118, 119, 120, 121],\n    [118, 119, 120, 121, 122],\n    [119, 120, 121, 122, 123],\n    [120, 121, 122, 123, 124],\n    [121, 122, 123, 124, 125],\n    [122, 123, 124, 125, 126],\n    [123, 124, 125, 126, 127],\n    [124, 125, 126, 127, 128],\n    [125, 126, 127, 128, 129],\n    [126, 127, 128, 129, 130],\n    [127, 128, 129, 130, 131],\n    [128, 129, 130, 131, 132],\n    [129, 130, 131, 132, 133],\n    [130, 131, 132, 133, 134],\n    [131, 132, 133, 134, 135],\n    [132, 133, 134, 135, 136],\n    [133, 134, 135, 136, 137],\n    [134, 135, 136, 137, 138],\n    [135, 136, 137, 138, 139],\n    [136, 137, 138, 139, 140],\n    [137, 138, 139, 140, 141],\n    [138, 139, 140, 141, 142],\n    [139, 140, 141, 142, 143],\n    [140, 141, 142, 143, 144],\n    [141, 142, 143, 144, 145],\n    [142, 143, 144, 145, 146],\n    [143, 144, 145, 146, 147],\n    [144, 145, 146, 147, 148],\n    [145, 146, 147, 148, 149],\n    [146, 147, 148, 149, 150],\n    [147, 148, 149, 150, 151],\n    [148, 149, 150, 151, 152],\n    [149, 150, 151, 152, 153],\n    [150, 151, 152, 153, 154],\n    [151, 152, 153, 154, 155],\n    [152, 153, 154, 155, 156],\n    [153, 154, 155, 156, 157],\n    [154, 155, 156, 157, 158],\n    [155, 156, 157, 158, 159],\n    [156, 157, 158, 159, 160],\n    [157, 158, 159, 160, 161],\n    [158, 159, 160, 161, 162],\n    [159, 160, 161, 162, 163],\n    [160, 161, 162, 163, 164],\n    [161, 162, 163, 164, 165],\n    [162, 163, 164, 165, 166],\n    [163, 164, 165, 166, 167],\n    [164, 165, 166, 167, 168],\n    [165, 166, 167, 168, 169],\n    [166, 167, 168, 169, 170],\n    [167, 168, 169, 170, 171],\n    [168, 169, 170, 171, 172],\n    [169, 170, 171, 172, 173],\n    [170, 171, 172, 173, 174],\n    [171, 172, 173, 174, 175],\n    [172, 173, 174, 175, 176],\n    [173, 174, 175, 176, 177],\n    [174, 175, 176, 177, 178],\n    [175, 176, 177, 178, 179],\n    [176, 177, 178, 179, 180],\n    [177, 178, 179, 180, 181],\n    [178, 179, 180, 181, 182],\n    [179, 180, 181, 182, 183],\n    [180, 181, 182, 183, 184],\n    [181, 182, 183, 184, 185],\n    [182, 183, 184, 185, 186],\n    [183, 184, 185, 186, 187],\n    [184, 185, 186, 187, 188],\n    [185, 186, 187, 188, 189],\n    [186, 187, 188, 189, 190],\n    [187, 188, 189, 190, 191],\n    [188, 189, 190, 191, 192],\n    [189, 190, 191, 192, 193],\n    [190, 191, 192, 193, 194],\n    [191, 192, 193, 194, 195],\n    [192, 193, 194, 195, 196],\n    [193, 194, 195, 196, 197],\n    [194, 195, 196, 197, 198],\n    [195, 196, 197, 198, 199],\n    [196, 197, 198, 199, 200],\n    [197, 198, 199, 200, 201],\n    [198, 199, 200, 201, 202],\n    [199, 200, 201, 202, 203],\n    [200, 201, 202, 203, 204],\n    [201, 202, 203, 204, 205],\n    [202, 203, 204, 205, 206],\n    [203, 204, 205, 206, 207],\n    [204, 205, 206, 207, 208],\n    [205, 206, 207, 208, 209],\n    [206, 207, 208, 209, 210],\n    [207, 208, 209, 210, 211],\n    [208, 209, 210, 211, 212],\n    [209, 210, 211, 212, 213],\n    [210, 211, 212, 213, 214],\n    [211, 212, 213, 214, 215],\n    [212, 213, 214, 215, 216],\n    [213, 214, 215, 216, 217],\n    [214, 215, 216, 217, 218],\n    [215, 216, 217, 218, 219],\n    [216, 217, 218, 219, 220],\n    [217, 218, 219, 220, 221],\n    [218, 219, 220, 221, 222],\n    [219, 220, 221, 222, 223],\n    [220, 221, 222, 223, 224],\n    [221, 222, 223, 224, 225],\n    [222, 223, 224, 225, 226],\n    [223, 224, 225, 226, 227],\n    [224, 225, 226, 227, 228],\n    [225, 226, 227, 228, 229],\n    [226, 227, 228, 229, 230],\n    [227, 228, 229, 230, 231],\n    [228, 229, 230, 231, 232],\n    [229, 230, 231, 232, 233],\n    [230, 231, 232, 233, 234],\n    [231, 232, 233, 234, 235],\n    [232, 233, 234, 235, 236],\n    [233, 234, 235, 236, 237],\n    [234, 235, 236, 237, 238],\n    [235, 236, 237, 238, 239],\n    [236, 237, 238, 239, 240],\n    [237, 238, 239, 240, 241],\n    [238, 239, 240, 241, 242],\n    [239, 240, 241, 242, 243],\n    [240, 241, 242, 243, 244],\n    [241, 242, 243, 244, 245],\n    [242, 243, 244, 245, 246],\n    [243, 244, 245, 246, 247],\n    [244, 245, 246, 247, 248],\n    [245, 246, 247, 248, 249],\n    [246, 247, 248, 249, 250],\n    [247, 248, 249, 250, 251],\n    [248, 249, 250, 251, 252],\n    [249, 250, 251, 252, 253],\n    [250, 251, 252, 253, 254],\n    [251, 252, 253, 254, 255],\n    [252, 253, 254, 255, 256],\n    [253, 254, 255, 256, 257],\n    [254, 255, 256, 257, 258],\n    [255, 256, 257, 258, 259],\n    [256, 257, 258, 259, 260],\n    [257, 258, 259, 260, 261],\n    [258, 259, 260, 261, 262],\n    [259, 260, 261, 262, 263],\n    [260, 261, 262, 263, 264],\n    [261, 262, 263, 264, 265],\n    [262, 263, 264, 265, 266],\n    [263, 264, 265, 266, 267],\n    [264, 265, 266, 267, 268],\n    [265, 266, 267, 268, 269],\n    [266, 267, 268, 269, 270],\n    [267, 268, 269, 270, 271],\n    [268, 269, 270, 271, 272],\n    [269, 270, 271, 272, 273],\n    [270, 271, 272, 273, 274],\n    [271, 272, 273, 274, 275],\n    [272, 273, 274, 275, 276],\n    [273, 274, 275, 276, 277],\n    [274, 275, 276, 277, 278],\n    [275, 276, 277, 278, 279],\n    [276, 277, 278, 279, 280],\n    [277, 278, 279, 280, 281],\n    [278, 279, 280, 281, 282],\n    [279, 280, 281, 282, 283],\n    [280, 281, 282, 283, 284],\n    [281, 282, 283, 284, 285],\n    [282, 283, 284, 285, 286],\n    [283, 284, 285, 286, 287],\n    [284, 285, 286, 287, 288],\n    [285, 286, 287, 288, 289],\n    [286, 287, 288, 289, 290],\n    [287, 288, 289, 290, 291],\n    [288, 289, 290, 291, 292],\n    [289, 290, 291, 292, 293],\n    [290, 291, 292, 293, 294],\n    [291, 292, 293, 294, 295],\n    [292, 293, 294, 295, 296],\n    [293, 294, 295, 296, 297],\n    [294, 295, 296, 297, 298],\n    [295, 296, 297, 298, 299],\n    [296, 297, 298, 299, 300],\n    [297, 298, 299, 300, 301],\n    [298, 299, 300, 301, 302],\n    [299, 300, 301, 302, 303],\n    [300, 301, 302, 303, 304],\n    [301, 302, 303, 304, 305],\n    [302, 303, 304, 305, 306],\n    [303, 304, 305, 306, 307],\n    [304, 305, 306, 307, 308],\n    [305, 306, 307, 308, 309],\n    [306, 307, 308, 309, 310],\n    [307, 308, 309, 310, 311],\n    [308, 309, 310, 311, 312],\n    [309, 310, 311, 312, 313],\n    [310, 311, 312, 313, 314],\n    [311, 312, 313, 314, 315],\n    [312, 313, 314, 315, 316],\n    [313, 314, 315, 316, 317],\n    [314, 315, 316, 317, 318],\n    [315, 316, 317, 318, 319],\n    [316, 317, 318, 319, 320],\n    [317, 318, 319, 320, 321],\n    [318, 319, 320, 321, 322],\n    [319, 320, 321, 322, 323],\n    [320, 321, 322, 323, 324],\n    [321, 322, 323, 324, 325],\n    [322, 323, 324, 325, 326],\n    [323, 324, 325, 326, 327],\n    [324, 325, 326, 327, 328],\n    [325, 326, 327, 328, 329],\n    [326, 327, 328, 329, 330],\n    [327, 328, 329, 330, 331],\n    [328, 329, 330, 331, 332],\n    [329, 330, 331, 332, 333],\n    [330, 331, 332, 333, 334],\n    [331, 332, 333, 334, 335],\n    [332, 333, 334, 335, 336],\n    [333, 334, 335, 336, 337],\n    [334, 335, 336, 337, 338],\n    [335, 336, 337, 338, 339],\n    [336, 337, 338, 339, 340],\n    [337, 338, 339, 340, 341],\n    [338, 339, 340, 341, 342],\n    [339, 340, 341, 342, 343],\n    [340, 341, 342, 343, 344],\n    [341, 342, 343, 344, 345],\n    [342, 343, 344, 345, 346],\n    [343, 344, 345, 346, 347],\n    [344, 345, 346, 347, 348],\n    [345, 346, 347, 348, 349],\n    [346, 347, 348, 349, 350],\n    [347, 348, 349, 350, 351],\n    [348, 349, 350, 351, 352],\n    [349, 350, 351, 352, 353],\n    [350, 351, 352, 353, 354],\n    [351, 352, 353, 354, 355],\n    [352, 353, 354, 355, 356],\n    [353, 354, 355, 356, 357],\n    [354, 355, 356, 357, 358],\n    [355, 356, 357, 358, 359],\n    [356, 357, 358, 359, 360],\n    [357, 358, 359, 360, 361],\n    [358, 359, 360, 361, 362],\n    [359, 360, 361, 362, 363],\n    [360, 361, 362, 363, 364],\n    [361, 362, 363, 364, 365],\n    [362, 363, 364, 365, 366],\n    [363, 364, 365, 366, 367],\n    [364, 365, 366, 367, 368],\n    [365, 366, 367, 368, 369],\n    [366, 367, 368, 369, 370],\n    [367, 368, 369, 370, 371],\n    [368, 369, 370, 371, 372],\n    [369, 370, 371, 372, 373],\n    [370, 371, 372, 373, 374],\n    [371, 372, 373, 374, 375],\n    [372, 373, 374, 375, 376],\n    [373, 374, 375, 376, 377],\n    [374, 375, 376, 377, 378],\n    [375, 376, 377, 378, 379],\n    [376, 377, 378, 379, 380],\n    [377, 378, 379, 380, 381],\n    [378, 379, 380, 381, 382],\n    [379, 380, 381, 382, 383],\n    [380, 381, 382, 383, 384],\n    [381, 382, 383, 384, 385],\n    [382, 383, 384, 385, 386],\n    [383, 384, 385, 386, 387],\n    [384, 385, 386, 387, 388],\n    [385, 386, 387, 388, 389],\n    [386, 387, 388, 389, 390],\n    [387, 388, 389, 390, 391],\n    [388, 389, 390, 391, 392],\n    [389, 390, 391, 392, 393],\n    [390, 391, 392, 393, 394],\n    [391, 392, 393, 394, 395],\n    [392, 393, 394, 395, 396],\n    [393, 394, 395, 396, 397],\n    [394, 395, 396, 397, 398],\n    [395, 396, 397, 398, 399],\n\n    [0, 4, 8, 12, 14],\n    [1, 5, 9, 13, 17],\n    [2, 6, 10, 14, 18],\n    [3, 7, 11, 15, 19],\n    [0, 5, 10, 15, 20],\n    [3, 6, 9, 12, 15]\n  ]\n};\n\nconst indicateVictory = (cells, grid) => {\n  if (grid === 9) {\n    const possibleStreaks = streaks.nine;\n    for (let i = 0; i < possibleStreaks.length; i += 1) {\n      const [a, b, c] = possibleStreaks[i];\n      if (cells[a] && cells[a] === cells[b] && cells[a] === cells[c]) {\n        return {\n          winner: cells[a],\n          winningRow: [a, b, c]\n        };\n      }\n    }\n  } else if (grid === 16) {\n    const possibleStreaks = streaks.sixteen;\n    for (let i = 0; i < possibleStreaks.length; i += 1) {\n      const [a, b, c, d] = possibleStreaks[i];\n      if (\n        cells[a] &&\n        cells[a] === cells[b] &&\n        cells[a] === cells[c] &&\n        cells[a] === cells[d]\n      ) {\n        return {\n          winner: cells[a],\n          winningRow: [a, b, c, d]\n        };\n      }\n    }\n  }\n  return {\n    winner: null,\n    winningRow: [null, null, null]\n  };\n};\nconst getGameScore = (winner, movesCount) => {\n  let score;\n  const urgency = movesCount === 0 ? -80 : movesCount;\n  // if its an immediate win return highest score always.\n  if (winner === 'X') {\n    score = -20 + urgency;\n  } else if (winner === 'O') {\n    score = 20 - urgency;\n  } else {\n    score = 0;\n  }\n  return score;\n};\nconst getAvailableMoves = board => {\n  // returns an array of available cells\n  const available = [];\n  board.forEach((cell, cellIndex) => {\n    if (cell === null) {\n      available.push(cellIndex);\n    }\n  });\n  return available;\n};\nconst minMax = (board, xTurn, grid, depth = 0) => {\n  const { winner } = indicateVictory(board, grid);\n  let score = null;\n  const moves = getAvailableMoves(board);\n  if (winner || moves.length === 0) {\n    return getGameScore(winner, depth);\n  }\n  moves.forEach(move => {\n    const newBoard = board.slice();\n    newBoard[move] = xTurn ? 'X' : 'O';\n    const moveScore = minMax(\n      newBoard,\n      !xTurn,\n      grid,\n      // eslint-disable-next-line no-param-reassign\n      ++depth\n    );\n    if (xTurn) {\n      if (moveScore < score || score === null) {\n        score = moveScore;\n      }\n    } else if (moveScore > score || score === null) {\n      score = moveScore;\n    }\n  });\n  return score;\n};\n\nexport const getBestMove = (board, grid, xTurn) => {\n  let bestScore = null;\n  let bestMove = null;\n  const moves = getAvailableMoves(board);\n  console.log(`available moves: ${moves.length}`);\n  console.log(moves);\n  // on 4x4 grid recursive analysis is applied for 8 or less options.\n  if (grid === 9 || moves.length <= 8) {\n    if (grid === 9 && moves.length === 8 && !board[4]) {\n      return (bestMove = 4);\n    }\n    moves.forEach(move => {\n      const newBoard = board.slice();\n      newBoard[move] = xTurn ? 'X' : 'O';\n      const newScore = minMax(newBoard, !xTurn, grid);\n      console.log(`${move}'s score: ${newScore}`);\n      if (xTurn) {\n        if (newScore < bestScore || bestScore === null) {\n          bestScore = newScore;\n          bestMove = move;\n        }\n      } else if (newScore > bestScore || bestScore === null) {\n        bestScore = newScore;\n        bestMove = move;\n      }\n    });\n  } else {\n    /* for 4x4 grids I implemented simple logic for the first few moves to reduce system overload.\n      Recursive analysis of 9 or more available moves will decrease performance and might even cause the game to crash.\n\n      This logic calculates threat and advantage of current board's state, compares the two and prioritises the highest.\n      Then the AI makes his move based on his current priority, if it is to block a threat or build up an advantage. */\n    const enemy = xTurn ? 'O' : 'X';\n    const self = xTurn ? 'X' : 'O';\n    let threat;\n    let advantage;\n    let priority = -1;\n    if (moves.length === 200) {\n      const openers = [0, 3, 12, 15, 24];\n      openers.forEach(opener => {\n        if (!board[opener]) {\n          bestMove = opener;\n        }\n      });\n    }\n    streaks.sixteen.forEach(streak => {\n      threat = streak.filter(cell => {\n        return board[cell] === enemy;\n      }).length;\n      advantage = streak.filter(cell => {\n        return board[cell] === self;\n      }).length;\n      const full = advantage + threat === 4;\n      if (!full) {\n        if (threat > advantage && threat > priority) {\n          streak.forEach(cell => {\n            if (!board[cell]) {\n              bestMove = cell;\n            }\n            priority = threat;\n          });\n        } else if (advantage > threat && advantage > priority) {\n          streak.forEach(cell => {\n            if (!board[cell]) {\n              bestMove = cell;\n            }\n            priority = advantage;\n          });\n        }\n      }\n      console.log(\n        `${streak}: threat: ${threat} advantage: ${advantage} full: ${full}`\n      );\n    });\n    console.log(`priority: ${priority}`);\n  }\n  console.log(`best move: ${bestMove} score: ${bestScore}`);\n  return bestMove;\n};\n\nexport const aiMove = (bestMove, board, difficulty) => {\n  // AI will make his move based on the difficulty level.\n  const moves = getAvailableMoves(board);\n  const randomChoice = moves[Math.floor(Math.random() * moves.length)];\n  let choice;\n  if (difficulty === 'novice') {\n    if (Math.random() * 100 <= 60) {\n      choice = bestMove;\n    } else {\n      choice = randomChoice;\n    }\n    console.log(`Novice Move: ${choice}`);\n  } else if (difficulty === 'easy') {\n    if (Math.random() * 100 <= 20) {\n      choice = bestMove;\n    } else {\n      choice = randomChoice;\n    }\n    console.log(`Easy Move: ${choice}`);\n  } else if (difficulty === 'expert') {\n    choice = bestMove;\n    console.log(`expert Move: ${choice}`);\n  }\n  return choice;\n};\n"]},"metadata":{},"sourceType":"module"}