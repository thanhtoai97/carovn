{"ast":null,"code":"var _jsxFileName = \"/Users/lttttoai/Documents/GitHub/carovn/src/components/Board.js\";\n\n/* eslint-disable react/no-unused-state */\nimport React from 'react';\nimport Square from './Square';\n/* \nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(400).fill(null),\n      xIsNext: true\n    };\n  }\n\n  renderSquare(i) {\n    const { winner, squares } = this.props;\n    const winningSquare = !!(winner && winner.includes(i));\n    return (\n      <Square\n        key={`square ${i}`}\n        value={squares[i]}\n        onClick={() => playerMove(i)}\n        winningSquare={winningSquare}\n      />\n    );\n  }\n\n  renderSquares(n) {\n    const squares = [];\n    for (let i = n; i < n + 20; i += 1) {\n      squares.push(this.renderSquare(i));\n    }\n    return squares;\n  }\n\n  renderRows(i) {\n    return <div className=\"board-row\">{this.renderSquares(i)}</div>;\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderRows(0)}\n        {this.renderRows(20)}\n        {this.renderRows(40)}\n        {this.renderRows(60)}\n        {this.renderRows(80)}\n        {this.renderRows(100)}\n        {this.renderRows(120)}\n        {this.renderRows(140)}\n        {this.renderRows(160)}\n        {this.renderRows(180)}\n        {this.renderRows(200)}\n        {this.renderRows(220)}\n        {this.renderRows(240)}\n        {this.renderRows(260)}\n        {this.renderRows(280)}\n        {this.renderRows(300)}\n        {this.renderRows(320)}\n        {this.renderRows(340)}\n        {this.renderRows(360)}\n        {this.renderRows(380)}\n      </div>\n    );\n  }\n}\n*/\n\nconst Board = props => {\n  const checkWinningCell = cell => {\n    let winningRow = [];\n\n    if (props.winningRow) {\n      winningRow = props.winningRow.filter(winningCell => winningCell === cell).length > 0 ? 'win' : '';\n    }\n\n    return winningRow;\n  };\n\n  return React.createElement(\"div\", {\n    className: \"board-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, props.squares.map((value, squares) => {\n    return React.createElement(Square, {\n      key: squares,\n      id: squares,\n      className: checkWinningCell(squares),\n      xTurn: props.xTurn,\n      value: props.squares[squares],\n      onClick: () => props.playerMove(squares),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    });\n  }));\n};\n\nexport default Board;","map":{"version":3,"sources":["/Users/lttttoai/Documents/GitHub/carovn/src/components/Board.js"],"names":["React","Square","Board","props","checkWinningCell","cell","winningRow","filter","winningCell","length","squares","map","value","xTurn","playerMove"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgEA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AACrB,QAAMC,gBAAgB,GAAGC,IAAI,IAAI;AAC/B,QAAIC,UAAU,GAAG,EAAjB;;AACA,QAAIH,KAAK,CAACG,UAAV,EAAsB;AACpBA,MAAAA,UAAU,GACRH,KAAK,CAACG,UAAN,CAAiBC,MAAjB,CAAwBC,WAAW,IAAIA,WAAW,KAAKH,IAAvD,EAA6DI,MAA7D,GAAsE,CAAtE,GACI,KADJ,GAEI,EAHN;AAID;;AACD,WAAOH,UAAP;AACD,GATD;;AAUA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,KAAK,CAACO,OAAN,CAAcC,GAAd,CAAkB,CAACC,KAAD,EAAQF,OAAR,KAAoB;AACrC,WACE,oBAAC,MAAD;AACE,MAAA,GAAG,EAAEA,OADP;AAEE,MAAA,EAAE,EAAEA,OAFN;AAGE,MAAA,SAAS,EAAEN,gBAAgB,CAACM,OAAD,CAH7B;AAIE,MAAA,KAAK,EAAEP,KAAK,CAACU,KAJf;AAKE,MAAA,KAAK,EAAEV,KAAK,CAACO,OAAN,CAAcA,OAAd,CALT;AAME,MAAA,OAAO,EAAE,MAAMP,KAAK,CAACW,UAAN,CAAiBJ,OAAjB,CANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAUD,GAXA,CADH,CADF;AAgBD,CA3BD;;AA4BA,eAAeR,KAAf","sourcesContent":["/* eslint-disable react/no-unused-state */\nimport React from 'react';\nimport Square from './Square';\n\n/* \nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(400).fill(null),\n      xIsNext: true\n    };\n  }\n\n  renderSquare(i) {\n    const { winner, squares } = this.props;\n    const winningSquare = !!(winner && winner.includes(i));\n    return (\n      <Square\n        key={`square ${i}`}\n        value={squares[i]}\n        onClick={() => playerMove(i)}\n        winningSquare={winningSquare}\n      />\n    );\n  }\n\n  renderSquares(n) {\n    const squares = [];\n    for (let i = n; i < n + 20; i += 1) {\n      squares.push(this.renderSquare(i));\n    }\n    return squares;\n  }\n\n  renderRows(i) {\n    return <div className=\"board-row\">{this.renderSquares(i)}</div>;\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderRows(0)}\n        {this.renderRows(20)}\n        {this.renderRows(40)}\n        {this.renderRows(60)}\n        {this.renderRows(80)}\n        {this.renderRows(100)}\n        {this.renderRows(120)}\n        {this.renderRows(140)}\n        {this.renderRows(160)}\n        {this.renderRows(180)}\n        {this.renderRows(200)}\n        {this.renderRows(220)}\n        {this.renderRows(240)}\n        {this.renderRows(260)}\n        {this.renderRows(280)}\n        {this.renderRows(300)}\n        {this.renderRows(320)}\n        {this.renderRows(340)}\n        {this.renderRows(360)}\n        {this.renderRows(380)}\n      </div>\n    );\n  }\n}\n*/\n\nconst Board = props => {\n  const checkWinningCell = cell => {\n    let winningRow = [];\n    if (props.winningRow) {\n      winningRow =\n        props.winningRow.filter(winningCell => winningCell === cell).length > 0\n          ? 'win'\n          : '';\n    }\n    return winningRow;\n  };\n  return (\n    <div className=\"board-row\">\n      {props.squares.map((value, squares) => {\n        return (\n          <Square\n            key={squares}\n            id={squares}\n            className={checkWinningCell(squares)}\n            xTurn={props.xTurn}\n            value={props.squares[squares]}\n            onClick={() => props.playerMove(squares)}\n          />\n        );\n      })}\n    </div>\n  );\n};\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}