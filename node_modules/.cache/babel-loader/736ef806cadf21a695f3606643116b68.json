{"ast":null,"code":"var _jsxFileName = \"/Users/lttttoai/Documents/GitHub/carovn/src/containers/user/user.js\";\n\n/* eslint-disable react/no-unused-state */\n\n/* eslint-disable no-undef */\n\n/* eslint-disable react/state-in-constructor */\nimport React from 'react';\nexport default class Logined extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      person: null\n    };\n  }\n\n  async componentDidMount() {\n    const url = 'http://localhost:3002/me/';\n    const respose = await fetch(url);\n    const data = await respose.json();\n    this.setState({\n      person: data.results[0],\n      loading: false\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          loading = _this$state.loading,\n          person = _this$state.person;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, loading || !person ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \" loading...\") : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, person._id), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, person.iat)));\n  }\n\n}\nexport const changeName = (email, name) => {\n  let res = true;\n  return dispatch => {\n    fetch('https://btcn6.herokuapp.com/users/changeName', {\n      method: 'post',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        name\n      })\n    }).then(response => {\n      if (response.status !== 200) {\n        res = false;\n      }\n\n      return response.json();\n    }).then(response => {\n      if (res) {\n        dispatch(getUser(response));\n      } else {\n        dispatch(loginFailed(response.message));\n      }\n    });\n  };\n};\nexport const changePassword = (email, password) => {\n  let res = true;\n  return dispatch => {\n    fetch('https://btcn6.herokuapp.com/users/changePassword', {\n      method: 'post',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }).then(response => {\n      if (response.status !== 200) {\n        res = false;\n      }\n\n      return response.json();\n    }).then(response => {\n      if (res) {\n        dispatch(getUser(response));\n      } else {\n        dispatch(loginFailed(response.message));\n      }\n    });\n  };\n};","map":{"version":3,"sources":["/Users/lttttoai/Documents/GitHub/carovn/src/containers/user/user.js"],"names":["React","Logined","Component","state","loading","person","componentDidMount","url","respose","fetch","data","json","setState","results","render","_id","iat","changeName","email","name","res","dispatch","method","headers","Accept","body","JSON","stringify","then","response","status","getUser","loginFailed","message","changePassword","password"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-unused-state */\n/* eslint-disable no-undef */\n/* eslint-disable react/state-in-constructor */\nimport React from 'react';\n\nexport default class Logined extends React.Component {\n  state = {\n    loading: true,\n    person: null\n  };\n\n  async componentDidMount() {\n    const url = 'http://localhost:3002/me/';\n    const respose = await fetch(url);\n    const data = await respose.json();\n    this.setState({ person: data.results[0], loading: false });\n  }\n\n  render() {\n    const { loading, person } = this.state;\n    return (\n      <div>\n        {loading || !person ? (\n          <div> loading...</div>\n        ) : (\n          <div>\n            <div>{person._id}</div>\n            <div>{person.iat}</div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport const changeName = (email, name) => {\n  let res = true;\n  return dispatch => {\n    fetch('https://btcn6.herokuapp.com/users/changeName', {\n      method: 'post',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n\n      body: JSON.stringify({\n        email,\n        name\n      })\n    })\n      .then(response => {\n        if (response.status !== 200) {\n          res = false;\n        }\n        return response.json();\n      })\n      .then(response => {\n        if (res) {\n          dispatch(getUser(response));\n        } else {\n          dispatch(loginFailed(response.message));\n        }\n      });\n  };\n};\n\nexport const changePassword = (email, password) => {\n  let res = true;\n  return dispatch => {\n    fetch('https://btcn6.herokuapp.com/users/changePassword', {\n      method: 'post',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n\n      body: JSON.stringify({\n        email,\n        password\n      })\n    })\n      .then(response => {\n        if (response.status !== 200) {\n          res = false;\n        }\n        return response.json();\n      })\n      .then(response => {\n        if (res) {\n          dispatch(getUser(response));\n        } else {\n          dispatch(loginFailed(response.message));\n        }\n      });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}