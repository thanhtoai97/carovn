{"ast":null,"code":"var _jsxFileName = \"/Users/lttttoai/Documents/GitHub/carovn/src/components/Square.js\";\nimport React from 'react';\n/*\nfunction Square(props) {\n  const winningSquareStyle = {\n    backgroundColor: 'yellow'\n  };\n  const { winningSquare, onClick, value } = props;\n  return (\n    <button\n      type=\"button\"\n      className=\"square\"\n      style={winningSquare ? winningSquareStyle : null}\n      onClick={onClick}\n    >\n      {value}\n    </button>\n  );\n} */\n\nconst Square = props => {\n  const whenToClick = cell => {\n    return props.available ? props.onClick(cell) : null;\n  };\n\n  return React.createElement(\"button\", {\n    type: \"button\",\n    className: \"square\",\n    onClick: () => whenToClick(props.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, props.value, \" \", placeholder);\n};\n\nexport default Square;","map":{"version":3,"sources":["/Users/lttttoai/Documents/GitHub/carovn/src/components/Square.js"],"names":["React","Square","props","whenToClick","cell","available","onClick","id","value","placeholder"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA;;;;;;;;;;;;;;;;;;AAkBA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AACtB,QAAMC,WAAW,GAAGC,IAAI,IAAI;AAC1B,WAAOF,KAAK,CAACG,SAAN,GAAkBH,KAAK,CAACI,OAAN,CAAcF,IAAd,CAAlB,GAAwC,IAA/C;AACD,GAFD;;AAGA,SACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,QAFZ;AAGE,IAAA,OAAO,EAAE,MAAMD,WAAW,CAACD,KAAK,CAACK,EAAP,CAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGL,KAAK,CAACM,KALT,OAKiBC,WALjB,CADF;AASD,CAbD;;AAeA,eAAeR,MAAf","sourcesContent":["import React from 'react';\n/*\nfunction Square(props) {\n  const winningSquareStyle = {\n    backgroundColor: 'yellow'\n  };\n  const { winningSquare, onClick, value } = props;\n  return (\n    <button\n      type=\"button\"\n      className=\"square\"\n      style={winningSquare ? winningSquareStyle : null}\n      onClick={onClick}\n    >\n      {value}\n    </button>\n  );\n} */\n\nconst Square = props => {\n  const whenToClick = cell => {\n    return props.available ? props.onClick(cell) : null;\n  };\n  return (\n    <button\n      type=\"button\"\n      className=\"square\"\n      onClick={() => whenToClick(props.id)}\n    >\n      {props.value} {placeholder}\n    </button>\n  );\n};\n\nexport default Square;\n"]},"metadata":{},"sourceType":"module"}