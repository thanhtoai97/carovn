{"ast":null,"code":"/* eslint-disable camelcase */\nimport axios from 'axios';\nimport * as ActionsTypes from '../constants/actionsType';\nconst apiURL = 'http://localhost:3002/users';\nconst client = axios.create({\n  baseURL: apiURL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\nconst register_Success = registered => ({\n  type: ActionsTypes.AUTH_REGISTER_SUCCESS,\n  registered\n});\n\nconst register_Pending = () => ({\n  type: ActionsTypes.AUTH_REGISTER_PENDING\n});\n\nconst register_Error = error => ({\n  type: ActionsTypes.AUTH_REGISTER_ERROR,\n  error\n});\n\nexport const registerAsync = (name, email, password) => {\n  return dispatch => {\n    dispatch(register_Pending());\n    client.post('/register', {\n      name,\n      email,\n      password\n    }).then(response => {\n      dispatch(register_Success(response.data));\n      localStorage.setItem('loggedInUser', JSON.stringify(response.data));\n    }).catch(error => {\n      dispatch(register_Error(error));\n    });\n  };\n};\nexport default registerAsync;","map":{"version":3,"sources":["/Users/lttttoai/Documents/GitHub/carovn/src/modules/Register/actions/index.js"],"names":["axios","ActionsTypes","apiURL","client","create","baseURL","headers","register_Success","registered","type","AUTH_REGISTER_SUCCESS","register_Pending","AUTH_REGISTER_PENDING","register_Error","error","AUTH_REGISTER_ERROR","registerAsync","name","email","password","dispatch","post","then","response","data","localStorage","setItem","JSON","stringify","catch"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,YAAZ,MAA8B,0BAA9B;AAEA,MAAMC,MAAM,GAAG,6BAAf;AACA,MAAMC,MAAM,GAAGH,KAAK,CAACI,MAAN,CAAa;AAC1BC,EAAAA,OAAO,EAAEH,MADiB;AAE1BI,EAAAA,OAAO,EAAE;AACP,oBAAgB;AADT;AAFiB,CAAb,CAAf;;AAOA,MAAMC,gBAAgB,GAAGC,UAAU,KAAK;AACtCC,EAAAA,IAAI,EAAER,YAAY,CAACS,qBADmB;AAEtCF,EAAAA;AAFsC,CAAL,CAAnC;;AAKA,MAAMG,gBAAgB,GAAG,OAAO;AAC9BF,EAAAA,IAAI,EAAER,YAAY,CAACW;AADW,CAAP,CAAzB;;AAIA,MAAMC,cAAc,GAAGC,KAAK,KAAK;AAC/BL,EAAAA,IAAI,EAAER,YAAY,CAACc,mBADY;AAE/BD,EAAAA;AAF+B,CAAL,CAA5B;;AAKA,OAAO,MAAME,aAAa,GAAG,CAACC,IAAD,EAAOC,KAAP,EAAcC,QAAd,KAA2B;AACtD,SAAOC,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAACT,gBAAgB,EAAjB,CAAR;AACAR,IAAAA,MAAM,CACHkB,IADH,CACQ,WADR,EACqB;AAAEJ,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA;AAAf,KADrB,EAEGG,IAFH,CAEQC,QAAQ,IAAI;AAChBH,MAAAA,QAAQ,CAACb,gBAAgB,CAACgB,QAAQ,CAACC,IAAV,CAAjB,CAAR;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCC,IAAI,CAACC,SAAL,CAAeL,QAAQ,CAACC,IAAxB,CAArC;AACD,KALH,EAMGK,KANH,CAMSf,KAAK,IAAI;AACdM,MAAAA,QAAQ,CAACP,cAAc,CAACC,KAAD,CAAf,CAAR;AACD,KARH;AASD,GAXD;AAYD,CAbM;AAeP,eAAeE,aAAf","sourcesContent":["/* eslint-disable camelcase */\nimport axios from 'axios';\nimport * as ActionsTypes from '../constants/actionsType';\n\nconst apiURL = 'http://localhost:3002/users';\nconst client = axios.create({\n  baseURL: apiURL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\nconst register_Success = registered => ({\n  type: ActionsTypes.AUTH_REGISTER_SUCCESS,\n  registered\n});\n\nconst register_Pending = () => ({\n  type: ActionsTypes.AUTH_REGISTER_PENDING\n});\n\nconst register_Error = error => ({\n  type: ActionsTypes.AUTH_REGISTER_ERROR,\n  error\n});\n\nexport const registerAsync = (name, email, password) => {\n  return dispatch => {\n    dispatch(register_Pending());\n    client\n      .post('/register', { name, email, password })\n      .then(response => {\n        dispatch(register_Success(response.data));\n        localStorage.setItem('loggedInUser', JSON.stringify(response.data));\n      })\n      .catch(error => {\n        dispatch(register_Error(error));\n      });\n  };\n};\n\nexport default registerAsync;\n"]},"metadata":{},"sourceType":"module"}