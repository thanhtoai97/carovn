{"ast":null,"code":"var _jsxFileName = \"/Users/lttttoai/Documents/GitHub/carovn/src/components/Board.js\";\nimport React from 'react';\nimport Square from './Square'; // import { playerMove } from '../acctions/gameAction';\n\n/*\nconst Board = props => {\n  const { squares, xIsNext } = props;\n  return (\n    <div className=\"board-row\">\n      {squares.map((value, square) => {\n        return (\n          <Square\n            key={square.id}\n            id={square}\n            className=\"square\"\n            xIsNext={xIsNext}\n            value={squares[square]}\n            onClick={() => props.playerMove(square)}\n          />\n        );\n      })}\n    </div>\n  );\n};\n*/\n\nclass Board extends React.Component {\n  // Create the 3 x 3 board\n  createBoard(row, col) {\n    const board = [];\n    let cellCounter = 0;\n\n    for (let i = 0; i < row; i += 1) {\n      const columns = [];\n\n      for (let j = 0; j < col; j += 1) {\n        columns.push(this.renderSquare(cellCounter += 1));\n      }\n\n      board.push(React.createElement(\"div\", {\n        key: i,\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, columns));\n    }\n\n    return board;\n  }\n\n  renderSquare(i) {\n    const _this$props = this.props,\n          squares = _this$props.squares,\n          playerMove = _this$props.playerMove;\n    return React.createElement(Square, {\n      className: \"square\",\n      key: i,\n      value: squares[i],\n      onClick: () => playerMove(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, this.createBoard(20, 20));\n  }\n\n}\n/*\nconst Board = props => {\n  const renderSquare = move => {\n    const { winner, squares, onClick } = props;\n    const winningSquare = !!(winner && winner.includes(move));\n    return (\n      <Square\n        key={`square ${move}`}\n        value={squares[move]}\n        onClick={() => onClick(move)}\n        winningSquare={winningSquare}\n      />\n    );\n  };\n\n  const renderSquares = n => {\n    const squares = [];\n    for (let i = n; i < n + 20; i += 1) {\n      squares.push(renderSquare(i));\n    }\n    return squares;\n  };\n\n  const renderRows = i => {\n    return <div className=\"board-row\">{renderSquares(i)}</div>;\n  };\n\n  return (\n    <div>\n      {renderRows(0)}\n      {renderRows(20)}\n      {renderRows(40)}\n      {renderRows(60)}\n      {renderRows(80)}\n      {renderRows(100)}\n      {renderRows(120)}\n      {renderRows(140)}\n      {renderRows(160)}\n      {renderRows(180)}\n      {renderRows(200)}\n      {renderRows(220)}\n      {renderRows(240)}\n      {renderRows(260)}\n      {renderRows(280)}\n      {renderRows(300)}\n      {renderRows(320)}\n      {renderRows(340)}\n      {renderRows(360)}\n      {renderRows(380)}\n    </div>\n  );\n};\n*/\n\n\nexport default Board;","map":{"version":3,"sources":["/Users/lttttoai/Documents/GitHub/carovn/src/components/Board.js"],"names":["React","Square","Board","Component","createBoard","row","col","board","cellCounter","i","columns","j","push","renderSquare","props","squares","playerMove","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;AAsBA,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAoC;AAClC;AACAC,EAAAA,WAAW,CAACC,GAAD,EAAMC,GAAN,EAAW;AACpB,UAAMC,KAAK,GAAG,EAAd;AACA,QAAIC,WAAW,GAAG,CAAlB;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,GAApB,EAAyBI,CAAC,IAAI,CAA9B,EAAiC;AAC/B,YAAMC,OAAO,GAAG,EAAhB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,GAApB,EAAyBK,CAAC,IAAI,CAA9B,EAAiC;AAC/BD,QAAAA,OAAO,CAACE,IAAR,CAAa,KAAKC,YAAL,CAAmBL,WAAW,IAAI,CAAlC,CAAb;AACD;;AACDD,MAAAA,KAAK,CAACK,IAAN,CACE;AAAK,QAAA,GAAG,EAAEH,CAAV;AAAa,QAAA,SAAS,EAAC,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGC,OADH,CADF;AAKD;;AAED,WAAOH,KAAP;AACD;;AAEDM,EAAAA,YAAY,CAACJ,CAAD,EAAI;AAAA,wBACkB,KAAKK,KADvB;AAAA,UACNC,OADM,eACNA,OADM;AAAA,UACGC,UADH,eACGA,UADH;AAEd,WACE,oBAAC,MAAD;AACE,MAAA,SAAS,EAAC,QADZ;AAEE,MAAA,GAAG,EAAEP,CAFP;AAGE,MAAA,KAAK,EAAEM,OAAO,CAACN,CAAD,CAHhB;AAIE,MAAA,OAAO,EAAE,MAAMO,UAAU,CAACP,CAAD,CAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAQD;;AAEDQ,EAAAA,MAAM,GAAG;AACP,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKb,WAAL,CAAiB,EAAjB,EAAqB,EAArB,CAAN,CAAP;AACD;;AAnCiC;AAsCpC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDA,eAAeF,KAAf","sourcesContent":["import React from 'react';\nimport Square from './Square';\n// import { playerMove } from '../acctions/gameAction';\n\n/*\nconst Board = props => {\n  const { squares, xIsNext } = props;\n  return (\n    <div className=\"board-row\">\n      {squares.map((value, square) => {\n        return (\n          <Square\n            key={square.id}\n            id={square}\n            className=\"square\"\n            xIsNext={xIsNext}\n            value={squares[square]}\n            onClick={() => props.playerMove(square)}\n          />\n        );\n      })}\n    </div>\n  );\n};\n*/\n\nclass Board extends React.Component {\n  // Create the 3 x 3 board\n  createBoard(row, col) {\n    const board = [];\n    let cellCounter = 0;\n\n    for (let i = 0; i < row; i += 1) {\n      const columns = [];\n      for (let j = 0; j < col; j += 1) {\n        columns.push(this.renderSquare((cellCounter += 1)));\n      }\n      board.push(\n        <div key={i} className=\"board-row\">\n          {columns}\n        </div>\n      );\n    }\n\n    return board;\n  }\n\n  renderSquare(i) {\n    const { squares, playerMove } = this.props;\n    return (\n      <Square\n        className=\"square\"\n        key={i}\n        value={squares[i]}\n        onClick={() => playerMove(i)}\n      />\n    );\n  }\n\n  render() {\n    return <div>{this.createBoard(20, 20)}</div>;\n  }\n}\n\n/*\nconst Board = props => {\n  const renderSquare = move => {\n    const { winner, squares, onClick } = props;\n    const winningSquare = !!(winner && winner.includes(move));\n    return (\n      <Square\n        key={`square ${move}`}\n        value={squares[move]}\n        onClick={() => onClick(move)}\n        winningSquare={winningSquare}\n      />\n    );\n  };\n\n  const renderSquares = n => {\n    const squares = [];\n    for (let i = n; i < n + 20; i += 1) {\n      squares.push(renderSquare(i));\n    }\n    return squares;\n  };\n\n  const renderRows = i => {\n    return <div className=\"board-row\">{renderSquares(i)}</div>;\n  };\n\n  return (\n    <div>\n      {renderRows(0)}\n      {renderRows(20)}\n      {renderRows(40)}\n      {renderRows(60)}\n      {renderRows(80)}\n      {renderRows(100)}\n      {renderRows(120)}\n      {renderRows(140)}\n      {renderRows(160)}\n      {renderRows(180)}\n      {renderRows(200)}\n      {renderRows(220)}\n      {renderRows(240)}\n      {renderRows(260)}\n      {renderRows(280)}\n      {renderRows(300)}\n      {renderRows(320)}\n      {renderRows(340)}\n      {renderRows(360)}\n      {renderRows(380)}\n    </div>\n  );\n};\n*/\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}