{"ast":null,"code":"/* eslint-disable camelcase */\nimport axios from 'axios';\nimport * as ActionsTypes from '../constants/actionsType';\nconst apiURL = 'http://localhost:5000/users';\nconst client = axios.create({\n  baseURL: apiURL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\nconst login_Success = user => ({\n  type: ActionsTypes.AUTH_LOGIN_SUCCESS,\n  user\n});\n\nconst login_Pending = () => ({\n  type: ActionsTypes.AUTH_LOGIN_PENDING\n});\n\nconst login_Error = error => ({\n  type: ActionsTypes.AUTH_LOGIN_ERROR,\n  error\n});\n\nexport const loginAsync = (email, password) => {\n  return dispatch => {\n    dispatch(login_Pending());\n    client.post('/login', {\n      email,\n      password\n    }).then(response => {\n      dispatch(login_Success(response.json()));\n      localStorage.setItem('user', JSON.stringify(email, password));\n      window.location.href = '/';\n    }).catch(error => {\n      dispatch(login_Error(error));\n      window.location.href = '/#login';\n    });\n  };\n};\nexport default loginAsync;","map":{"version":3,"sources":["/Users/lttttoai/Documents/GitHub/carovn/src/modules/Login/actions/index.js"],"names":["axios","ActionsTypes","apiURL","client","create","baseURL","headers","login_Success","user","type","AUTH_LOGIN_SUCCESS","login_Pending","AUTH_LOGIN_PENDING","login_Error","error","AUTH_LOGIN_ERROR","loginAsync","email","password","dispatch","post","then","response","json","localStorage","setItem","JSON","stringify","window","location","href","catch"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,YAAZ,MAA8B,0BAA9B;AAEA,MAAMC,MAAM,GAAG,6BAAf;AACA,MAAMC,MAAM,GAAGH,KAAK,CAACI,MAAN,CAAa;AAC1BC,EAAAA,OAAO,EAAEH,MADiB;AAE1BI,EAAAA,OAAO,EAAE;AACP,oBAAgB;AADT;AAFiB,CAAb,CAAf;;AAOA,MAAMC,aAAa,GAAGC,IAAI,KAAK;AAC7BC,EAAAA,IAAI,EAAER,YAAY,CAACS,kBADU;AAE7BF,EAAAA;AAF6B,CAAL,CAA1B;;AAKA,MAAMG,aAAa,GAAG,OAAO;AAC3BF,EAAAA,IAAI,EAAER,YAAY,CAACW;AADQ,CAAP,CAAtB;;AAIA,MAAMC,WAAW,GAAGC,KAAK,KAAK;AAC5BL,EAAAA,IAAI,EAAER,YAAY,CAACc,gBADS;AAE5BD,EAAAA;AAF4B,CAAL,CAAzB;;AAKA,OAAO,MAAME,UAAU,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC7C,SAAOC,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAACR,aAAa,EAAd,CAAR;AACAR,IAAAA,MAAM,CACHiB,IADH,CACQ,QADR,EACkB;AAAEH,MAAAA,KAAF;AAASC,MAAAA;AAAT,KADlB,EAEGG,IAFH,CAEQC,QAAQ,IAAI;AAChBH,MAAAA,QAAQ,CAACZ,aAAa,CAACe,QAAQ,CAACC,IAAT,EAAD,CAAd,CAAR;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeV,KAAf,EAAsBC,QAAtB,CAA7B;AACAU,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,GAAvB;AACD,KANH,EAOGC,KAPH,CAOSjB,KAAK,IAAI;AACdK,MAAAA,QAAQ,CAACN,WAAW,CAACC,KAAD,CAAZ,CAAR;AACAc,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,SAAvB;AACD,KAVH;AAWD,GAbD;AAcD,CAfM;AAiBP,eAAed,UAAf","sourcesContent":["/* eslint-disable camelcase */\nimport axios from 'axios';\nimport * as ActionsTypes from '../constants/actionsType';\n\nconst apiURL = 'http://localhost:5000/users';\nconst client = axios.create({\n  baseURL: apiURL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\nconst login_Success = user => ({\n  type: ActionsTypes.AUTH_LOGIN_SUCCESS,\n  user\n});\n\nconst login_Pending = () => ({\n  type: ActionsTypes.AUTH_LOGIN_PENDING\n});\n\nconst login_Error = error => ({\n  type: ActionsTypes.AUTH_LOGIN_ERROR,\n  error\n});\n\nexport const loginAsync = (email, password) => {\n  return dispatch => {\n    dispatch(login_Pending());\n    client\n      .post('/login', { email, password })\n      .then(response => {\n        dispatch(login_Success(response.json()));\n        localStorage.setItem('user', JSON.stringify(email, password));\n        window.location.href = '/';\n      })\n      .catch(error => {\n        dispatch(login_Error(error));\n        window.location.href = '/#login';\n      });\n  };\n};\n\nexport default loginAsync;\n"]},"metadata":{},"sourceType":"module"}