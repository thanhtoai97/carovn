{"ast":null,"code":"var _jsxFileName = \"/Users/lttttoai/Documents/GitHub/carovn/src/components/Board.js\";\n\n/* eslint-disable react/no-unused-state */\nimport React from 'react';\nimport Square from './Square';\n/*\nconst Board = props => {\n  const { squares, xIsNext } = props;\n  return (\n    <div className=\"board-row\">\n      {squares.map((value, square) => {\n        return (\n          <Square\n            key={square.id}\n            id={square}\n            className=\"square\"\n            xIsNext={xIsNext}\n            value={squares[square]}\n            onClick={() => props.playerMove(square)}\n          />\n        );\n      })}\n    </div>\n  );\n};\n*/\n\n/*\nclass Board extends React.Component {\n  // Create the 3 x 3 board\n  createBoard(row, col) {\n    const board = [];\n    let cellCounter = 0;\n\n    for (let i = 0; i < row; i += 1) {\n      const columns = [];\n      for (let j = 0; j < col; j += 1) {\n        columns.push(this.renderSquare((cellCounter += 1)));\n      }\n      board.push(\n        <div key={i} className=\"board-row\">\n          {columns}\n        </div>\n      );\n    }\n\n    return board;\n  }\n\n  renderSquare(i) {\n    const { squares, onClick } = this.props;\n    return (\n      <Square\n        className=\"square\"\n        key={i}\n        value={squares[i]}\n        onClick={() => onClick(i)}\n      />\n    );\n  }\n\n  render() {\n    return <div>{this.createBoard(20, 20)}</div>;\n  }\n}\n*/\n\n/*\nconst Board = props => {\n  const renderSquare = move => {\n    const { winner, squares, onClick } = props;\n    const winningSquare = !!(winner && winner.includes(move));\n    return (\n      <Square\n        key={`square ${move}`}\n        value={squares[move]}\n        onClick={() => onClick(move)}\n        winningSquare={winningSquare}\n      />\n    );\n  };\n\n  const renderSquares = n => {\n    const squares = [];\n    for (let i = n; i < n + 20; i += 1) {\n      squares.push(renderSquare(i));\n    }\n    return squares;\n  };\n\n  const renderRows = i => {\n    return <div className=\"board-row\">{renderSquares(i)}</div>;\n  };\n\n  return (\n    <div>\n      {renderRows(0)}\n      {renderRows(20)}\n      {renderRows(40)}\n      {renderRows(60)}\n      {renderRows(80)}\n      {renderRows(100)}\n      {renderRows(120)}\n      {renderRows(140)}\n      {renderRows(160)}\n      {renderRows(180)}\n      {renderRows(200)}\n      {renderRows(220)}\n      {renderRows(240)}\n      {renderRows(260)}\n      {renderRows(280)}\n      {renderRows(300)}\n      {renderRows(320)}\n      {renderRows(340)}\n      {renderRows(360)}\n      {renderRows(380)}\n    </div>\n  );\n};\n*/\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(400).fill(null),\n      xIsNext: true\n    };\n  }\n\n  renderSquare(i) {\n    const _this$props = this.props,\n          winner = _this$props.winner,\n          squares = _this$props.squares;\n    const winningSquare = !!(winner && winner.includes(i));\n    return React.createElement(Square, {\n      key: \"square \".concat(i),\n      value: squares[i] // eslint-disable-next-line no-undef\n      ,\n      onClick: () => onClick(i),\n      winningSquare: winningSquare,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    });\n  }\n\n  renderSquares(n) {\n    const squares = [];\n\n    for (let i = n; i < n + 20; i += 1) {\n      squares.push(this.renderSquare(i));\n    }\n\n    return squares;\n  }\n\n  renderRows(i) {\n    return React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, this.renderSquares(i));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, this.renderRows(0), this.renderRows(20), this.renderRows(40), this.renderRows(60), this.renderRows(80), this.renderRows(100), this.renderRows(120), this.renderRows(140), this.renderRows(160), this.renderRows(180), this.renderRows(200), this.renderRows(220), this.renderRows(240), this.renderRows(260), this.renderRows(280), this.renderRows(300), this.renderRows(320), this.renderRows(340), this.renderRows(360), this.renderRows(380));\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/lttttoai/Documents/GitHub/carovn/src/components/Board.js"],"names":["React","Square","Board","Component","constructor","props","state","squares","Array","fill","xIsNext","renderSquare","i","winner","winningSquare","includes","onClick","renderSquares","n","push","renderRows","render"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA;;;;;;;;;;;;;;;;;;;;;;AAqBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAEC,KAAK,CAAC,GAAD,CAAL,CAAWC,IAAX,CAAgB,IAAhB,CADE;AAEXC,MAAAA,OAAO,EAAE;AAFE,KAAb;AAID;;AAEDC,EAAAA,YAAY,CAACC,CAAD,EAAI;AAAA,wBACc,KAAKP,KADnB;AAAA,UACNQ,MADM,eACNA,MADM;AAAA,UACEN,OADF,eACEA,OADF;AAEd,UAAMO,aAAa,GAAG,CAAC,EAAED,MAAM,IAAIA,MAAM,CAACE,QAAP,CAAgBH,CAAhB,CAAZ,CAAvB;AACA,WACE,oBAAC,MAAD;AACE,MAAA,GAAG,mBAAYA,CAAZ,CADL;AAEE,MAAA,KAAK,EAAEL,OAAO,CAACK,CAAD,CAFhB,CAGE;AAHF;AAIE,MAAA,OAAO,EAAE,MAAMI,OAAO,CAACJ,CAAD,CAJxB;AAKE,MAAA,aAAa,EAAEE,aALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AASD;;AAEDG,EAAAA,aAAa,CAACC,CAAD,EAAI;AACf,UAAMX,OAAO,GAAG,EAAhB;;AACA,SAAK,IAAIK,CAAC,GAAGM,CAAb,EAAgBN,CAAC,GAAGM,CAAC,GAAG,EAAxB,EAA4BN,CAAC,IAAI,CAAjC,EAAoC;AAClCL,MAAAA,OAAO,CAACY,IAAR,CAAa,KAAKR,YAAL,CAAkBC,CAAlB,CAAb;AACD;;AACD,WAAOL,OAAP;AACD;;AAEDa,EAAAA,UAAU,CAACR,CAAD,EAAI;AACZ,WAAO;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4B,KAAKK,aAAL,CAAmBL,CAAnB,CAA5B,CAAP;AACD;;AAEDS,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKD,UAAL,CAAgB,CAAhB,CADH,EAEG,KAAKA,UAAL,CAAgB,EAAhB,CAFH,EAGG,KAAKA,UAAL,CAAgB,EAAhB,CAHH,EAIG,KAAKA,UAAL,CAAgB,EAAhB,CAJH,EAKG,KAAKA,UAAL,CAAgB,EAAhB,CALH,EAMG,KAAKA,UAAL,CAAgB,GAAhB,CANH,EAOG,KAAKA,UAAL,CAAgB,GAAhB,CAPH,EAQG,KAAKA,UAAL,CAAgB,GAAhB,CARH,EASG,KAAKA,UAAL,CAAgB,GAAhB,CATH,EAUG,KAAKA,UAAL,CAAgB,GAAhB,CAVH,EAWG,KAAKA,UAAL,CAAgB,GAAhB,CAXH,EAYG,KAAKA,UAAL,CAAgB,GAAhB,CAZH,EAaG,KAAKA,UAAL,CAAgB,GAAhB,CAbH,EAcG,KAAKA,UAAL,CAAgB,GAAhB,CAdH,EAeG,KAAKA,UAAL,CAAgB,GAAhB,CAfH,EAgBG,KAAKA,UAAL,CAAgB,GAAhB,CAhBH,EAiBG,KAAKA,UAAL,CAAgB,GAAhB,CAjBH,EAkBG,KAAKA,UAAL,CAAgB,GAAhB,CAlBH,EAmBG,KAAKA,UAAL,CAAgB,GAAhB,CAnBH,EAoBG,KAAKA,UAAL,CAAgB,GAAhB,CApBH,CADF;AAwBD;;AA5DiC;;AA+DpC,eAAelB,KAAf","sourcesContent":["/* eslint-disable react/no-unused-state */\nimport React from 'react';\nimport Square from './Square';\n\n/*\nconst Board = props => {\n  const { squares, xIsNext } = props;\n  return (\n    <div className=\"board-row\">\n      {squares.map((value, square) => {\n        return (\n          <Square\n            key={square.id}\n            id={square}\n            className=\"square\"\n            xIsNext={xIsNext}\n            value={squares[square]}\n            onClick={() => props.playerMove(square)}\n          />\n        );\n      })}\n    </div>\n  );\n};\n*/\n/*\nclass Board extends React.Component {\n  // Create the 3 x 3 board\n  createBoard(row, col) {\n    const board = [];\n    let cellCounter = 0;\n\n    for (let i = 0; i < row; i += 1) {\n      const columns = [];\n      for (let j = 0; j < col; j += 1) {\n        columns.push(this.renderSquare((cellCounter += 1)));\n      }\n      board.push(\n        <div key={i} className=\"board-row\">\n          {columns}\n        </div>\n      );\n    }\n\n    return board;\n  }\n\n  renderSquare(i) {\n    const { squares, onClick } = this.props;\n    return (\n      <Square\n        className=\"square\"\n        key={i}\n        value={squares[i]}\n        onClick={() => onClick(i)}\n      />\n    );\n  }\n\n  render() {\n    return <div>{this.createBoard(20, 20)}</div>;\n  }\n}\n*/\n\n/*\nconst Board = props => {\n  const renderSquare = move => {\n    const { winner, squares, onClick } = props;\n    const winningSquare = !!(winner && winner.includes(move));\n    return (\n      <Square\n        key={`square ${move}`}\n        value={squares[move]}\n        onClick={() => onClick(move)}\n        winningSquare={winningSquare}\n      />\n    );\n  };\n\n  const renderSquares = n => {\n    const squares = [];\n    for (let i = n; i < n + 20; i += 1) {\n      squares.push(renderSquare(i));\n    }\n    return squares;\n  };\n\n  const renderRows = i => {\n    return <div className=\"board-row\">{renderSquares(i)}</div>;\n  };\n\n  return (\n    <div>\n      {renderRows(0)}\n      {renderRows(20)}\n      {renderRows(40)}\n      {renderRows(60)}\n      {renderRows(80)}\n      {renderRows(100)}\n      {renderRows(120)}\n      {renderRows(140)}\n      {renderRows(160)}\n      {renderRows(180)}\n      {renderRows(200)}\n      {renderRows(220)}\n      {renderRows(240)}\n      {renderRows(260)}\n      {renderRows(280)}\n      {renderRows(300)}\n      {renderRows(320)}\n      {renderRows(340)}\n      {renderRows(360)}\n      {renderRows(380)}\n    </div>\n  );\n};\n*/\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(400).fill(null),\n      xIsNext: true\n    };\n  }\n\n  renderSquare(i) {\n    const { winner, squares } = this.props;\n    const winningSquare = !!(winner && winner.includes(i));\n    return (\n      <Square\n        key={`square ${i}`}\n        value={squares[i]}\n        // eslint-disable-next-line no-undef\n        onClick={() => onClick(i)}\n        winningSquare={winningSquare}\n      />\n    );\n  }\n\n  renderSquares(n) {\n    const squares = [];\n    for (let i = n; i < n + 20; i += 1) {\n      squares.push(this.renderSquare(i));\n    }\n    return squares;\n  }\n\n  renderRows(i) {\n    return <div className=\"board-row\">{this.renderSquares(i)}</div>;\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderRows(0)}\n        {this.renderRows(20)}\n        {this.renderRows(40)}\n        {this.renderRows(60)}\n        {this.renderRows(80)}\n        {this.renderRows(100)}\n        {this.renderRows(120)}\n        {this.renderRows(140)}\n        {this.renderRows(160)}\n        {this.renderRows(180)}\n        {this.renderRows(200)}\n        {this.renderRows(220)}\n        {this.renderRows(240)}\n        {this.renderRows(260)}\n        {this.renderRows(280)}\n        {this.renderRows(300)}\n        {this.renderRows(320)}\n        {this.renderRows(340)}\n        {this.renderRows(360)}\n        {this.renderRows(380)}\n      </div>\n    );\n  }\n}\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}